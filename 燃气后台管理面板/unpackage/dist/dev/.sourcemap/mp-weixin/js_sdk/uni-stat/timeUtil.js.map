{"version":3,"file":"timeUtil.js","sources":["js_sdk/uni-stat/timeUtil.js"],"sourcesContent":["/**\r\n * 时间工具类\r\n */\r\nlet timeUtil = {};\r\n\r\n// 尽可能的将参数转成正确的时间对象\r\ntimeUtil.getDateObject = function(date) {\r\n\tif (!date) return \"\";\r\n\tlet nowDate;\r\n\t// 如果是字符串，且纯数字，则强制转数值\r\n\tif (typeof date === \"string\" && !isNaN(date)) date = Number(date);\r\n\tif (typeof date === \"number\") {\r\n\t\tif (date.toString().length === 10) date *= 1000;\r\n\t\tnowDate = new Date(date); // 转时间对象\r\n\t} else if (typeof date === \"object\") {\r\n\t\tnowDate = new Date(date.getTime()); // 新建一个时间对象\r\n\t}\r\n\treturn nowDate;\r\n};\r\n\r\n/**\r\n * 日期格式化\r\n * @param {Date || Number} date 需要格式化的时间\r\n * timeUtil.timeFormat(new Date(),\"yyyy-MM-dd hh:mm:ss\");\r\n */\r\ntimeUtil.timeFormat = function(date, fmt = 'yyyy-MM-dd hh:mm:ss') {\r\n\ttry {\r\n\t\tif (!date) return \"\";\r\n\t\tlet nowDate = timeUtil.getDateObject(date);\r\n\t\tlet opt = {\r\n\t\t\t\"M+\": nowDate.getMonth() + 1, //月份\r\n\t\t\t\"d+\": nowDate.getDate(), //日\r\n\t\t\t\"h+\": nowDate.getHours(), //小时\r\n\t\t\t\"m+\": nowDate.getMinutes(), //分\r\n\t\t\t\"s+\": nowDate.getSeconds(), //秒\r\n\t\t\t//\"w+\": nowDate.getDay(), //周\r\n\t\t\t\"q+\": Math.floor((nowDate.getMonth() + 3) / 3), //季度\r\n\t\t\t\"S\": nowDate.getMilliseconds() //毫秒\r\n\t\t};\r\n\t\tif (/(y+)/.test(fmt)) {\r\n\t\t\tfmt = fmt.replace(RegExp.$1, (nowDate.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n\t\t}\r\n\t\tfor (let k in opt) {\r\n\t\t\tif (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n\t\t\t\tfmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (opt[k]) : ((\"00\" + opt[k]).substr((\"\" + opt[k]).length)));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fmt;\r\n\t} catch (err) {\r\n\t\t// 若格式错误,则原值显示\r\n\t\treturn time;\r\n\t}\r\n};\r\n\r\n/**\r\n * 解析日期对象属性\r\n * @param {Date || Number} date 需要转换的时间\r\n * timeUtil.getDateInfo(new Date());\r\n */\r\ntimeUtil.getDateInfo = function(date = new Date()) {\r\n\tlet nowDate = timeUtil.getDateObject(date);\r\n\tlet year = nowDate.getFullYear() + '';\r\n\tlet month = (nowDate.getMonth() + 1 < 10 ? '0' + (nowDate.getMonth() + 1) : nowDate.getMonth() + 1);\r\n\tlet day = (nowDate.getDate() < 10 ? '0' + (nowDate.getDate()) : nowDate.getDate());\r\n\tlet hour = (nowDate.getHours() < 10 ? '0' + (nowDate.getHours()) : nowDate.getHours());\r\n\tlet minute = (nowDate.getMinutes() < 10 ? '0' + (nowDate.getMinutes()) : nowDate.getMinutes());\r\n\tlet second = (nowDate.getSeconds() < 10 ? '0' + (nowDate.getSeconds()) : nowDate.getSeconds());\r\n\tlet millisecond = nowDate.getMilliseconds(); //毫秒\r\n\tlet week = nowDate.getDay(); // 周\r\n\tlet quarter = Math.floor((nowDate.getMonth() + 3) / 3); //季度\r\n\treturn {\r\n\t\tyear: Number(year),\r\n\t\tmonth: Number(month),\r\n\t\tday: Number(day),\r\n\t\thour: Number(hour),\r\n\t\tminute: Number(minute),\r\n\t\tsecond: Number(second),\r\n\t\tmillisecond: Number(millisecond),\r\n\t\tweek: Number(week),\r\n\t\tquarter: Number(quarter),\r\n\t};\r\n};\r\n\r\n/**\r\n * 获得相对当前时间的偏移 count 小时、天、周、月、季度、年的起止日期（开始和结束时间戳）\r\n * @param {Number} count 偏移量\r\n * @param {Date || Number} date 指定从哪个时间节点开始计算\r\n * timeUtil.getOffsetStartAndEnd(\"hour\", 0);\r\n * timeUtil.getOffsetStartAndEnd(\"day\", 0);\r\n * timeUtil.getOffsetStartAndEnd(\"week\", 0);\r\n * timeUtil.getOffsetStartAndEnd(\"month\", 0);\r\n * timeUtil.getOffsetStartAndEnd(\"quarter\", 0);\r\n * timeUtil.getOffsetStartAndEnd(\"year\", 0);\r\n */\r\ntimeUtil.getOffsetStartAndEnd = function(type=\"day\", count = 0, date = new Date()) {\r\n\tlet startTime, endTime;\r\n\tlet nowDate = timeUtil.getDateObject(date);\r\n\tif (type === \"hour\") {\r\n\t\t// 小时\r\n\t\t// 一小时毫秒数\r\n\t\tlet offsetMillisecond = 1000 * 60 * 60;\r\n\t\t// 相对于当前日期count个天的日期\r\n\t\tlet dateInfo = timeUtil.getDateInfo(new Date(nowDate.getTime() + (offsetMillisecond * 1 * count)));\r\n\t\t// 获得当天的起始时间\r\n\t\tstartTime = new Date(`${dateInfo.year}/${dateInfo.month}/${dateInfo.day} ${dateInfo.hour}:00:00`).getTime();\r\n\t\t// 获得当天的结束时间\r\n\t\tendTime = new Date(`${dateInfo.year}/${dateInfo.month}/${dateInfo.day} ${dateInfo.hour}:00:00`).getTime() + (offsetMillisecond -1);\r\n\t} else if (type === \"day\") {\r\n\t\t// 天\r\n\t\t// 一天的毫秒数\r\n\t\tlet offsetMillisecond = 1000 * 60 * 60 * 24;\r\n\t\t// 相对于当前日期count个天的日期\r\n\t\tlet dateInfo = timeUtil.getDateInfo(new Date(nowDate.getTime() + (offsetMillisecond * 1 * count)));\r\n\t\t// 获得当天的起始时间\r\n\t\tstartTime = new Date(`${dateInfo.year}/${dateInfo.month}/${dateInfo.day}`).getTime();\r\n\t\t// 获得当天的结束时间\r\n\t\tendTime = new Date(`${dateInfo.year}/${dateInfo.month}/${dateInfo.day}`).getTime() + (offsetMillisecond - 1);\r\n\t} else if (type === \"week\") {\r\n\t\t// 周\r\n\t\tnowDate.setDate(nowDate.getDate() - nowDate.getDay() + 1 + count * 7);\r\n\t\tlet dateInfo1 = timeUtil.getDateInfo(nowDate);\r\n\t\tnowDate.setDate(nowDate.getDate() + 7);\r\n\t\tlet dateInfo2 = timeUtil.getDateInfo(nowDate);\r\n\t\t// 开始时间\r\n\t\tstartTime = new Date(`${dateInfo1.year}/${dateInfo1.month}/${dateInfo1.day}`).getTime();\r\n\t\t// 结束时间\r\n\t\tendTime = new Date(`${dateInfo2.year}/${dateInfo2.month}/${dateInfo2.day}`).getTime() - 1;\r\n\t} else if (type === \"month\") {\r\n\t\t// 月\r\n\t\tlet dateInfo = timeUtil.getDateInfo(nowDate);\r\n\t\tlet month = dateInfo.month + count;\r\n\t\tlet year = dateInfo.year;\r\n\t\tif (month > 12) {\r\n\t\t\tyear = year + Math.floor(month / 12);\r\n\t\t\tmonth = Math.abs(month) % 12;\r\n\t\t} else if (month <= 0) {\r\n\t\t\tyear = year - 1 - Math.floor(Math.abs(month) / 12);\r\n\t\t\tmonth = 12 - Math.abs(month) % 12;\r\n\t\t}\r\n\t\tlet month_last_day = new Date(year, month, 0).getDate();\r\n\t\t// 开始时间\r\n\t\tstartTime = new Date(`${year}/${month}/1`).getTime();\r\n\t\t// 结束时间\r\n\t\tendTime = new Date(`${year}/${month}/${month_last_day}`).getTime() + (24 * 60 * 60 * 1000 - 1);\r\n\t} else if (type === \"quarter\") {\r\n\t\t// 季度\r\n\t\tnowDate.setMonth(nowDate.getMonth() + count * 3);\r\n\t\tlet dateInfo = timeUtil.getDateInfo(nowDate);\r\n\t\tlet month = dateInfo.month;\r\n\t\tif ([1, 2, 3].indexOf(month) > -1) {\r\n\t\t\t// 第1季度\r\n\t\t\tmonth = 1;\r\n\t\t} else if ([4, 5, 6].indexOf(month) > -1) {\r\n\t\t\t// 第2季度\r\n\t\t\tmonth = 4;\r\n\t\t} else if ([7, 8, 9].indexOf(month) > -1) {\r\n\t\t\t// 第3季度\r\n\t\t\tmonth = 7;\r\n\t\t} else if ([10, 11, 12].indexOf(month) > -1) {\r\n\t\t\t// 第4季度\r\n\t\t\tmonth = 10;\r\n\t\t}\r\n\t\tnowDate.setMonth(month - 1); // 因为0代表1月，所以这里要减1\r\n\t\tlet dateInfo1 = timeUtil.getDateInfo(nowDate);\r\n\t\tnowDate.setMonth(nowDate.getMonth() + 3);\r\n\t\tlet dateInfo2 = timeUtil.getDateInfo(nowDate);\r\n\t\t// 开始时间\r\n\t\tstartTime = new Date(`${dateInfo1.year}/${dateInfo1.month}/1`).getTime();\r\n\t\t// 结束时间\r\n\t\tendTime = new Date(`${dateInfo2.year}/${dateInfo2.month}/1`).getTime() - 1;\r\n\t} else if (type === \"year\") {\r\n\t\t// 年\r\n\t\tlet dateInfo = timeUtil.getDateInfo(nowDate);\r\n\t\tlet year = dateInfo.year + count;\r\n\t\t// 开始时间\r\n\t\tstartTime = new Date(`${year}/1/1`).getTime();\r\n\t\t// 结束时间\r\n\t\tendTime = new Date(`${year}/12/31`).getTime() + (24 * 60 * 60 * 1000 - 1);\r\n\t}\r\n\treturn {\r\n\t\tstartTime,\r\n\t\tendTime\r\n\t};\r\n};\r\n\r\nexport default timeUtil;\r\n"],"names":[],"mappings":"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"}