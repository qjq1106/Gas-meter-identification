{"version":3,"file":"util.js","sources":["js_sdk/uni-stat/util.js"],"sourcesContent":["/**\r\n *  以下为 uni-stat 的工具方法\r\n */\r\n\r\n// 千分位\r\nfunction regexHandleNum(num) {\r\n  return String(num).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','); // 3是千分位，4是万分位\r\n}\r\n\r\n// 新版格式化字段数据函数\r\nfunction formatterData(object) {\r\n\tlet {\r\n\t\tfieldsMap,\r\n\t\tdata,\r\n\t\tformatter = true\r\n\t} = object;\r\n\tlet rows = JSON.parse(JSON.stringify(data));\r\n\trows.map((row) => {\r\n\t\tfor (let key in row) {\r\n\t\t\tlet fieldItem = fieldsMap.find((item) => {\r\n\t\t\t\treturn item.field == key;\r\n\t\t\t});\r\n\t\t\tif (typeof fieldItem === \"object\") {\r\n\t\t\t\tlet {\r\n\t\t\t\t\tfix = 0,\r\n\t\t\t\t} = fieldItem;\r\n\t\t\t\tif (typeof fieldItem.multiple === \"number\" && typeof row[key] === \"number\") {\r\n\t\t\t\t\trow[key] = Number((row[key] * fieldItem.multiple).toFixed(fix));\r\n\t\t\t\t}\r\n\t\t\t\tif (formatter && fieldItem.formatter && typeof row[key] === \"number\") {\r\n\t\t\t\t\tif (fieldItem.formatter === \",\") {\r\n\t\t\t\t\t\trow[key] = regexHandleNum(row[key]);\r\n\t\t\t\t\t} else if (fieldItem.formatter === \"%\") {\r\n\t\t\t\t\t\trow[key] = `${(row[key] * 100).toFixed(fix)}%`\r\n\t\t\t\t\t} else if (fieldItem.formatter === \"-\") {\r\n\t\t\t\t\t\t// 时分秒格式\r\n\t\t\t\t\t\trow[key] = parseDateTime(row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn rows;\r\n}\r\n\r\n// 补全趋势图的数据\r\nfunction fillTrendChartData(data, query, fieldsMap) {\r\n\tlet { start_time, dimension } = query;\r\n\tif ([\"hour\",\"day\"].indexOf(dimension)>-1){\r\n\t\tlet timeArr = [];\r\n\t\tlet oneTime;\r\n\t\tif (dimension === \"hour\"){\r\n\t\t\toneTime = 1000*3600;\r\n\t\t} else if (dimension === \"day\"){\r\n\t\t\toneTime = 1000*3600*24;\r\n\t\t}\r\n\t\tlet start = start_time[0];\r\n\t\tlet end = start_time[1];\r\n\t\tlet nowTime = start;\r\n\t\ttimeArr = [start];\r\n\t\twhile ((nowTime+oneTime)<=end){\r\n\t\t\tnowTime += oneTime;\r\n\t\t\ttimeArr.push(nowTime);\r\n\t\t}\r\n\r\n\t\tlet newData = [];\r\n\t\tfor (let i = 0; i < timeArr.length; i++) {\r\n\t\t\tlet time = timeArr[i];\r\n\t\t\tlet dataItem = data.find((item, index) => {\r\n\t\t\t\treturn item.start_time === time;\r\n\t\t\t});\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tnewData.push(dataItem);\r\n\t\t\t} else {\r\n\t\t\t\tlet obj = {\r\n\t\t\t\t\tstart_time: time\r\n\t\t\t\t};\r\n\t\t\t\tfieldsMap.map((item, index) => {\r\n\t\t\t\t\tobj[item.field] = 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tnewData.push(obj);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newData\r\n\t} else {\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\n\r\n// 将查询条件拼接为字符串\r\nfunction stringifyQuery(query, dimension = false, delArrs = []) {\r\n\tconst queryArr = []\r\n\tconst keys = Object.keys(query)\r\n\tconst time = query.start_time\r\n\tkeys.forEach(key => {\r\n\t\tif (key === 'time_range' || delArrs.indexOf(key) !== -1) return\r\n\t\tlet val = query[key]\r\n\t\tif (val) {\r\n\t\t\tif (typeof val === 'string' && val.indexOf(key) > -1) {\r\n\t\t\t\tqueryArr.push(val)\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof val === 'string') {\r\n\t\t\t\t\tval = `\"${val}\"`\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(val)) {\r\n\t\t\t\t\tif (val.length === 2 && key.indexOf('time') > -1) {\r\n\t\t\t\t\t\tqueryArr.push(`${key} >= ${val[0]} && ${key} <= ${val[1]}`)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tval = val.map(item => `${key} == \"${item}\"`).join(' || ')\r\n\t\t\t\t\t\tval && queryArr.push(`(${val})`)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (dimension && key === 'dimension') {\n\t\t\t\t\tif (maxDeltaDay(time)) {\r\n\t\t\t\t\t\tqueryArr.push(`dimension == \"hour\"`)\r\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 判断页面，仅在pages/uni-stat/device/trend/trend和pages/uni-stat/user/trend/trend页面下，放开按小时查询的时间限制\n\t\t\t\t\t\tlet pages = getCurrentPages();\n\t\t\t\t\t\tlet page = pages[pages.length-1];\n\t\t\t\t\t\tif ([\"pages/uni-stat/device/trend/trend\",\"pages/uni-stat/user/trend/trend\"].indexOf(page.route) > -1) {\n\t\t\t\t\t\t\t// 放开按小时查询的时间限制\n\t\t\t\t\t\t\tqueryArr.push(`${key} == ${val}`)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (val && val !== `\"hour\"`) {\n\t\t\t\t\t\t\t\tqueryArr.push(`${key} == ${val}`)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqueryArr.push(`dimension == \"day\"`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueryArr.push(`${key} == ${val}`)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tconst queryStr = queryArr.join(' && ')\r\n\treturn queryStr || {}\r\n}\r\n\r\n// 根据页面字段配置 fieldsMap 数据计算、格式化字段\r\nfunction mapfields(map, data = {}, goal, prefix = '', prop = 'value') {\r\n\tconst goals = [],\r\n\t\targsGoal = goal\r\n\tmap = JSON.parse(JSON.stringify(map))\r\n\tconst origin = JSON.parse(JSON.stringify(data))\r\n\tfor (const mapper of map) {\r\n\t\tlet {\r\n\t\t\tfield,\r\n\t\t\tcomputed,\r\n\t\t\tformatter,\r\n\t\t\tdisable,\r\n\t\t\tfix\r\n\t\t} = mapper\r\n\t\tif (!disable) {\r\n\t\t\tgoal = argsGoal || mapper\r\n\t\t\tconst hasValue = goal.hasOwnProperty(prop)\r\n\t\t\tconst preField = prefix + field\r\n\t\t\tif (data) {\r\n\t\t\t\tconst value = data[preField]\r\n\t\t\t\tif (computed) {\r\n\t\t\t\t\tconst computedFields = computed.split('/')\r\n\t\t\t\t\tlet [dividend, divisor] = computedFields\r\n\t\t\t\t\tdividend = Number(origin[prefix + dividend])\r\n\t\t\t\t\tdivisor = Number(origin[prefix + divisor])\r\n\t\t\t\t\tconst val = format(division(dividend, divisor), formatter, fix)\r\n\t\t\t\t\tif (hasValue && field === goal.field) {\r\n\t\t\t\t\t\tgoal[prop] = val\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgoal[field] = val\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tconst val = format(value, formatter, fix)\r\n\t\t\t\t\t\tif (hasValue) {\r\n\t\t\t\t\t\t\tif (goal.field === field) {\r\n\t\t\t\t\t\t\t\tgoal[prop] = val\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgoal[field] = val\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (hasValue) {\r\n\t\t\t\tgoals.push(goal)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn goals\r\n}\r\n\r\n// 将查询条件对象拼接为字符串，给 client db 的 field 属性消费\r\nfunction stringifyField(mapping, goal, prop) {\r\n\tif (goal) {\r\n\t\tmapping = mapping.filter(f => f.field === goal)\r\n\t}\r\n\tif (prop) {\r\n\t\tmapping = mapping.filter(f => f.field && f.hasOwnProperty(prop))\r\n\t}\r\n\tconst fieldString = mapping.map(f => {\r\n\t\tlet fields = []\r\n\t\tif (f.computed) {\r\n\t\t\tfields = f.computed.split('/')\r\n\t\t} else {\r\n\t\t\tfields.push(f.field)\r\n\t\t}\r\n\t\tfields = fields.map(field => {\r\n\t\t\tif (f.stat === -1) {\r\n\t\t\t\treturn field\r\n\t\t\t} else {\r\n\t\t\t\treturn `${field} as ${ 'temp_' + field}`\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn fields.join()\r\n\t})\r\n\treturn fieldString.join()\r\n}\r\n\r\n// 将查询条件对象拼接为字符串，给 client db 的 groupField 属性消费\r\nfunction stringifyGroupField(mapping, goal, prop) {\r\n\tif (goal) {\r\n\t\tmapping = mapping.filter(f => f.field === goal)\r\n\t}\r\n\tif (prop) {\r\n\t\tmapping = mapping.filter(f => f.field && f.hasOwnProperty(prop))\r\n\t}\r\n\tconst groupField = mapping.map(f => {\r\n\t\t\tconst stat = f.stat\r\n\t\t\tlet fields = []\r\n\t\t\tif (f.computed) {\r\n\t\t\t\tfields = f.computed.split('/')\r\n\t\t\t} else {\r\n\t\t\t\tfields.push(f.field)\r\n\t\t\t}\r\n\t\t\tfields = fields.map(field => {\r\n\t\t\t\tif (stat !== -1) {\r\n\t\t\t\t\treturn `${stat ? stat : 'sum' }(${'temp_' + field}) as ${field}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn fields.filter(Boolean).join()\r\n\t\t})\r\n\t\t.filter(Boolean)\r\n\t\t.join()\r\n\r\n\treturn groupField\r\n}\r\n\r\n// 除法函数\r\nfunction division(dividend, divisor) {\r\n\tif (divisor) {\r\n\t\treturn dividend / divisor\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n}\r\n\r\n// 对数字进行格式化，格式 type 配置在页面 fieldMap.js 中\r\nfunction format(num, type = ',', fix) {\r\n\t// if (!type) return num\r\n\tif (typeof num !== 'number') return num\r\n\tif (type === '%') {\r\n\t\t// 注意浮点数精度\r\n\t\tnum = (num * 100)\r\n\t\tif (String(num).indexOf('.') > -1) {\r\n\t\t\tnum = num.toFixed(2)\r\n\t\t}\r\n\t\tnum = num ? num + type : num\r\n\t\treturn num\r\n\t} else if (type === '%%') {\r\n\t\tnum = Number(num)\r\n\t\treturn num.toFixed(2) + '%'\r\n\t} else if (type === '-') {\r\n\t\treturn formatDate(num, 'day')\r\n\t} else if (type === ':') {\r\n\t\tnum = Math.ceil(num)\r\n\t\tlet h, m, s\r\n\t\th = m = s = 0\r\n\t\tconst wunH = 60 * 60,\r\n\t\t\twunM = 60 // 单位秒, wun 通 one\r\n\t\tif (num >= wunH) {\r\n\t\t\th = Math.floor(num / wunH)\r\n\t\t\tconst remainder = num % wunH\r\n\t\t\tif (remainder >= wunM) {\r\n\t\t\t\tm = Math.floor(remainder / wunM)\r\n\t\t\t\ts = remainder % wunM\r\n\t\t\t} else {\r\n\t\t\t\ts = remainder\r\n\t\t\t}\r\n\t\t} else if (wunH >= num && num >= wunM) {\r\n\t\t\tm = Math.floor(num / wunM)\r\n\t\t\ts = num % wunM\r\n\t\t} else {\r\n\t\t\ts = num\r\n\t\t}\r\n\t\tconst hms = [h, m, s].map(i => i < 10 ? '0' + i : i)\r\n\t\treturn hms.join(type)\r\n\t} else if (type === ',') {\r\n\t\treturn num.toLocaleString()\r\n\t} else {\r\n\t\tif (String(num).indexOf('.') > -1) {\r\n\t\t\tif (Math.abs(num) > 1) {\r\n\t\t\t\tnum = num.toFixed(fix || 0)\r\n\t\t\t} else {\r\n\t\t\t\tnum = num.toFixed(fix || 2)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn num\r\n\t}\r\n}\r\n\r\n// 格式化日期，返回其所在的范围\r\nfunction formatDate(date, type) {\r\n\tlet d = new Date(date)\r\n\tif (type === 'hour') {\r\n\t\tlet h = d.getHours()\r\n\t\th = h < 10 ? '0' + h : h\n\t\tlet str = `${h}:00 ~ ${h}:59`\n\t\tif (h === \"00\") {\n\t\t\t// 0 点的时候，显示为 yyyy-mm-dd（00:00 ~ 00:59）\n\t\t\tlet firstday = parseDateTime(d)\n\t\t\tstr = firstday + \"（00:00 ~ 00:59）\";\n\t\t}\r\n\t\treturn str\r\n\t} else if (type === 'week') {\r\n\t\tconst first = d.getDate() - d.getDay() + 1; // First day is the day of the month - the day of the week\r\n\t\tconst last = first + 6; // last day is the first day + 6\r\n\t\tlet firstday = new Date(d.setDate(first));\r\n\t\tfirstday = parseDateTime(firstday)\r\n\t\tlet lastday = new Date(d.setDate(last));\r\n\t\tlastday = parseDateTime(lastday)\r\n\t\treturn `${firstday} ~ ${lastday}`\r\n\t} else if (type === 'month') {\r\n\t\tlet firstday = new Date(d.getFullYear(), d.getMonth(), 1);\r\n\t\tfirstday = parseDateTime(firstday)\r\n\t\tlet lastday = new Date(d.getFullYear(), d.getMonth() + 1, 0);\r\n\t\tlastday = parseDateTime(lastday)\r\n\t\treturn `${firstday} ~ ${lastday}`\r\n\t} else {\r\n\t\treturn parseDateTime(d)\r\n\t}\r\n}\r\n\r\n// 格式化日期，返回其 yyyy-mm-dd 格式\r\nfunction parseDateTime(datetime, type, splitor = '-') {\r\n\tlet d = datetime\r\n\tif (typeof d !== 'object') {\r\n\t\td = new Date(d)\r\n\t}\r\n\tconst year = d.getFullYear()\r\n\tconst month = d.getMonth() + 1\r\n\tconst day = d.getDate()\r\n\tconst hour = d.getHours()\r\n\tconst minute = d.getMinutes()\r\n\tconst second = d.getSeconds()\r\n\tconst date = [year, lessTen(month), lessTen(day)].join(splitor)\r\n\tconst time = [lessTen(hour), lessTen(minute), lessTen(second)].join(':')\r\n\tif (type === \"dateTime\") {\r\n\t\treturn date + ' ' + time\r\n\t}\r\n\treturn date\r\n}\r\n\r\nfunction lessTen(item) {\r\n\treturn item < 10 ? '0' + item : item\r\n}\r\n\r\n// 获取指定日期当天或 n 天前零点的时间戳，丢弃时分秒\r\nfunction getTimeOfSomeDayAgo(days = 0, date = Date.now()) {\r\n\tconst d = new Date(date)\r\n\tconst oneDayTime = 24 * 60 * 60 * 1000\r\n\tlet ymd = [d.getFullYear(), d.getMonth() + 1, d.getDate()].join('/')\r\n\tymd = ymd + ' 00:00:00'\r\n\tconst someDaysAgoTime = new Date(ymd).getTime() - oneDayTime * days\r\n\treturn someDaysAgoTime\r\n}\r\n\r\n// 判断时间差值 delta，单位为天\r\nfunction maxDeltaDay(times, delta = 2) {\r\n\tif (!times.length) return true\r\n\tconst wunDay = 24 * 60 * 60 * 1000\r\n\tconst [start, end] = times\r\n\tconst max = end - start < wunDay * delta\r\n\treturn max\r\n}\r\n\r\n// 查询 总设备数、总用户数， 通过 field 配置\r\nfunction getFieldTotal(query = this.query, field = \"total_devices\") {\r\n\tlet fieldTotal\r\n\tif (typeof query === 'object') {\r\n\t\tquery = stringifyQuery(query, false, ['uni_platform'])\r\n\t}\r\n\tconst db = uniCloud.database()\r\n\treturn db.collection('uni-stat-result')\r\n\t\t.where(query)\r\n\t\t.field(`${field} as temp_${field}, start_time`)\r\n\t\t.groupBy('start_time')\r\n\t\t.groupField(`sum(temp_${field}) as ${field}`)\r\n\t\t.orderBy('start_time', 'desc')\r\n\t\t.get()\r\n\t\t.then(cur => {\r\n\t\t\tconst data = cur.result.data\r\n\t\t\tfieldTotal = data.length && data[0][field]\r\n\t\t\tfieldTotal = format(fieldTotal)\r\n\t\t\tthis.panelData && this.panelData.forEach(item => {\r\n\t\t\t\tif (item.field === field) {\r\n\t\t\t\t\titem.value = fieldTotal\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn Promise.resolve(fieldTotal)\r\n\t\t})\r\n}\r\n\r\n// 防抖函数\r\nfunction debounce(fn, time = 100) {\r\n\tlet timer = null\r\n\treturn function(...args) {\r\n\t\tif (timer) clearTimeout(timer)\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\tfn.apply(this, args)\r\n\t\t}, time)\r\n\t}\r\n}\r\n\r\n\r\nconst files = {}\r\n\r\nfunction fileToUrl(file) {\r\n\tfor (const key in files) {\r\n\t\tif (files.hasOwnProperty(key)) {\r\n\t\t\tconst oldFile = files[key]\r\n\t\t\tif (oldFile === file) {\r\n\t\t\t\treturn key\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlet url = (window.URL || window.webkitURL).createObjectURL(file)\r\n\tfiles[url] = file\r\n\treturn url\r\n}\r\n/**\r\n * 获取两个时间戳之间的所有时间\r\n * let start = new Date(1642694400000) // 2022-01-21 00:00:00\r\n * let end = new Date(1643644800000) // 2022-02-01 00:00:00\r\n * dateList = getAllDateCN(date1, date2)\r\n * @param {*} startTime\r\n * @param {*} endTime\r\n */\r\nfunction getAllDateCN(startTime, endTime) {\r\n\tlet date_all = [];\r\n\tlet i = 0;\r\n\twhile (endTime.getTime() - startTime.getTime() >= 0) {\r\n\t\t// 获取日期和时间\r\n\t\t// let year = startTime.getFullYear()\r\n\t\t// let month = startTime.getMonth() + 1\r\n\t\t// let day = startTime.getDate()\r\n\t\t// let time = startTime.toLocaleTimeString()\r\n\t\tdate_all[i] = startTime.getTime()\r\n\r\n\t\t// 获取每天00:00:00的时间戳\r\n\t\t// date_all[i] = new Date(startTime.toLocaleDateString()).getTime() / 1000;\r\n\r\n\t\t// 天数+1\r\n\t\tstartTime.setDate(startTime.getDate() + 1);\r\n\t\ti += 1;\r\n\t}\r\n\treturn date_all;\r\n}\r\n\r\nfunction createUniStatQuery(object) {\r\n\treturn Object.assign({}, object, {\r\n\t\ttype: \"native_app\",\r\n\t\tcreate_env: \"uni-stat\"\r\n\t})\r\n}\r\n\r\n\r\nexport {\r\n\tformatterData,\r\n\tfillTrendChartData,\r\n\tstringifyQuery,\r\n\tstringifyField,\r\n\tstringifyGroupField,\r\n\tmapfields,\r\n\tgetTimeOfSomeDayAgo,\r\n\tdivision,\r\n\tformat,\r\n\tformatDate,\r\n\tparseDateTime,\r\n\tmaxDeltaDay,\r\n\tdebounce,\r\n\tfileToUrl,\r\n\tgetFieldTotal,\r\n\tgetAllDateCN,\r\n\tcreateUniStatQuery\r\n}\r\n"],"names":["uniCloud"],"mappings":"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"}