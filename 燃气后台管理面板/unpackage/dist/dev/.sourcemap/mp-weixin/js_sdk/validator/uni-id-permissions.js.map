{"version":3,"file":"uni-id-permissions.js","sources":["js_sdk/validator/uni-id-permissions.js"],"sourcesContent":["// 表单校验规则由 schema2code 生成，不建议直接修改校验规则，而建议通过 schema2code 生成, 详情: https://uniapp.dcloud.net.cn/uniCloud/schema\r\n\r\n\r\nconst validator = {\r\n  \"permission_id\": {\r\n    \"rules\": [\r\n      {\r\n        \"required\": true\r\n      },\r\n      {\r\n        \"format\": \"string\"\r\n      }\r\n    ],\r\n    \"label\": \"权限标识\"\r\n  },\r\n  \"permission_name\": {\r\n    \"rules\": [\r\n      {\r\n        \"required\": true\r\n      },\r\n      {\r\n        \"format\": \"string\"\r\n      }\r\n    ],\r\n    \"label\": \"权限名称\"\r\n  },\r\n  \"comment\": {\r\n    \"rules\": [\r\n      {\r\n        \"format\": \"string\"\r\n      }\r\n    ],\r\n    \"label\": \"备注\"\r\n  }\r\n}\r\n\r\nconst enumConverter = {}\r\n\r\nfunction filterToWhere(filter, command) {\r\n  let where = {}\r\n  for (let field in filter) {\r\n    let { type, value } = filter[field]\r\n    switch (type) {\r\n      case \"search\":\r\n        if (typeof value === 'string' && value.length) {\r\n          where[field] = new RegExp(value)\r\n        }\r\n        break;\r\n      case \"select\":\r\n        if (value.length) {\r\n          let selectValue = []\r\n          for (let s of value) {\r\n            selectValue.push(command.eq(s))\r\n          }\r\n          where[field] = command.or(selectValue)\r\n        }\r\n        break;\r\n      case \"range\":\r\n        if (value.length) {\r\n          let gt = value[0]\r\n          let lt = value[1]\r\n          where[field] = command.and([command.gte(gt), command.lte(lt)])\r\n        }\r\n        break;\r\n      case \"date\":\r\n        if (value.length) {\r\n          let [s, e] = value\r\n          let startDate = new Date(s)\r\n          let endDate = new Date(e)\r\n          where[field] = command.and([command.gte(startDate), command.lte(endDate)])\r\n        }\r\n        break;\r\n      case \"timestamp\":\r\n        if (value.length) {\r\n          let [startDate, endDate] = value\r\n          where[field] = command.and([command.gte(startDate), command.lte(endDate)])\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return where\r\n}\r\n\r\nexport { validator, enumConverter, filterToWhere }\r\n"],"names":[],"mappings":";AAGK,MAAC,YAAY;AAAA,EAChB,iBAAiB;AAAA,IACf,SAAS;AAAA,MACP;AAAA,QACE,YAAY;AAAA,MACb;AAAA,MACD;AAAA,QACE,UAAU;AAAA,MACX;AAAA,IACF;AAAA,IACD,SAAS;AAAA,EACV;AAAA,EACD,mBAAmB;AAAA,IACjB,SAAS;AAAA,MACP;AAAA,QACE,YAAY;AAAA,MACb;AAAA,MACD;AAAA,QACE,UAAU;AAAA,MACX;AAAA,IACF;AAAA,IACD,SAAS;AAAA,EACV;AAAA,EACD,WAAW;AAAA,IACT,SAAS;AAAA,MACP;AAAA,QACE,UAAU;AAAA,MACX;AAAA,IACF;AAAA,IACD,SAAS;AAAA,EACV;AACH;AAEK,MAAC,gBAAgB,CAAE;AAExB,SAAS,cAAc,QAAQ,SAAS;AACtC,MAAI,QAAQ,CAAE;AACd,WAAS,SAAS,QAAQ;AACxB,QAAI,EAAE,MAAM,UAAU,OAAO,KAAK;AAClC,YAAQ,MAAI;AAAA,MACV,KAAK;AACH,YAAI,OAAO,UAAU,YAAY,MAAM,QAAQ;AAC7C,gBAAM,KAAK,IAAI,IAAI,OAAO,KAAK;AAAA,QAChC;AACD;AAAA,MACF,KAAK;AACH,YAAI,MAAM,QAAQ;AAChB,cAAI,cAAc,CAAE;AACpB,mBAAS,KAAK,OAAO;AACnB,wBAAY,KAAK,QAAQ,GAAG,CAAC,CAAC;AAAA,UAC/B;AACD,gBAAM,KAAK,IAAI,QAAQ,GAAG,WAAW;AAAA,QACtC;AACD;AAAA,MACF,KAAK;AACH,YAAI,MAAM,QAAQ;AAChB,cAAI,KAAK,MAAM,CAAC;AAChB,cAAI,KAAK,MAAM,CAAC;AAChB,gBAAM,KAAK,IAAI,QAAQ,IAAI,CAAC,QAAQ,IAAI,EAAE,GAAG,QAAQ,IAAI,EAAE,CAAC,CAAC;AAAA,QAC9D;AACD;AAAA,MACF,KAAK;AACH,YAAI,MAAM,QAAQ;AAChB,cAAI,CAAC,GAAG,CAAC,IAAI;AACb,cAAI,YAAY,IAAI,KAAK,CAAC;AAC1B,cAAI,UAAU,IAAI,KAAK,CAAC;AACxB,gBAAM,KAAK,IAAI,QAAQ,IAAI,CAAC,QAAQ,IAAI,SAAS,GAAG,QAAQ,IAAI,OAAO,CAAC,CAAC;AAAA,QAC1E;AACD;AAAA,MACF,KAAK;AACH,YAAI,MAAM,QAAQ;AAChB,cAAI,CAAC,WAAW,OAAO,IAAI;AAC3B,gBAAM,KAAK,IAAI,QAAQ,IAAI,CAAC,QAAQ,IAAI,SAAS,GAAG,QAAQ,IAAI,OAAO,CAAC,CAAC;AAAA,QAC1E;AACD;AAAA,IACH;AAAA,EACF;AACD,SAAO;AACT;;;;"}