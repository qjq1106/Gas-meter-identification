{"version":3,"file":"uni-id-users.js","sources":["js_sdk/validator/uni-id-users.js"],"sourcesContent":["// 表单校验规则由 schema2code 生成，不建议直接修改校验规则，而建议通过 schema2code 生成, 详情: https://uniapp.dcloud.net.cn/uniCloud/schema\r\n\r\n\r\nconst validator = {\r\n\t\"username\": {\r\n\t\t\"rules\": [{\n\t\t\t\t\"required\": true,\n\t\t\t\t\"errorMessage\": '请输入用户名',\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"minLength\": 3,\n\t\t\t\t\"maxLength\": 32,\n\t\t\t\t\"errorMessage\": '用户名长度在 {minLength} 到 {maxLength} 个字符',\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalidateFunction: function(rule, value, data, callback) {\n\t\t\t\t\t// console.log(value);\n\t\t\t\t\tif (/^1\\d{10}$/.test(value) || /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/.test(value)) {\n\t\t\t\t\t\tcallback('用户名不能是：手机号或邮箱')\n\t\t\t\t\t};\n\t\t\t\t\tif (/^\\d+$/.test(value)) {\n\t\t\t\t\t\tcallback('用户名不能为纯数字')\n\t\t\t\t\t};\n\t\t\t\t\tif(/[\\u4E00-\\u9FA5\\uF900-\\uFA2D]{1,}/.test(value)){\n\t\t\t\t\t\tcallback('用户名不能包含中文')\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t],\r\n\t\t\"label\": \"用户名\"\r\n\t},\n\t\"nickname\": {\n\t\t\"rules\": [{\n\t\t\t\tminLength: 3,\n\t\t\t\tmaxLength: 32,\n\t\t\t\terrorMessage: '昵称长度在 {minLength} 到 {maxLength} 个字符',\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalidateFunction: function(rule, value, data, callback) {\n\t\t\t\t\t// console.log(value);\n\t\t\t\t\tif (/^1\\d{10}$/.test(value) || /^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/.test(value)) {\n\t\t\t\t\t\tcallback('昵称不能是：手机号或邮箱')\n\t\t\t\t\t};\n\t\t\t\t\tif (/^\\d+$/.test(value)) {\n\t\t\t\t\t\tcallback('昵称不能为纯数字')\n\t\t\t\t\t};\n\t\t\t\t\t// if(/[\\u4E00-\\u9FA5\\uF900-\\uFA2D]{1,}/.test(value)){\n\t\t\t\t\t// \tcallback('昵称不能包含中文')\n\t\t\t\t\t// }\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"label\": \"昵称\"\n\t},\r\n\t\"password\": {\r\n\t\t\"rules\": [{\r\n\t\t\t\t\"required\": true,\r\n\t\t\t},\n\t\t\t{\r\n\t\t\t\t\"format\": \"password\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"minLength\": 6\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"label\": \"密码\"\r\n\t},\r\n\t\"mobile\": {\r\n\t\t\"rules\": [{\r\n\t\t\t\t\"format\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"pattern\": \"^\\\\+?[0-9-]{3,20}$\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"label\": \"手机号码\"\r\n\t},\r\n\t\"status\": {\r\n\t\t\"rules\": [{\r\n\t\t\t\t\"format\": \"int\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"range\": [{\r\n\t\t\t\t\t\t\"text\": \"正常\",\r\n\t\t\t\t\t\t\"value\": 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"text\": \"禁用\",\r\n\t\t\t\t\t\t\"value\": 1\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"text\": \"审核中\",\r\n\t\t\t\t\t\t\"value\": 2\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"text\": \"审核拒绝\",\r\n\t\t\t\t\t\t\"value\": 3\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"defaultValue\": 0,\r\n\t\t\"label\": \"用户状态\"\r\n\t},\r\n\t\"email\": {\r\n\t\t\"rules\": [{\r\n\t\t\t\t\"format\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"format\": \"email\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"label\": \"邮箱\"\r\n\t},\r\n\t\"role\": {\r\n\t\t\"rules\": [{\r\n\t\t\t\"format\": \"array\"\r\n\t\t}],\r\n\t\t\"label\": \"角色\"\r\n\t},\r\n\t\"last_login_date\": {\r\n\t\t\"rules\": [{\r\n\t\t\t\"format\": \"timestamp\"\r\n\t\t}]\r\n\t}\r\n}\r\n\r\nconst enumConverter = {\r\n\t\"status_valuetotext\": {\r\n\t\t\"0\": \"正常\",\r\n\t\t\"1\": \"禁用\",\r\n\t\t\"2\": \"审核中\",\r\n\t\t\"3\": \"审核拒绝\"\r\n\t}\r\n}\r\n\r\nfunction filterToWhere(filter, command) {\r\n\tlet where = {}\r\n\tfor (let field in filter) {\r\n\t\tlet {\r\n\t\t\ttype,\r\n\t\t\tvalue\r\n\t\t} = filter[field]\r\n\t\tswitch (type) {\r\n\t\t\tcase \"search\":\r\n\t\t\t\tif (typeof value === 'string' && value.length) {\r\n\t\t\t\t\twhere[field] = new RegExp(value)\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"select\":\r\n\t\t\t\tif (value.length) {\r\n\t\t\t\t\tlet selectValue = []\r\n\t\t\t\t\tfor (let s of value) {\r\n\t\t\t\t\t\tselectValue.push(command.eq(s))\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhere[field] = command.or(selectValue)\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"range\":\r\n\t\t\t\tif (value.length) {\r\n\t\t\t\t\tlet gt = value[0]\r\n\t\t\t\t\tlet lt = value[1]\r\n\t\t\t\t\twhere[field] = command.and([command.gte(gt), command.lte(lt)])\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"date\":\r\n\t\t\t\tif (value.length) {\r\n\t\t\t\t\tlet [s, e] = value\r\n\t\t\t\t\tlet startDate = new Date(s)\r\n\t\t\t\t\tlet endDate = new Date(e)\r\n\t\t\t\t\twhere[field] = command.and([command.gte(startDate), command.lte(endDate)])\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"timestamp\":\r\n\t\t\t\tif (value.length) {\r\n\t\t\t\t\tlet [startDate, endDate] = value\r\n\t\t\t\t\twhere[field] = command.and([command.gte(startDate), command.lte(endDate)])\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn where\r\n}\r\n\r\nexport {\r\n\tvalidator,\r\n\tenumConverter,\r\n\tfilterToWhere\r\n}\n"],"names":[],"mappings":"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"}