{"version":3,"file":"utils.js","sources":["uni_modules/uni-upgrade-center/pages/utils.js"],"sourcesContent":["// 判断arr是否为一个数组，返回一个bool值\r\nfunction isArray(arr) {\r\n\treturn Object.prototype.toString.call(arr) === '[object Array]';\r\n}\r\n\r\n// 深度克隆\r\nexport function deepClone(obj) {\r\n\t// 对常见的“非”值，直接返回原来值\r\n\tif ([null, undefined, NaN, false].includes(obj)) return obj;\r\n\tif (typeof obj !== \"object\" && typeof obj !== 'function') {\r\n\t\t//原始类型直接返回\r\n\t\treturn obj;\r\n\t}\r\n\tlet o = isArray(obj) ? [] : {};\r\n\tfor (let i in obj) {\r\n\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\to[i] = typeof obj[i] === \"object\" ? deepClone(obj[i]) : obj[i];\r\n\t\t}\r\n\t}\r\n\treturn o;\r\n}\r\n\r\nexport const appListDbName = 'opendb-app-list'\r\nexport const appVersionListDbName = 'opendb-app-versions'\r\n// 版本列表默认显示应用Appid\r\nexport const defaultDisplayApp = ''\r\n\r\n\r\n/**\r\n * 对比版本号，如需要，请自行修改判断规则\r\n * 支持比对\t(\"3.0.0.0.0.1.0.1\", \"3.0.0.0.0.1\")\t(\"3.0.0.1\", \"3.0\")\t(\"3.1.1\", \"3.1.1.1\") 之类的\r\n * @param {Object} v1\r\n * @param {Object} v2\r\n * v1 > v2 return 1\r\n * v1 < v2 return -1\r\n * v1 == v2 return 0\r\n */\r\nexport function compare(v1 = '0', v2 = '0') {\r\n\t\tv1 = String(v1).split('.')\r\n\t\tv2 = String(v2).split('.')\r\n\t\tconst minVersionLens = Math.min(v1.length, v2.length);\r\n\r\n\t\tlet result = 0;\r\n\t\tfor (let i = 0; i < minVersionLens; i++) {\r\n\t\t\tconst curV1 = Number(v1[i])\r\n\t\t\tconst curV2 = Number(v2[i])\r\n\r\n\t\t\tif (curV1 > curV2) {\r\n\t\t\t\tresult = 1\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (curV1 < curV2) {\r\n\t\t\t\tresult = -1\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (result === 0 && (v1.length !== v2.length)) {\r\n\t\t\tconst v1BiggerThenv2 = v1.length > v2.length;\r\n\t\t\tconst maxLensVersion = v1BiggerThenv2 ? v1 : v2;\r\n\t\t\tfor (let i = minVersionLens; i < maxLensVersion.length; i++) {\r\n\t\t\t\tconst curVersion = Number(maxLensVersion[i])\r\n\t\t\t\tif (curVersion > 0) {\r\n\t\t\t\t\tv1BiggerThenv2 ? result = 1 : result = -1\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n"],"names":[],"mappings":";AACA,SAAS,QAAQ,KAAK;AACrB,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAChD;AAGO,SAAS,UAAU,KAAK;AAE9B,MAAI,CAAC,MAAM,QAAW,KAAK,KAAK,EAAE,SAAS,GAAG;AAAG,WAAO;AACxD,MAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY;AAEzD,WAAO;AAAA,EACP;AACD,MAAI,IAAI,QAAQ,GAAG,IAAI,CAAA,IAAK,CAAA;AAC5B,WAAS,KAAK,KAAK;AAClB,QAAI,IAAI,eAAe,CAAC,GAAG;AAC1B,QAAE,CAAC,IAAI,OAAO,IAAI,CAAC,MAAM,WAAW,UAAU,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AAAA,IAC7D;AAAA,EACD;AACD,SAAO;AACR;AAEY,MAAC,gBAAgB;AACjB,MAAC,uBAAuB;AAExB,MAAC,oBAAoB;AAY1B,SAAS,QAAQ,KAAK,KAAK,KAAK,KAAK;AAC1C,OAAK,OAAO,EAAE,EAAE,MAAM,GAAG;AACzB,OAAK,OAAO,EAAE,EAAE,MAAM,GAAG;AACzB,QAAM,iBAAiB,KAAK,IAAI,GAAG,QAAQ,GAAG,MAAM;AAEpD,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACxC,UAAM,QAAQ,OAAO,GAAG,CAAC,CAAC;AAC1B,UAAM,QAAQ,OAAO,GAAG,CAAC,CAAC;AAE1B,QAAI,QAAQ,OAAO;AAClB,eAAS;AACT;AAAA,IACJ,WAAc,QAAQ,OAAO;AACzB,eAAS;AACT;AAAA,IACA;AAAA,EACD;AAED,MAAI,WAAW,KAAM,GAAG,WAAW,GAAG,QAAS;AAC9C,UAAM,iBAAiB,GAAG,SAAS,GAAG;AACtC,UAAM,iBAAiB,iBAAiB,KAAK;AAC7C,aAAS,IAAI,gBAAgB,IAAI,eAAe,QAAQ,KAAK;AAC5D,YAAM,aAAa,OAAO,eAAe,CAAC,CAAC;AAC3C,UAAI,aAAa,GAAG;AACnB,yBAAiB,SAAS,IAAI,SAAS;AACvC;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAED,SAAO;AACT;;;;;;"}