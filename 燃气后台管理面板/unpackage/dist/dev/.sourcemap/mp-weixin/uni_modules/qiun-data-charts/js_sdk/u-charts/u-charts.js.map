{"version":3,"file":"u-charts.js","sources":["uni_modules/qiun-data-charts/js_sdk/u-charts/u-charts.js"],"sourcesContent":["/*\n * uCharts (R)\n * 高性能跨平台图表库，支持H5、APP、小程序（微信/支付宝/百度/头条/QQ/360/快手）、Vue、Taro等支持canvas的框架平台\n * Copyright (C) 2018-2022 QIUN (R) 秋云 https://www.ucharts.cn All rights reserved.\n * Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )\n * 复制使用请保留本段注释，感谢支持开源！\n * \n * uCharts (R) 官方网站\n * https://www.uCharts.cn\n * \n * 开源地址:\n * https://gitee.com/uCharts/uCharts\n * \n * uni-app插件市场地址：\n * http://ext.dcloud.net.cn/plugin?id=271\n * \n */\r\n\r\n'use strict';\r\n\r\nvar config = {\r\n  version: 'v2.5.0-20230101',\r\n  yAxisWidth: 15,\r\n  xAxisHeight: 22,\r\n  padding: [10, 10, 10, 10],\r\n  rotate: false,\r\n  fontSize: 13,\r\n  fontColor: '#666666',\r\n  dataPointShape: ['circle', 'circle', 'circle', 'circle'],\r\n  color: ['#1890FF', '#91CB74', '#FAC858', '#EE6666', '#73C0DE', '#3CA272', '#FC8452', '#9A60B4', '#ea7ccc'],\r\n  linearColor: ['#0EE2F8', '#2BDCA8', '#FA7D8D', '#EB88E2', '#2AE3A0', '#0EE2F8', '#EB88E2', '#6773E3', '#F78A85'],\r\n  pieChartLinePadding: 15,\r\n  pieChartTextPadding: 5,\r\n  titleFontSize: 20,\r\n  subtitleFontSize: 15,\r\n  radarLabelTextMargin: 13,\r\n};\r\n\r\nvar assign = function(target, ...varArgs) {\r\n  if (target == null) {\r\n    throw new TypeError('[uCharts] Cannot convert undefined or null to object');\r\n  }\r\n  if (!varArgs || varArgs.length <= 0) {\r\n    return target;\r\n  }\r\n  // 深度合并对象\r\n  function deepAssign(obj1, obj2) {\r\n    for (let key in obj2) {\r\n      obj1[key] = obj1[key] && obj1[key].toString() === \"[object Object]\" ?\r\n        deepAssign(obj1[key], obj2[key]) : obj1[key] = obj2[key];\r\n    }\r\n    return obj1;\r\n  }\r\n  varArgs.forEach(val => {\r\n    target = deepAssign(target, val);\r\n  });\r\n  return target;\r\n};\r\n\r\nvar util = {\r\n  toFixed: function toFixed(num, limit) {\r\n    limit = limit || 2;\r\n    if (this.isFloat(num)) {\r\n      num = num.toFixed(limit);\r\n    }\r\n    return num;\r\n  },\r\n  isFloat: function isFloat(num) {\r\n    return num % 1 !== 0;\r\n  },\r\n  approximatelyEqual: function approximatelyEqual(num1, num2) {\r\n    return Math.abs(num1 - num2) < 1e-10;\r\n  },\r\n  isSameSign: function isSameSign(num1, num2) {\r\n    return Math.abs(num1) === num1 && Math.abs(num2) === num2 || Math.abs(num1) !== num1 && Math.abs(num2) !== num2;\r\n  },\r\n  isSameXCoordinateArea: function isSameXCoordinateArea(p1, p2) {\r\n    return this.isSameSign(p1.x, p2.x);\r\n  },\r\n  isCollision: function isCollision(obj1, obj2) {\r\n    obj1.end = {};\r\n    obj1.end.x = obj1.start.x + obj1.width;\r\n    obj1.end.y = obj1.start.y - obj1.height;\r\n    obj2.end = {};\r\n    obj2.end.x = obj2.start.x + obj2.width;\r\n    obj2.end.y = obj2.start.y - obj2.height;\r\n    var flag = obj2.start.x > obj1.end.x || obj2.end.x < obj1.start.x || obj2.end.y > obj1.start.y || obj2.start.y < obj1.end.y;\r\n    return !flag;\r\n  }\r\n};\r\n\r\n//兼容H5点击事件\r\nfunction getH5Offset(e) {\r\n  e.mp = {\r\n    changedTouches: []\r\n  };\r\n  e.mp.changedTouches.push({\r\n    x: e.offsetX,\r\n    y: e.offsetY\r\n  });\r\n  return e;\r\n}\r\n\r\n// hex 转 rgba\r\nfunction hexToRgb(hexValue, opc) {\r\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  var hex = hexValue.replace(rgx, function(m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  var r = parseInt(rgb[1], 16);\r\n  var g = parseInt(rgb[2], 16);\r\n  var b = parseInt(rgb[3], 16);\r\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + opc + ')';\r\n}\r\n\r\nfunction findRange(num, type, limit) {\r\n  if (isNaN(num)) {\r\n    throw new Error('[uCharts] series数据需为Number格式');\r\n  }\r\n  limit = limit || 10;\r\n  type = type ? type : 'upper';\r\n  var multiple = 1;\r\n  while (limit < 1) {\r\n    limit *= 10;\r\n    multiple *= 10;\r\n  }\r\n  if (type === 'upper') {\r\n    num = Math.ceil(num * multiple);\r\n  } else {\r\n    num = Math.floor(num * multiple);\r\n  }\r\n  while (num % limit !== 0) {\r\n    if (type === 'upper') {\r\n      if (num == num + 1) { //修复数据值过大num++无效的bug by 向日葵 @xrk_jy\r\n        break;\r\n      }\r\n      num++;\r\n    } else {\r\n      num--;\r\n    }\r\n  }\r\n  return num / multiple;\r\n}\r\n\r\nfunction calCandleMA(dayArr, nameArr, colorArr, kdata) {\r\n  let seriesTemp = [];\r\n  for (let k = 0; k < dayArr.length; k++) {\r\n    let seriesItem = {\r\n      data: [],\r\n      name: nameArr[k],\r\n      color: colorArr[k]\r\n    };\r\n    for (let i = 0, len = kdata.length; i < len; i++) {\r\n      if (i < dayArr[k]) {\r\n        seriesItem.data.push(null);\r\n        continue;\r\n      }\r\n      let sum = 0;\r\n      for (let j = 0; j < dayArr[k]; j++) {\r\n        sum += kdata[i - j][1];\r\n      }\r\n      seriesItem.data.push(+(sum / dayArr[k]).toFixed(3));\r\n    }\r\n    seriesTemp.push(seriesItem);\r\n  }\r\n  return seriesTemp;\r\n}\r\n\r\nfunction calValidDistance(self, distance, chartData, config, opts) {\r\n  var dataChartAreaWidth = opts.width - opts.area[1] - opts.area[3];\r\n  var dataChartWidth = chartData.eachSpacing * (opts.chartData.xAxisData.xAxisPoints.length - 1);\r\n  if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1){\r\n    if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n    dataChartWidth += (opts.extra.mount.widthRatio - 1)*chartData.eachSpacing;\r\n  }\r\n  var validDistance = distance;\r\n  if (distance >= 0) {\r\n    validDistance = 0;\r\n    self.uevent.trigger('scrollLeft');\r\n    self.scrollOption.position = 'left'\r\n    opts.xAxis.scrollPosition = 'left';\r\n  } else if (Math.abs(distance) >= dataChartWidth - dataChartAreaWidth) {\r\n    validDistance = dataChartAreaWidth - dataChartWidth;\r\n    self.uevent.trigger('scrollRight');\r\n    self.scrollOption.position = 'right'\r\n    opts.xAxis.scrollPosition = 'right';\r\n  } else {\r\n    self.scrollOption.position = distance\r\n    opts.xAxis.scrollPosition = distance;\r\n  }\r\n  return validDistance;\r\n}\r\n\r\nfunction isInAngleRange(angle, startAngle, endAngle) {\r\n  function adjust(angle) {\r\n    while (angle < 0) {\r\n      angle += 2 * Math.PI;\r\n    }\r\n    while (angle > 2 * Math.PI) {\r\n      angle -= 2 * Math.PI;\r\n    }\r\n    return angle;\r\n  }\r\n  angle = adjust(angle);\r\n  startAngle = adjust(startAngle);\r\n  endAngle = adjust(endAngle);\r\n  if (startAngle > endAngle) {\r\n    endAngle += 2 * Math.PI;\r\n    if (angle < startAngle) {\r\n      angle += 2 * Math.PI;\r\n    }\r\n  }\r\n  return angle >= startAngle && angle <= endAngle;\r\n}\r\n\r\nfunction createCurveControlPoints(points, i) {\r\n  function isNotMiddlePoint(points, i) {\r\n    if (points[i - 1] && points[i + 1]) {\r\n      return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y,\r\n        points[i + 1].y);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  function isNotMiddlePointX(points, i) {\r\n    if (points[i - 1] && points[i + 1]) {\r\n      return points[i].x >= Math.max(points[i - 1].x, points[i + 1].x) || points[i].x <= Math.min(points[i - 1].x,\r\n        points[i + 1].x);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  var a = 0.2;\r\n  var b = 0.2;\r\n  var pAx = null;\r\n  var pAy = null;\r\n  var pBx = null;\r\n  var pBy = null;\r\n  if (i < 1) {\r\n    pAx = points[0].x + (points[1].x - points[0].x) * a;\r\n    pAy = points[0].y + (points[1].y - points[0].y) * a;\r\n  } else {\r\n    pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a;\r\n    pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a;\r\n  }\r\n\r\n  if (i > points.length - 3) {\r\n    var last = points.length - 1;\r\n    pBx = points[last].x - (points[last].x - points[last - 1].x) * b;\r\n    pBy = points[last].y - (points[last].y - points[last - 1].y) * b;\r\n  } else {\r\n    pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b;\r\n    pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b;\r\n  }\r\n  if (isNotMiddlePoint(points, i + 1)) {\r\n    pBy = points[i + 1].y;\r\n  }\r\n  if (isNotMiddlePoint(points, i)) {\r\n    pAy = points[i].y;\r\n  }\r\n  if (isNotMiddlePointX(points, i + 1)) {\r\n    pBx = points[i + 1].x;\r\n  }\r\n  if (isNotMiddlePointX(points, i)) {\r\n    pAx = points[i].x;\r\n  }\r\n  if (pAy >= Math.max(points[i].y, points[i + 1].y) || pAy <= Math.min(points[i].y, points[i + 1].y)) {\r\n    pAy = points[i].y;\r\n  }\r\n  if (pBy >= Math.max(points[i].y, points[i + 1].y) || pBy <= Math.min(points[i].y, points[i + 1].y)) {\r\n    pBy = points[i + 1].y;\r\n  }\r\n  if (pAx >= Math.max(points[i].x, points[i + 1].x) || pAx <= Math.min(points[i].x, points[i + 1].x)) {\r\n    pAx = points[i].x;\r\n  }\r\n  if (pBx >= Math.max(points[i].x, points[i + 1].x) || pBx <= Math.min(points[i].x, points[i + 1].x)) {\r\n    pBx = points[i + 1].x;\r\n  }\r\n  return {\r\n    ctrA: {\r\n      x: pAx,\r\n      y: pAy\r\n    },\r\n    ctrB: {\r\n      x: pBx,\r\n      y: pBy\r\n    }\r\n  };\r\n}\r\n\r\n\r\nfunction convertCoordinateOrigin(x, y, center) {\r\n  return {\r\n    x: center.x + x,\r\n    y: center.y - y\r\n  };\r\n}\r\n\r\nfunction avoidCollision(obj, target) {\r\n  if (target) {\r\n    // is collision test\r\n    while (util.isCollision(obj, target)) {\r\n      if (obj.start.x > 0) {\r\n        obj.start.y--;\r\n      } else if (obj.start.x < 0) {\r\n        obj.start.y++;\r\n      } else {\r\n        if (obj.start.y > 0) {\r\n          obj.start.y++;\r\n        } else {\r\n          obj.start.y--;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction fixPieSeries(series, opts, config){\r\n  let pieSeriesArr = [];\r\n  if(series.length>0 && series[0].data.constructor.toString().indexOf('Array') > -1){\r\n    opts._pieSeries_ = series;\r\n    let oldseries = series[0].data;\r\n    for (var i = 0; i < oldseries.length; i++) {\r\n      oldseries[i].formatter = series[0].formatter;\r\n      oldseries[i].data = oldseries[i].value;\r\n      pieSeriesArr.push(oldseries[i]);\r\n    }\r\n    opts.series = pieSeriesArr;\r\n  }else{\r\n    pieSeriesArr = series;\r\n  }\r\n  return pieSeriesArr;\r\n}\r\n\r\nfunction fillSeries(series, opts, config) {\r\n  var index = 0;\r\n  for (var i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    if (!item.color) {\r\n      item.color = config.color[index];\r\n      index = (index + 1) % config.color.length;\r\n    }\r\n    if (!item.linearIndex) {\r\n      item.linearIndex = i;\r\n    }\r\n    if (!item.index) {\r\n      item.index = 0;\r\n    }\r\n    if (!item.type) {\r\n      item.type = opts.type;\r\n    }\r\n    if (typeof item.show == \"undefined\") {\r\n      item.show = true;\r\n    }\r\n    if (!item.type) {\r\n      item.type = opts.type;\r\n    }\r\n    if (!item.pointShape) {\r\n      item.pointShape = \"circle\";\r\n    }\r\n    if (!item.legendShape) {\r\n      switch (item.type) {\r\n        case 'line':\r\n          item.legendShape = \"line\";\r\n          break;\r\n        case 'column':\r\n        case 'bar':\r\n          item.legendShape = \"rect\";\r\n          break;\r\n        case 'area':\r\n        case 'mount':\r\n          item.legendShape = \"triangle\";\r\n          break;\r\n        default:\r\n          item.legendShape = \"circle\";\r\n      }\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction fillCustomColor(linearType, customColor, series, config) {\r\n  var newcolor = customColor || [];\r\n  if (linearType == 'custom' && newcolor.length == 0 ) {\r\n    newcolor = config.linearColor;\r\n  }\r\n  if (linearType == 'custom' && newcolor.length < series.length) {\r\n    let chazhi = series.length - newcolor.length;\r\n    for (var i = 0; i < chazhi; i++) {\r\n      newcolor.push(config.linearColor[(i + 1) % config.linearColor.length]);\r\n    }\r\n  }\r\n  return newcolor;\r\n}\r\n\r\nfunction getDataRange(minData, maxData) {\r\n  var limit = 0;\r\n  var range = maxData - minData;\r\n  if (range >= 10000) {\r\n    limit = 1000;\r\n  } else if (range >= 1000) {\r\n    limit = 100;\r\n  } else if (range >= 100) {\r\n    limit = 10;\r\n  } else if (range >= 10) {\r\n    limit = 5;\r\n  } else if (range >= 1) {\r\n    limit = 1;\r\n  } else if (range >= 0.1) {\r\n    limit = 0.1;\r\n  } else if (range >= 0.01) {\r\n    limit = 0.01;\r\n  } else if (range >= 0.001) {\r\n    limit = 0.001;\r\n  } else if (range >= 0.0001) {\r\n    limit = 0.0001;\r\n  } else if (range >= 0.00001) {\r\n    limit = 0.00001;\r\n  } else {\r\n    limit = 0.000001;\r\n  }\r\n  return {\r\n    minRange: findRange(minData, 'lower', limit),\r\n    maxRange: findRange(maxData, 'upper', limit)\r\n  };\r\n}\r\n\r\nfunction measureText(text, fontSize, context) {\r\n  var width = 0;\r\n  text = String(text);\r\n  // #ifdef MP-ALIPAY || MP-BAIDU || APP-NVUE\r\n  context = false;\r\n  // #endif\r\n  if (context !== false && context !== undefined && context.setFontSize && context.measureText) {\r\n    context.setFontSize(fontSize);\r\n    return context.measureText(text).width;\r\n  } else {\r\n    var text = text.split('');\r\n    for (let i = 0; i < text.length; i++) {\r\n      let item = text[i];\r\n      if (/[a-zA-Z]/.test(item)) {\r\n        width += 7;\r\n      } else if (/[0-9]/.test(item)) {\r\n        width += 5.5;\r\n      } else if (/\\./.test(item)) {\r\n        width += 2.7;\r\n      } else if (/-/.test(item)) {\r\n        width += 3.25;\r\n      } else if (/:/.test(item)) {\r\n        width += 2.5;\r\n      } else if (/[\\u4e00-\\u9fa5]/.test(item)) {\r\n        width += 10;\r\n      } else if (/\\(|\\)/.test(item)) {\r\n        width += 3.73;\r\n      } else if (/\\s/.test(item)) {\r\n        width += 2.5;\r\n      } else if (/%/.test(item)) {\r\n        width += 8;\r\n      } else {\r\n        width += 10;\r\n      }\r\n    }\r\n    return width * fontSize / 10;\r\n  }\r\n}\r\n\r\nfunction dataCombine(series) {\r\n  return series.reduce(function(a, b) {\r\n    return (a.data ? a.data : a).concat(b.data);\r\n  }, []);\r\n}\r\n\r\nfunction dataCombineStack(series, len) {\r\n  var sum = new Array(len);\r\n  for (var j = 0; j < sum.length; j++) {\r\n    sum[j] = 0;\r\n  }\r\n  for (var i = 0; i < series.length; i++) {\r\n    for (var j = 0; j < sum.length; j++) {\r\n      sum[j] += series[i].data[j];\r\n    }\r\n  }\r\n  return series.reduce(function(a, b) {\r\n    return (a.data ? a.data : a).concat(b.data).concat(sum);\r\n  }, []);\r\n}\r\n\r\nfunction getTouches(touches, opts, e) {\r\n  let x, y;\r\n  if (touches.clientX) {\r\n    if (opts.rotate) {\r\n      y = opts.height - touches.clientX * opts.pix;\r\n      x = (touches.pageY - e.currentTarget.offsetTop - (opts.height / opts.pix / 2) * (opts.pix - 1)) * opts.pix;\r\n    } else {\r\n      x = touches.clientX * opts.pix;\r\n      y = (touches.pageY - e.currentTarget.offsetTop - (opts.height / opts.pix / 2) * (opts.pix - 1)) * opts.pix;\r\n    }\r\n  } else {\r\n    if (opts.rotate) {\r\n      y = opts.height - touches.x * opts.pix;\r\n      x = touches.y * opts.pix;\r\n    } else {\r\n      x = touches.x * opts.pix;\r\n      y = touches.y * opts.pix;\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    y: y\r\n  }\r\n}\r\n\r\nfunction getSeriesDataItem(series, index, group) {\r\n  var data = [];\r\n  var newSeries = [];\r\n  var indexIsArr = index.constructor.toString().indexOf('Array') > -1;\r\n  if(indexIsArr){\r\n    let tempSeries = filterSeries(series);\r\n    for (var i = 0; i < group.length; i++) {\r\n      newSeries.push(tempSeries[group[i]]);\r\n    }\r\n  }else{\r\n    newSeries = series;\r\n  };\r\n  for (let i = 0; i < newSeries.length; i++) {\r\n    let item = newSeries[i];\r\n    let tmpindex = -1;\r\n    if(indexIsArr){\r\n      tmpindex = index[i];\r\n    }else{\r\n      tmpindex = index;\r\n    }\r\n    if (item.data[tmpindex] !== null && typeof item.data[tmpindex] !== 'undefined' && item.show) {\r\n      let seriesItem = {};\r\n      seriesItem.color = item.color;\r\n      seriesItem.type = item.type;\r\n      seriesItem.style = item.style;\r\n      seriesItem.pointShape = item.pointShape;\r\n      seriesItem.disableLegend = item.disableLegend;\r\n      seriesItem.legendShape = item.legendShape;\r\n      seriesItem.name = item.name;\r\n      seriesItem.show = item.show;\r\n      seriesItem.data = item.formatter ? item.formatter(item.data[tmpindex]) : item.data[tmpindex];\r\n      data.push(seriesItem);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getMaxTextListLength(list, fontSize, context) {\r\n  var lengthList = list.map(function(item) {\r\n    return measureText(item, fontSize, context);\r\n  });\r\n  return Math.max.apply(null, lengthList);\r\n}\r\n\r\nfunction getRadarCoordinateSeries(length) {\r\n  var eachAngle = 2 * Math.PI / length;\r\n  var CoordinateSeries = [];\r\n  for (var i = 0; i < length; i++) {\r\n    CoordinateSeries.push(eachAngle * i);\r\n  }\r\n  return CoordinateSeries.map(function(item) {\r\n    return -1 * item + Math.PI / 2;\r\n  });\r\n}\r\n\r\nfunction getToolTipData(seriesData, opts, index, group, categories) {\r\n  var option = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\r\n  var calPoints = opts.chartData.calPoints?opts.chartData.calPoints:[];\r\n  let points = {};\r\n  if(group.length > 0){\r\n    let filterPoints = [];\r\n    for (let i = 0; i < group.length; i++) {\r\n      filterPoints.push(calPoints[group[i]])\r\n    }\r\n    points = filterPoints[0][index[0]];\r\n  }else{\r\n    for (let i = 0; i < calPoints.length; i++) {\r\n      if(calPoints[i][index]){\r\n        points = calPoints[i][index];\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  var textList = seriesData.map(function(item) {\r\n    let titleText = null;\r\n    if (opts.categories && opts.categories.length>0) {\r\n      titleText = categories[index];\r\n    };\r\n    return {\r\n      text: option.formatter ? option.formatter(item, titleText, index, opts) : item.name + ': ' + item.data,\r\n      color: item.color,\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n  });\r\n  var offset = {\r\n    x: Math.round(points.x),\r\n    y: Math.round(points.y)\r\n  };\r\n  return {\r\n    textList: textList,\r\n    offset: offset\r\n  };\r\n}\r\n\r\nfunction getMixToolTipData(seriesData, opts, index, categories) {\r\n  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\r\n  var points = opts.chartData.xAxisPoints[index] + opts.chartData.eachSpacing / 2;\r\n  var textList = seriesData.map(function(item) {\r\n    return {\r\n      text: option.formatter ? option.formatter(item, categories[index], index, opts) : item.name + ': ' + item.data,\r\n      color: item.color,\r\n      disableLegend: item.disableLegend ? true : false,\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n  });\r\n  textList = textList.filter(function(item) {\r\n    if (item.disableLegend !== true) {\r\n      return item;\r\n    }\r\n  });\r\n  var offset = {\r\n    x: Math.round(points),\r\n    y: 0\r\n  };\r\n  return {\r\n    textList: textList,\r\n    offset: offset\r\n  };\r\n}\r\n\r\nfunction getCandleToolTipData(series, seriesData, opts, index, categories, extra) {\r\n  var option = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\r\n  var calPoints = opts.chartData.calPoints;\r\n  let upColor = extra.color.upFill;\r\n  let downColor = extra.color.downFill;\r\n  //颜色顺序为开盘，收盘，最低，最高\r\n  let color = [upColor, upColor, downColor, upColor];\r\n  var textList = [];\r\n  seriesData.map(function(item) {\r\n    if (index == 0) {\r\n      if (item.data[1] - item.data[0] < 0) {\r\n        color[1] = downColor;\r\n      } else {\r\n        color[1] = upColor;\r\n      }\r\n    } else {\r\n      if (item.data[0] < series[index - 1][1]) {\r\n        color[0] = downColor;\r\n      }\r\n      if (item.data[1] < item.data[0]) {\r\n        color[1] = downColor;\r\n      }\r\n      if (item.data[2] > series[index - 1][1]) {\r\n        color[2] = upColor;\r\n      }\r\n      if (item.data[3] < series[index - 1][1]) {\r\n        color[3] = downColor;\r\n      }\r\n    }\r\n    let text1 = {\r\n      text: '开盘：' + item.data[0],\r\n      color: color[0],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    let text2 = {\r\n      text: '收盘：' + item.data[1],\r\n      color: color[1],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    let text3 = {\r\n      text: '最低：' + item.data[2],\r\n      color: color[2],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    let text4 = {\r\n      text: '最高：' + item.data[3],\r\n      color: color[3],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    textList.push(text1, text2, text3, text4);\r\n  });\r\n  var validCalPoints = [];\r\n  var offset = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  for (let i = 0; i < calPoints.length; i++) {\r\n    let points = calPoints[i];\r\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\r\n      validCalPoints.push(points[index]);\r\n    }\r\n  }\r\n  offset.x = Math.round(validCalPoints[0][0].x);\r\n  return {\r\n    textList: textList,\r\n    offset: offset\r\n  };\r\n}\r\n\r\nfunction filterSeries(series) {\r\n  let tempSeries = [];\r\n  for (let i = 0; i < series.length; i++) {\r\n    if (series[i].show == true) {\r\n      tempSeries.push(series[i])\r\n    }\r\n  }\r\n  return tempSeries;\r\n}\r\n\r\nfunction findCurrentIndex(currentPoints, calPoints, opts, config) {\r\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\r\n  var current={ index:-1, group:[] };\r\n  var spacing = opts.chartData.eachSpacing / 2;\r\n  let xAxisPoints = [];\r\n  if (calPoints && calPoints.length > 0) {\r\n    if (!opts.categories) {\r\n      spacing = 0;\r\n    }else{\r\n      for (let i = 1; i < opts.chartData.xAxisPoints.length; i++) {\r\n        xAxisPoints.push(opts.chartData.xAxisPoints[i] - spacing);\r\n      }\r\n      if ((opts.type == 'line' || opts.type == 'area') && opts.xAxis.boundaryGap == 'justify') {\r\n        xAxisPoints = opts.chartData.xAxisPoints;\r\n      }\r\n    }\r\n    if (isInExactChartArea(currentPoints, opts, config)) {\r\n      if (!opts.categories) {\r\n        let timePoints = Array(calPoints.length);\r\n        for (let i = 0; i < calPoints.length; i++) {\r\n          timePoints[i] = Array(calPoints[i].length)\r\n          for (let j = 0; j < calPoints[i].length; j++) {\r\n            timePoints[i][j] = (Math.abs(calPoints[i][j].x - currentPoints.x));\r\n          }\r\n        };\r\n        let pointValue =  Array(timePoints.length);\r\n        let pointIndex =  Array(timePoints.length);\r\n        for (let i = 0; i < timePoints.length; i++) {\r\n          pointValue[i] = Math.min.apply(null, timePoints[i]);\r\n          pointIndex[i] = timePoints[i].indexOf(pointValue[i]);\r\n        }\r\n        let minValue = Math.min.apply(null, pointValue);\r\n        current.index = [];\r\n        for (let i = 0; i < pointValue.length; i++) {\r\n          if(pointValue[i] == minValue){\r\n            current.group.push(i);\r\n            current.index.push(pointIndex[i]);\r\n          }\r\n        };\r\n      }else{\r\n        xAxisPoints.forEach(function(item, index) {\r\n          if (currentPoints.x + offset + spacing > item) {\r\n            current.index = index;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return current;\r\n}\r\n\r\nfunction findBarChartCurrentIndex(currentPoints, calPoints, opts, config) {\r\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\r\n  var current={ index:-1, group:[] };\r\n  var spacing = opts.chartData.eachSpacing / 2;\r\n  let yAxisPoints = opts.chartData.yAxisPoints;\r\n  if (calPoints && calPoints.length > 0) {\r\n    if (isInExactChartArea(currentPoints, opts, config)) {\r\n      yAxisPoints.forEach(function(item, index) {\r\n        if (currentPoints.y + offset + spacing > item) {\r\n          current.index = index;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return current;\r\n}\r\n\r\nfunction findLegendIndex(currentPoints, legendData, opts) {\r\n  let currentIndex = -1;\r\n  let gap = 0;\r\n  if (isInExactLegendArea(currentPoints, legendData.area)) {\r\n    let points = legendData.points;\r\n    let index = -1;\r\n    for (let i = 0, len = points.length; i < len; i++) {\r\n      let item = points[i];\r\n      for (let j = 0; j < item.length; j++) {\r\n        index += 1;\r\n        let area = item[j]['area'];\r\n        if (area && currentPoints.x > area[0] - gap && currentPoints.x < area[2] + gap && currentPoints.y > area[1] - gap && currentPoints.y < area[3] + gap) {\r\n          currentIndex = index;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return currentIndex;\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction isInExactLegendArea(currentPoints, area) {\r\n  return currentPoints.x > area.start.x && currentPoints.x < area.end.x && currentPoints.y > area.start.y && currentPoints.y < area.end.y;\r\n}\r\n\r\nfunction isInExactChartArea(currentPoints, opts, config) {\r\n  return currentPoints.x <= opts.width - opts.area[1] + 10 && currentPoints.x >= opts.area[3] - 10 && currentPoints.y >= opts.area[0] && currentPoints.y <= opts.height - opts.area[2];\r\n}\r\n\r\nfunction findRadarChartCurrentIndex(currentPoints, radarData, count) {\r\n  var eachAngleArea = 2 * Math.PI / count;\r\n  var currentIndex = -1;\r\n  if (isInExactPieChartArea(currentPoints, radarData.center, radarData.radius)) {\r\n    var fixAngle = function fixAngle(angle) {\r\n      if (angle < 0) {\r\n        angle += 2 * Math.PI;\r\n      }\r\n      if (angle > 2 * Math.PI) {\r\n        angle -= 2 * Math.PI;\r\n      }\r\n      return angle;\r\n    };\r\n    var angle = Math.atan2(radarData.center.y - currentPoints.y, currentPoints.x - radarData.center.x);\r\n    angle = -1 * angle;\r\n    if (angle < 0) {\r\n      angle += 2 * Math.PI;\r\n    }\r\n    var angleList = radarData.angleList.map(function(item) {\r\n      item = fixAngle(-1 * item);\r\n      return item;\r\n    });\r\n    angleList.forEach(function(item, index) {\r\n      var rangeStart = fixAngle(item - eachAngleArea / 2);\r\n      var rangeEnd = fixAngle(item + eachAngleArea / 2);\r\n      if (rangeEnd < rangeStart) {\r\n        rangeEnd += 2 * Math.PI;\r\n      }\r\n      if (angle >= rangeStart && angle <= rangeEnd || angle + 2 * Math.PI >= rangeStart && angle + 2 * Math.PI <= rangeEnd) {\r\n        currentIndex = index;\r\n      }\r\n    });\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findFunnelChartCurrentIndex(currentPoints, funnelData) {\r\n  var currentIndex = -1;\r\n  for (var i = 0, len = funnelData.series.length; i < len; i++) {\r\n    var item = funnelData.series[i];\r\n    if (currentPoints.x > item.funnelArea[0] && currentPoints.x < item.funnelArea[2] && currentPoints.y > item.funnelArea[1] && currentPoints.y < item.funnelArea[3]) {\r\n      currentIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findWordChartCurrentIndex(currentPoints, wordData) {\r\n  var currentIndex = -1;\r\n  for (var i = 0, len = wordData.length; i < len; i++) {\r\n    var item = wordData[i];\r\n    if (currentPoints.x > item.area[0] && currentPoints.x < item.area[2] && currentPoints.y > item.area[1] && currentPoints.y < item.area[3]) {\r\n      currentIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findMapChartCurrentIndex(currentPoints, opts) {\r\n  var currentIndex = -1;\r\n  var cData = opts.chartData.mapData;\r\n  var data = opts.series;\r\n  var tmp = pointToCoordinate(currentPoints.y, currentPoints.x, cData.bounds, cData.scale, cData.xoffset, cData.yoffset);\r\n  var poi = [tmp.x, tmp.y];\r\n  for (var i = 0, len = data.length; i < len; i++) {\r\n    var item = data[i].geometry.coordinates;\r\n    if (isPoiWithinPoly(poi, item, opts.chartData.mapData.mercator)) {\r\n      currentIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findRoseChartCurrentIndex(currentPoints, pieData, opts) {\r\n  var currentIndex = -1;\r\n  var series = getRoseDataPoints(opts._series_, opts.extra.rose.type, pieData.radius, pieData.radius);\r\n  if (pieData && pieData.center && isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {\r\n    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);\r\n    angle = -angle;\r\n    if(opts.extra.rose && opts.extra.rose.offsetAngle){\r\n      angle = angle - opts.extra.rose.offsetAngle * Math.PI / 180;\r\n    }\r\n    for (var i = 0, len = series.length; i < len; i++) {\r\n      if (isInAngleRange(angle, series[i]._start_, series[i]._start_ + series[i]._rose_proportion_ * 2 * Math.PI)) {\r\n        currentIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findPieChartCurrentIndex(currentPoints, pieData, opts) {\r\n  var currentIndex = -1;\r\n  var series = getPieDataPoints(pieData.series);\r\n  if (pieData && pieData.center && isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {\r\n    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);\r\n    angle = -angle;\r\n    if(opts.extra.pie && opts.extra.pie.offsetAngle){\r\n      angle = angle - opts.extra.pie.offsetAngle * Math.PI / 180;\r\n    }\r\n    if(opts.extra.ring && opts.extra.ring.offsetAngle){\r\n      angle = angle - opts.extra.ring.offsetAngle * Math.PI / 180;\r\n    }\r\n    for (var i = 0, len = series.length; i < len; i++) {\r\n      if (isInAngleRange(angle, series[i]._start_, series[i]._start_ + series[i]._proportion_ * 2 * Math.PI)) {\r\n        currentIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction isInExactPieChartArea(currentPoints, center, radius) {\r\n  return Math.pow(currentPoints.x - center.x, 2) + Math.pow(currentPoints.y - center.y, 2) <= Math.pow(radius, 2);\r\n}\r\n\r\n\r\nfunction splitPoints(points,eachSeries) {\r\n  var newPoints = [];\r\n  var items = [];\r\n  points.forEach(function(item, index) {\r\n    if(eachSeries.connectNulls){\r\n      if (item !== null) {\r\n        items.push(item);\r\n      }\r\n    }else{\r\n      if (item !== null) {\r\n        items.push(item);\r\n      } else {\r\n        if (items.length) {\r\n          newPoints.push(items);\r\n        }\r\n        items = [];\r\n      }\r\n    }\r\n    \r\n  });\r\n  if (items.length) {\r\n    newPoints.push(items);\r\n  }\r\n  return newPoints;\r\n}\r\n\r\n\r\nfunction calLegendData(series, opts, config, chartData, context) {\r\n  let legendData = {\r\n    area: {\r\n      start: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      end: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      width: 0,\r\n      height: 0,\r\n      wholeWidth: 0,\r\n      wholeHeight: 0\r\n    },\r\n    points: [],\r\n    widthArr: [],\r\n    heightArr: []\r\n  };\r\n  if (opts.legend.show === false) {\r\n    chartData.legendData = legendData;\r\n    return legendData;\r\n  }\r\n  let padding = opts.legend.padding * opts.pix;\r\n  let margin = opts.legend.margin * opts.pix;\r\n  let fontSize = opts.legend.fontSize ? opts.legend.fontSize * opts.pix : config.fontSize;\r\n  let shapeWidth = 15 * opts.pix;\r\n  let shapeRight = 5 * opts.pix;\r\n  let lineHeight = Math.max(opts.legend.lineHeight * opts.pix, fontSize);\r\n  if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\r\n    let legendList = [];\r\n    let widthCount = 0;\r\n    let widthCountArr = [];\r\n    let currentRow = [];\r\n    for (let i = 0; i < series.length; i++) {\r\n      let item = series[i];\r\n      const legendText = item.legendText ? item.legendText : item.name;\r\n      let itemWidth = shapeWidth + shapeRight + measureText(legendText || 'undefined', fontSize, context) + opts.legend.itemGap * opts.pix;\r\n      if (widthCount + itemWidth > opts.width - opts.area[1] - opts.area[3]) {\r\n        legendList.push(currentRow);\r\n        widthCountArr.push(widthCount - opts.legend.itemGap * opts.pix);\r\n        widthCount = itemWidth;\r\n        currentRow = [item];\r\n      } else {\r\n        widthCount += itemWidth;\r\n        currentRow.push(item);\r\n      }\r\n    }\r\n    if (currentRow.length) {\r\n      legendList.push(currentRow);\r\n      widthCountArr.push(widthCount - opts.legend.itemGap * opts.pix);\r\n      legendData.widthArr = widthCountArr;\r\n      let legendWidth = Math.max.apply(null, widthCountArr);\r\n      switch (opts.legend.float) {\r\n        case 'left':\r\n          legendData.area.start.x = opts.area[3];\r\n          legendData.area.end.x = opts.area[3] + legendWidth + 2 * padding;\r\n          break;\r\n        case 'right':\r\n          legendData.area.start.x = opts.width - opts.area[1] - legendWidth - 2 * padding;\r\n          legendData.area.end.x = opts.width - opts.area[1];\r\n          break;\r\n        default:\r\n          legendData.area.start.x = (opts.width - legendWidth) / 2 - padding;\r\n          legendData.area.end.x = (opts.width + legendWidth) / 2 + padding;\r\n      }\r\n      legendData.area.width = legendWidth + 2 * padding;\r\n      legendData.area.wholeWidth = legendWidth + 2 * padding;\r\n      legendData.area.height = legendList.length * lineHeight + 2 * padding;\r\n      legendData.area.wholeHeight = legendList.length * lineHeight + 2 * padding + 2 * margin;\r\n      legendData.points = legendList;\r\n    }\r\n  } else {\r\n    let len = series.length;\r\n    let maxHeight = opts.height - opts.area[0] - opts.area[2] - 2 * margin - 2 * padding;\r\n    let maxLength = Math.min(Math.floor(maxHeight / lineHeight), len);\r\n    legendData.area.height = maxLength * lineHeight + padding * 2;\r\n    legendData.area.wholeHeight = maxLength * lineHeight + padding * 2;\r\n    switch (opts.legend.float) {\r\n      case 'top':\r\n        legendData.area.start.y = opts.area[0] + margin;\r\n        legendData.area.end.y = opts.area[0] + margin + legendData.area.height;\r\n        break;\r\n      case 'bottom':\r\n        legendData.area.start.y = opts.height - opts.area[2] - margin - legendData.area.height;\r\n        legendData.area.end.y = opts.height - opts.area[2] - margin;\r\n        break;\r\n      default:\r\n        legendData.area.start.y = (opts.height - legendData.area.height) / 2;\r\n        legendData.area.end.y = (opts.height + legendData.area.height) / 2;\r\n    }\r\n    let lineNum = len % maxLength === 0 ? len / maxLength : Math.floor((len / maxLength) + 1);\r\n    let currentRow = [];\r\n    for (let i = 0; i < lineNum; i++) {\r\n      let temp = series.slice(i * maxLength, i * maxLength + maxLength);\r\n      currentRow.push(temp);\r\n    }\r\n    legendData.points = currentRow;\r\n    if (currentRow.length) {\r\n      for (let i = 0; i < currentRow.length; i++) {\r\n        let item = currentRow[i];\r\n        let maxWidth = 0;\r\n        for (let j = 0; j < item.length; j++) {\r\n          let itemWidth = shapeWidth + shapeRight + measureText(item[j].name || 'undefined', fontSize, context) + opts.legend.itemGap * opts.pix;\r\n          if (itemWidth > maxWidth) {\r\n            maxWidth = itemWidth;\r\n          }\r\n        }\r\n        legendData.widthArr.push(maxWidth);\r\n        legendData.heightArr.push(item.length * lineHeight + padding * 2);\r\n      }\r\n      let legendWidth = 0\r\n      for (let i = 0; i < legendData.widthArr.length; i++) {\r\n        legendWidth += legendData.widthArr[i];\r\n      }\r\n      legendData.area.width = legendWidth - opts.legend.itemGap * opts.pix + 2 * padding;\r\n      legendData.area.wholeWidth = legendData.area.width + padding;\r\n    }\r\n  }\r\n  switch (opts.legend.position) {\r\n    case 'top':\r\n      legendData.area.start.y = opts.area[0] + margin;\r\n      legendData.area.end.y = opts.area[0] + margin + legendData.area.height;\r\n      break;\r\n    case 'bottom':\r\n      legendData.area.start.y = opts.height - opts.area[2] - legendData.area.height - margin;\r\n      legendData.area.end.y = opts.height - opts.area[2] - margin;\r\n      break;\r\n    case 'left':\r\n      legendData.area.start.x = opts.area[3];\r\n      legendData.area.end.x = opts.area[3] + legendData.area.width;\r\n      break;\r\n    case 'right':\r\n      legendData.area.start.x = opts.width - opts.area[1] - legendData.area.width;\r\n      legendData.area.end.x = opts.width - opts.area[1];\r\n      break;\r\n  }\r\n  chartData.legendData = legendData;\r\n  return legendData;\r\n}\r\n\r\nfunction calCategoriesData(categories, opts, config, eachSpacing, context) {\r\n  var result = {\r\n    angle: 0,\r\n    xAxisHeight: opts.xAxis.lineHeight * opts.pix + opts.xAxis.marginTop * opts.pix\r\n  };\r\n  var fontSize = opts.xAxis.fontSize * opts.pix;\r\n  var categoriesTextLenth = categories.map(function(item,index) {\r\n    var xitem = opts.xAxis.formatter ? opts.xAxis.formatter(item,index,opts) : item;\r\n    return measureText(String(xitem), fontSize, context);\r\n  });\r\n  var maxTextLength = Math.max.apply(this, categoriesTextLenth);\r\n  if (opts.xAxis.rotateLabel == true) {\r\n    result.angle = opts.xAxis.rotateAngle * Math.PI / 180;\r\n    let tempHeight = opts.xAxis.marginTop * opts.pix * 2 +  Math.abs(maxTextLength * Math.sin(result.angle))\r\n    tempHeight = tempHeight < fontSize + opts.xAxis.marginTop * opts.pix * 2 ? tempHeight + opts.xAxis.marginTop * opts.pix * 2 : tempHeight;\r\n    result.xAxisHeight = tempHeight;\r\n  }\r\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\r\n    result.xAxisHeight += 6 * opts.pix;\r\n  }\r\n  if (opts.xAxis.disabled){\r\n    result.xAxisHeight = 0;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getXAxisTextList(series, opts, config, stack) {\r\n  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\r\n  var data;\r\n  if (stack == 'stack') {\r\n    data = dataCombineStack(series, opts.categories.length);\r\n  } else {\r\n    data = dataCombine(series);\r\n  }\r\n  var sorted = [];\r\n  // remove null from data\r\n  data = data.filter(function(item) {\r\n    //return item !== null;\r\n    if (typeof item === 'object' && item !== null) {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        return item !== null;\r\n      } else {\r\n        return item.value !== null;\r\n      }\r\n    } else {\r\n      return item !== null;\r\n    }\r\n  });\r\n  data.map(function(item) {\r\n    if (typeof item === 'object') {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        if (opts.type == 'candle') {\r\n          item.map(function(subitem) {\r\n            sorted.push(subitem);\r\n          })\r\n        } else {\r\n          sorted.push(item[0]);\r\n        }\r\n      } else {\r\n        sorted.push(item.value);\r\n      }\r\n    } else {\r\n      sorted.push(item);\r\n    }\r\n  })\r\n\r\n  var minData = 0;\r\n  var maxData = 0;\r\n  if (sorted.length > 0) {\r\n    minData = Math.min.apply(this, sorted);\r\n    maxData = Math.max.apply(this, sorted);\r\n  }\r\n  //为了兼容v1.9.0之前的项目\r\n  if (index > -1) {\r\n    if (typeof opts.xAxis.data[index].min === 'number') {\r\n      minData = Math.min(opts.xAxis.data[index].min, minData);\r\n    }\r\n    if (typeof opts.xAxis.data[index].max === 'number') {\r\n      maxData = Math.max(opts.xAxis.data[index].max, maxData);\r\n    }\r\n  } else {\r\n    if (typeof opts.xAxis.min === 'number') {\r\n      minData = Math.min(opts.xAxis.min, minData);\r\n    }\r\n    if (typeof opts.xAxis.max === 'number') {\r\n      maxData = Math.max(opts.xAxis.max, maxData);\r\n    }\r\n  }\r\n  if (minData === maxData) {\r\n    var rangeSpan = maxData || 10;\r\n    maxData += rangeSpan;\r\n  }\r\n  //var dataRange = getDataRange(minData, maxData);\r\n  var minRange = minData;\r\n  var maxRange = maxData;\r\n  var range = [];\r\n  var eachRange = (maxRange - minRange) / opts.xAxis.splitNumber;\r\n  for (var i = 0; i <= opts.xAxis.splitNumber; i++) {\r\n    range.push(minRange + eachRange * i);\r\n  }\r\n  return range;\r\n}\r\n\r\nfunction calXAxisData(series, opts, config, context) {\r\n  //堆叠图重算Y轴\r\n  var columnstyle = assign({}, {\r\n    type: \"\"\r\n  }, opts.extra.bar);\r\n  var result = {\r\n    angle: 0,\r\n    xAxisHeight: opts.xAxis.lineHeight * opts.pix + opts.xAxis.marginTop * opts.pix\r\n  };\r\n  result.ranges = getXAxisTextList(series, opts, config, columnstyle.type);\r\n  result.rangesFormat = result.ranges.map(function(item) {\r\n    //item = opts.xAxis.formatter ? opts.xAxis.formatter(item) : util.toFixed(item, 2);\r\n    item = util.toFixed(item, 2);\r\n    return item;\r\n  });\r\n  var xAxisScaleValues = result.ranges.map(function(item) {\r\n    // 如果刻度值是浮点数,则保留两位小数\r\n    item = util.toFixed(item, 2);\r\n    // 若有自定义格式则调用自定义的格式化函数\r\n    //item = opts.xAxis.formatter ? opts.xAxis.formatter(Number(item)) : item;\r\n    return item;\r\n  });\r\n  result = Object.assign(result, getXAxisPoints(xAxisScaleValues, opts, config));\r\n  // 计算X轴刻度的属性譬如每个刻度的间隔,刻度的起始点\\结束点以及总长\r\n  var eachSpacing = result.eachSpacing;\r\n  var textLength = xAxisScaleValues.map(function(item) {\r\n    return measureText(item, opts.xAxis.fontSize * opts.pix, context);\r\n  });\r\n  if (opts.xAxis.disabled === true) {\r\n    result.xAxisHeight = 0;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getRadarDataPoints(angleList, center, radius, series, opts) {\r\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\r\n  var radarOption = opts.extra.radar || {};\r\n  radarOption.max = radarOption.max || 0;\r\n  var maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));\r\n  var data = [];\r\n  for (let i = 0; i < series.length; i++) {\r\n    let each = series[i];\r\n    let listItem = {};\r\n    listItem.color = each.color;\r\n    listItem.legendShape = each.legendShape;\r\n    listItem.pointShape = each.pointShape;\r\n    listItem.data = [];\r\n    each.data.forEach(function(item, index) {\r\n      let tmp = {};\r\n      tmp.angle = angleList[index];\r\n      tmp.proportion = item / maxData;\r\n      tmp.value = item;\r\n      tmp.position = convertCoordinateOrigin(radius * tmp.proportion * process * Math.cos(tmp.angle), radius * tmp.proportion * process * Math.sin(tmp.angle), center);\r\n      listItem.data.push(tmp);\r\n    });\r\n    data.push(listItem);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getPieDataPoints(series, radius) {\r\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  var count = 0;\r\n  var _start_ = 0;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    count += item.data;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    if (count === 0) {\r\n      item._proportion_ = 1 / series.length * process;\r\n    } else {\r\n      item._proportion_ = item.data / count * process;\r\n    }\r\n    item._radius_ = radius;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item._start_ = _start_;\r\n    _start_ += 2 * item._proportion_ * Math.PI;\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getFunnelDataPoints(series, radius, option, eachSpacing) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  for (let i = 0; i < series.length; i++) {\r\n    if(option.type == 'funnel'){\r\n      series[i].radius = series[i].data / series[0].data * radius * process;\r\n    }else{\r\n      series[i].radius =  (eachSpacing * (series.length - i)) / (eachSpacing * series.length) * radius * process;\r\n    }\r\n    series[i]._proportion_ = series[i].data / series[0].data;\r\n  }\r\n  // if(option.type !== 'pyramid'){\r\n  //   series.reverse();\r\n  // }\r\n  return series;\r\n}\r\n\r\nfunction getRoseDataPoints(series, type, minRadius, radius) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var count = 0;\r\n  var _start_ = 0;\r\n  var dataArr = [];\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    count += item.data;\r\n    dataArr.push(item.data);\r\n  }\r\n  var minData = Math.min.apply(null, dataArr);\r\n  var maxData = Math.max.apply(null, dataArr);\r\n  var radiusLength = radius - minRadius;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    if (count === 0) {\r\n      item._proportion_ = 1 / series.length * process;\r\n      item._rose_proportion_ = 1 / series.length * process;\r\n    } else {\r\n      item._proportion_ = item.data / count * process;\r\n      if(type == 'area'){\r\n        item._rose_proportion_ = 1 / series.length * process;\r\n      }else{\r\n        item._rose_proportion_ = item.data / count * process;\r\n      }\r\n    }\r\n    item._radius_ = minRadius + radiusLength * ((item.data - minData) / (maxData - minData)) || radius;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item._start_ = _start_;\r\n    _start_ += 2 * item._rose_proportion_ * Math.PI;\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getArcbarDataPoints(series, arcbarOption) {\r\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  if (process == 1) {\r\n    process = 0.999999;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    let totalAngle;\r\n    if (arcbarOption.type == 'circle') {\r\n      totalAngle = 2;\r\n    } else {\r\n      if(arcbarOption.direction == 'ccw'){\r\n        if (arcbarOption.startAngle < arcbarOption.endAngle) {\r\n          totalAngle = 2 + arcbarOption.startAngle - arcbarOption.endAngle;\r\n        } else {\r\n          totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\r\n        }\r\n      }else{\r\n        if (arcbarOption.endAngle < arcbarOption.startAngle) {\r\n          totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;\r\n        } else {\r\n          totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\r\n        }\r\n      }\r\n    }\r\n    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;\r\n    if(arcbarOption.direction == 'ccw'){\r\n      item._proportion_ = arcbarOption.startAngle - totalAngle * item.data * process ;\r\n    }\r\n    if (item._proportion_ >= 2) {\r\n      item._proportion_ = item._proportion_ % 2;\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getGaugeArcbarDataPoints(series, arcbarOption) {\r\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  if (process == 1) {\r\n    process = 0.999999;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    let totalAngle;\r\n    if (arcbarOption.type == 'circle') {\r\n      totalAngle = 2;\r\n    } else {\r\n      if (arcbarOption.endAngle < arcbarOption.startAngle) {\r\n        totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;\r\n      } else {\r\n        totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\r\n      }\r\n    }\r\n    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;\r\n    if (item._proportion_ >= 2) {\r\n      item._proportion_ = item._proportion_ % 2;\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getGaugeAxisPoints(categories, startAngle, endAngle) {\r\n  let totalAngle;\r\n  if (endAngle < startAngle) {\r\n    totalAngle = 2 + endAngle - startAngle;\r\n  } else {\r\n    totalAngle = startAngle - endAngle;\r\n  }\r\n  let tempStartAngle = startAngle;\r\n  for (let i = 0; i < categories.length; i++) {\r\n    categories[i].value = categories[i].value === null ? 0 : categories[i].value;\r\n    categories[i]._startAngle_ = tempStartAngle;\r\n    categories[i]._endAngle_ = totalAngle * categories[i].value + startAngle;\r\n    if (categories[i]._endAngle_ >= 2) {\r\n      categories[i]._endAngle_ = categories[i]._endAngle_ % 2;\r\n    }\r\n    tempStartAngle = categories[i]._endAngle_;\r\n  }\r\n  return categories;\r\n}\r\n\r\nfunction getGaugeDataPoints(series, categories, gaugeOption) {\r\n  let process = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    if (gaugeOption.pointer.color == 'auto') {\r\n      for (let i = 0; i < categories.length; i++) {\r\n        if (item.data <= categories[i].value) {\r\n          item.color = categories[i].color;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      item.color = gaugeOption.pointer.color;\r\n    }\r\n    let totalAngle;\r\n    if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n      totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n    } else {\r\n      totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n    }\r\n    item._endAngle_ = totalAngle * item.data + gaugeOption.startAngle;\r\n    item._oldAngle_ = gaugeOption.oldAngle;\r\n    if (gaugeOption.oldAngle < gaugeOption.endAngle) {\r\n      item._oldAngle_ += 2;\r\n    }\r\n    if (item.data >= gaugeOption.oldData) {\r\n      item._proportion_ = (item._endAngle_ - item._oldAngle_) * process + gaugeOption.oldAngle;\r\n    } else {\r\n      item._proportion_ = item._oldAngle_ - (item._oldAngle_ - item._endAngle_) * process;\r\n    }\r\n    if (item._proportion_ >= 2) {\r\n      item._proportion_ = item._proportion_ % 2;\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getPieTextMaxLength(series, config, context, opts) {\r\n  series = getPieDataPoints(series);\r\n  let maxLength = 0;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    let text = item.formatter ? item.formatter(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';\r\n    maxLength = Math.max(maxLength, measureText(text, item.textSize * opts.pix || config.fontSize, context));\r\n  }\r\n  return maxLength;\r\n}\r\n\r\nfunction fixColumeData(points, eachSpacing, columnLen, index, config, opts) {\r\n  return points.map(function(item) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    var seriesGap = 0;\r\n    var categoryGap = 0;\r\n    if (opts.type == 'mix') {\r\n      seriesGap = opts.extra.mix.column.seriesGap * opts.pix || 0;\r\n      categoryGap = opts.extra.mix.column.categoryGap * opts.pix || 0;\r\n    } else {\r\n      seriesGap = opts.extra.column.seriesGap * opts.pix || 0;\r\n      categoryGap = opts.extra.column.categoryGap * opts.pix || 0;\r\n    }\r\n    seriesGap =  Math.min(seriesGap, eachSpacing / columnLen)\r\n    categoryGap =  Math.min(categoryGap, eachSpacing / columnLen)\r\n    item.width = Math.ceil((eachSpacing - 2 * categoryGap - seriesGap * (columnLen - 1)) / columnLen);\r\n    if (opts.extra.mix && opts.extra.mix.column.width && +opts.extra.mix.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.mix.column.width * opts.pix);\r\n    }\r\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.column.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    item.x += (index + 0.5 - columnLen / 2) * (item.width + seriesGap);\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixBarData(points, eachSpacing, columnLen, index, config, opts) {\r\n  return points.map(function(item) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    var seriesGap = 0;\r\n    var categoryGap = 0;\r\n    seriesGap = opts.extra.bar.seriesGap * opts.pix || 0;\r\n    categoryGap = opts.extra.bar.categoryGap * opts.pix || 0;\r\n    seriesGap =  Math.min(seriesGap, eachSpacing / columnLen)\r\n    categoryGap =  Math.min(categoryGap, eachSpacing / columnLen)\r\n    item.width = Math.ceil((eachSpacing - 2 * categoryGap - seriesGap * (columnLen - 1)) / columnLen);\r\n    if (opts.extra.bar && opts.extra.bar.width && +opts.extra.bar.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.bar.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    item.y += (index + 0.5 - columnLen / 2) * (item.width + seriesGap);\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixColumeMeterData(points, eachSpacing, columnLen, index, config, opts, border) {\r\n  var categoryGap = opts.extra.column.categoryGap * opts.pix || 0;\r\n  return points.map(function(item) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    item.width = eachSpacing - 2 * categoryGap;\r\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.column.width * opts.pix);\r\n    }\r\n    if (index > 0) {\r\n      item.width -= border;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixColumeStackData(points, eachSpacing, columnLen, index, config, opts, series) {\r\n  var categoryGap = opts.extra.column.categoryGap * opts.pix || 0;\r\n  return points.map(function(item, indexn) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    item.width = Math.ceil(eachSpacing - 2 * categoryGap);\r\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.column.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixBarStackData(points, eachSpacing, columnLen, index, config, opts, series) {\r\n  var categoryGap = opts.extra.bar.categoryGap * opts.pix || 0;\r\n  return points.map(function(item, indexn) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    item.width = Math.ceil(eachSpacing - 2 * categoryGap);\r\n    if (opts.extra.bar && opts.extra.bar.width && +opts.extra.bar.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.bar.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction getXAxisPoints(categories, opts, config) {\r\n  var spacingValid = opts.width - opts.area[1] - opts.area[3];\r\n  var dataCount = opts.enableScroll ? Math.min(opts.xAxis.itemCount, categories.length) : categories.length;\r\n  if ((opts.type == 'line' || opts.type == 'area' || opts.type == 'scatter' || opts.type == 'bubble' || opts.type == 'bar') && dataCount > 1 && opts.xAxis.boundaryGap == 'justify') {\r\n    dataCount -= 1;\r\n  }\r\n  var widthRatio = 0;\r\n  if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1){\r\n    if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n    widthRatio = opts.extra.mount.widthRatio - 1;\r\n    dataCount += widthRatio;\r\n  }\r\n  var eachSpacing = spacingValid / dataCount;\r\n  var xAxisPoints = [];\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  categories.forEach(function(item, index) {\r\n    xAxisPoints.push(startX + widthRatio / 2 * eachSpacing + index * eachSpacing);\r\n  });\r\n  if (opts.xAxis.boundaryGap !== 'justify') {\r\n    if (opts.enableScroll === true) {\r\n      xAxisPoints.push(startX + widthRatio * eachSpacing + categories.length * eachSpacing);\r\n    } else {\r\n      xAxisPoints.push(endX);\r\n    }\r\n  }\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    startX: startX,\r\n    endX: endX,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\r\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var cPoints = [];\r\n      item.forEach(function(items, indexs) {\r\n        var point = {};\r\n        point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\r\n        var value = items.value || items;\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        height *= process;\r\n        point.y = opts.height - Math.round(height) - opts.area[2];\r\n        cPoints.push(point);\r\n      });\r\n      points.push(cPoints);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\r\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\r\n  var boundaryGap = 'center';\r\n  if (opts.type == 'line' || opts.type == 'area' || opts.type == 'scatter' || opts.type == 'bubble' ) {\r\n    boundaryGap = opts.xAxis.boundaryGap;\r\n  }\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index];\r\n      var value = item;\r\n      if (typeof item === 'object' && item !== null) {\r\n        if (item.constructor.toString().indexOf('Array') > -1) {\r\n          let xranges, xminRange, xmaxRange;\r\n          xranges = [].concat(opts.chartData.xAxisData.ranges);\r\n          xminRange = xranges.shift();\r\n          xmaxRange = xranges.pop();\r\n          value = item[1];\r\n          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\r\n          if(opts.type == 'bubble'){\r\n            point.r = item[2];\r\n            point.t = item[3];\r\n          }\r\n        } else {\r\n          value = item.value;\r\n        }\r\n      }\r\n      if (boundaryGap == 'center') {\r\n        point.x += eachSpacing / 2;\r\n      }\r\n      var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n      height *= process;\r\n      point.y = opts.height - height - opts.area[2];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getLineDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, lineOption, process){\r\n  var process = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\r\n  var boundaryGap = opts.xAxis.boundaryGap;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      if(lineOption.animation == 'vertical'){\r\n        point.x = xAxisPoints[index];\r\n        var value = item;\r\n        if (typeof item === 'object' && item !== null) {\r\n          if (item.constructor.toString().indexOf('Array') > -1) {\r\n            let xranges, xminRange, xmaxRange;\r\n            xranges = [].concat(opts.chartData.xAxisData.ranges);\r\n            xminRange = xranges.shift();\r\n            xmaxRange = xranges.pop();\r\n            value = item[1];\r\n            point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\r\n          } else {\r\n            value = item.value;\r\n          }\r\n        }\r\n        if (boundaryGap == 'center') {\r\n          point.x += eachSpacing / 2;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        height *= process;\r\n        point.y = opts.height - height - opts.area[2];\r\n        points.push(point);\r\n      }else{\r\n        point.x = xAxisPoints[0] + eachSpacing * index * process;\r\n        var value = item;\r\n        if (boundaryGap == 'center') {\r\n          point.x += eachSpacing / 2;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        point.y = opts.height - height - opts.area[2];\r\n        points.push(point);\r\n      }\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getColumnDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, zeroPoints, process){\r\n  var process = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index];\r\n      var value = item;\r\n      if (typeof item === 'object' && item !== null) {\r\n        if (item.constructor.toString().indexOf('Array') > -1) {\r\n          let xranges, xminRange, xmaxRange;\r\n          xranges = [].concat(opts.chartData.xAxisData.ranges);\r\n          xminRange = xranges.shift();\r\n          xmaxRange = xranges.pop();\r\n          value = item[1];\r\n          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\r\n        } else {\r\n          value = item.value;\r\n        }\r\n      }\r\n      point.x += eachSpacing / 2;\r\n      var height = validHeight * (value * process - minRange) / (maxRange - minRange);\r\n      point.y = opts.height - height - opts.area[2];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getMountDataPoints(series, minRange, maxRange, xAxisPoints, eachSpacing, opts, mountOption, zeroPoints) {\r\n  var process = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  var mountWidth = eachSpacing * mountOption.widthRatio;\r\n  series.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index];\r\n      point.x += eachSpacing / 2;\r\n      var value = item.data;\r\n      var height = validHeight * (value * process - minRange) / (maxRange - minRange);\r\n      point.y = opts.height - height - opts.area[2];\r\n      point.value = value;\r\n      point.width = mountWidth;\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getBarDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config) {\r\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.y = yAxisPoints[index];\r\n      var value = item;\r\n      if (typeof item === 'object' && item !== null) {\r\n        value = item.value;\r\n      }\r\n      var height = validWidth * (value - minRange) / (maxRange - minRange);\r\n      height *= process;\r\n      point.height = height;\r\n      point.value = value;\r\n      point.x = height + opts.area[3];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {\r\n  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\r\n\r\n      if (seriesIndex > 0) {\r\n        var value = 0;\r\n        for (let i = 0; i <= seriesIndex; i++) {\r\n          value += stackSeries[i].data[index];\r\n        }\r\n        var value0 = value - item;\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);\r\n      } else {\r\n        var value = item;\r\n        if (typeof item === 'object' && item !== null) {\r\n          value = item.value;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = 0;\r\n      }\r\n      var heightc = height0;\r\n      height *= process;\r\n      heightc *= process;\r\n      point.y = opts.height - Math.round(height) - opts.area[2];\r\n      point.y0 = opts.height - Math.round(heightc) - opts.area[2];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {\r\n  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\r\n  var points = [];\r\n  var validHeight = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.y = yAxisPoints[index];\r\n      if (seriesIndex > 0) {\r\n        var value = 0;\r\n        for (let i = 0; i <= seriesIndex; i++) {\r\n          value += stackSeries[i].data[index];\r\n        }\r\n        var value0 = value - item;\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);\r\n      } else {\r\n        var value = item;\r\n        if (typeof item === 'object' && item !== null) {\r\n          value = item.value;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = 0;\r\n      }\r\n      var heightc = height0;\r\n      height *= process;\r\n      heightc *= process;\r\n      point.height = height - heightc;\r\n      point.x = opts.area[3] + height;\r\n      point.x0 = opts.area[3] + heightc;\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getYAxisTextList(series, opts, config, stack, yData) {\r\n  var index = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : -1;\r\n  var data;\r\n  if (stack == 'stack') {\r\n    data = dataCombineStack(series, opts.categories.length);\r\n  } else {\r\n    data = dataCombine(series);\r\n  }\r\n  var sorted = [];\r\n  // remove null from data\r\n  data = data.filter(function(item) {\r\n    //return item !== null;\r\n    if (typeof item === 'object' && item !== null) {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        return item !== null;\r\n      } else {\r\n        return item.value !== null;\r\n      }\r\n    } else {\r\n      return item !== null;\r\n    }\r\n  });\r\n  data.map(function(item) {\r\n    if (typeof item === 'object') {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        if (opts.type == 'candle') {\r\n          item.map(function(subitem) {\r\n            sorted.push(subitem);\r\n          })\r\n        } else {\r\n          sorted.push(item[1]);\r\n        }\r\n      } else {\r\n        sorted.push(item.value);\r\n      }\r\n    } else {\r\n      sorted.push(item);\r\n    }\r\n  })\r\n  var minData = yData.min || 0;\r\n  var maxData = yData.max || 0;\r\n  if (sorted.length > 0) {\r\n    minData = Math.min.apply(this, sorted);\r\n    maxData = Math.max.apply(this, sorted);\r\n  }\r\n  if (minData === maxData) {\r\n    if(maxData == 0){\r\n      maxData = 10;\r\n    }else{\r\n      minData = 0;\r\n    }\r\n  }\r\n  var dataRange = getDataRange(minData, maxData);\r\n  var minRange = (yData.min === undefined || yData.min === null) ? dataRange.minRange : yData.min;\r\n  var maxRange = (yData.max === undefined || yData.max === null) ? dataRange.maxRange : yData.max;\r\n  var eachRange = (maxRange - minRange) / opts.yAxis.splitNumber;\r\n  var range = [];\r\n  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {\r\n    range.push(minRange + eachRange * i);\r\n  }\r\n  return range.reverse();\r\n}\r\n\r\nfunction calYAxisData(series, opts, config, context) {\r\n  //堆叠图重算Y轴\r\n  var columnstyle = assign({}, {\r\n    type: \"\"\r\n  }, opts.extra.column);\r\n  //如果是多Y轴，重新计算\r\n  var YLength = opts.yAxis.data.length;\r\n  var newSeries = new Array(YLength);\r\n  if (YLength > 0) {\r\n    for (let i = 0; i < YLength; i++) {\r\n      newSeries[i] = [];\r\n      for (let j = 0; j < series.length; j++) {\r\n        if (series[j].index == i) {\r\n          newSeries[i].push(series[j]);\r\n        }\r\n      }\r\n    }\r\n    var rangesArr = new Array(YLength);\r\n    var rangesFormatArr = new Array(YLength);\r\n    var yAxisWidthArr = new Array(YLength);\r\n\r\n    for (let i = 0; i < YLength; i++) {\r\n      let yData = opts.yAxis.data[i];\r\n      //如果总开关不显示，强制每个Y轴为不显示\r\n      if (opts.yAxis.disabled == true) {\r\n        yData.disabled = true;\r\n      }\r\n      if(yData.type === 'categories'){\r\n        if(!yData.formatter){\r\n          yData.formatter = (val,index,opts) => {return val + (yData.unit || '')};\r\n        }\r\n        yData.categories = yData.categories || opts.categories;\r\n        rangesArr[i] = yData.categories;\r\n      }else{\r\n        if(!yData.formatter){\r\n          yData.formatter = (val,index,opts) => {return util.toFixed(val, yData.tofix || 0) + (yData.unit || '')};\r\n        }\r\n        rangesArr[i] = getYAxisTextList(newSeries[i], opts, config, columnstyle.type, yData, i);\r\n      }\r\n      let yAxisFontSizes = yData.fontSize * opts.pix || config.fontSize;\r\n      yAxisWidthArr[i] = {\r\n        position: yData.position ? yData.position : 'left',\r\n        width: 0\r\n      };\r\n      rangesFormatArr[i] = rangesArr[i].map(function(items,index) {\r\n        items = yData.formatter(items,index,opts);\r\n        yAxisWidthArr[i].width = Math.max(yAxisWidthArr[i].width, measureText(items, yAxisFontSizes, context) + 5);\r\n        return items;\r\n      });\r\n      let calibration = yData.calibration ? 4 * opts.pix : 0;\r\n      yAxisWidthArr[i].width += calibration + 3 * opts.pix;\r\n      if (yData.disabled === true) {\r\n        yAxisWidthArr[i].width = 0;\r\n      }\r\n    }\r\n  } else {\r\n    var rangesArr = new Array(1);\r\n    var rangesFormatArr = new Array(1);\r\n    var yAxisWidthArr = new Array(1);\r\n    if(opts.type === 'bar'){\r\n      rangesArr[0] = opts.categories;\r\n      if(!opts.yAxis.formatter){\r\n        opts.yAxis.formatter = (val,index,opts) => {return val + (opts.yAxis.unit || '')}\r\n      }\r\n    }else{\r\n      if(!opts.yAxis.formatter){\r\n        opts.yAxis.formatter = (val,index,opts) => {return val.toFixed(opts.yAxis.tofix ) + (opts.yAxis.unit || '')}\r\n      }\r\n      rangesArr[0] = getYAxisTextList(series, opts, config, columnstyle.type, {});\r\n    }\r\n    yAxisWidthArr[0] = {\r\n      position: 'left',\r\n      width: 0\r\n    };\r\n    var yAxisFontSize = opts.yAxis.fontSize * opts.pix || config.fontSize;\r\n    rangesFormatArr[0] = rangesArr[0].map(function(item,index) {\r\n      item = opts.yAxis.formatter(item,index,opts);\r\n      yAxisWidthArr[0].width = Math.max(yAxisWidthArr[0].width, measureText(item, yAxisFontSize, context) + 5);\r\n      return item;\r\n    });\r\n    yAxisWidthArr[0].width += 3 * opts.pix;\r\n    if (opts.yAxis.disabled === true) {\r\n      yAxisWidthArr[0] = {\r\n        position: 'left',\r\n        width: 0\r\n      };\r\n      opts.yAxis.data[0] = {\r\n        disabled: true\r\n      };\r\n    } else {\r\n      opts.yAxis.data[0] = {\r\n        disabled: false,\r\n        position: 'left',\r\n        max: opts.yAxis.max,\r\n        min: opts.yAxis.min,\r\n        formatter: opts.yAxis.formatter\r\n      };\r\n      if(opts.type === 'bar'){\r\n        opts.yAxis.data[0].categories = opts.categories;\r\n        opts.yAxis.data[0].type = 'categories';\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    rangesFormat: rangesFormatArr,\r\n    ranges: rangesArr,\r\n    yAxisWidth: yAxisWidthArr\r\n  };\r\n}\r\n\r\nfunction calTooltipYAxisData(point, series, opts, config, eachSpacing) {\r\n  let ranges = [].concat(opts.chartData.yAxisData.ranges);\r\n  let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  let minAxis = opts.area[0];\r\n  let items = [];\r\n  for (let i = 0; i < ranges.length; i++) {\r\n    let maxVal = Math.max.apply(this, ranges[i]);\r\n    let minVal = Math.min.apply(this, ranges[i]);\r\n    let item = maxVal - (maxVal - minVal) * (point - minAxis) / spacingValid;\r\n    item = opts.yAxis.data && opts.yAxis.data[i].formatter ? opts.yAxis.data[i].formatter(item, i, opts) : item.toFixed(0);\r\n    items.push(String(item))\r\n  }\r\n  return items;\r\n}\r\n\r\nfunction calMarkLineData(points, opts) {\r\n  let minRange, maxRange;\r\n  let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  for (let i = 0; i < points.length; i++) {\r\n    points[i].yAxisIndex = points[i].yAxisIndex ? points[i].yAxisIndex : 0;\r\n    let range = [].concat(opts.chartData.yAxisData.ranges[points[i].yAxisIndex]);\r\n    minRange = range.pop();\r\n    maxRange = range.shift();\r\n    let height = spacingValid * (points[i].value - minRange) / (maxRange - minRange);\r\n    points[i].y = opts.height - Math.round(height) - opts.area[2];\r\n  }\r\n  return points;\r\n}\r\n\r\nfunction contextRotate(context, opts) {\r\n  if (opts.rotateLock !== true) {\r\n    context.translate(opts.height, 0);\r\n    context.rotate(90 * Math.PI / 180);\r\n  } else if (opts._rotate_ !== true) {\r\n    context.translate(opts.height, 0);\r\n    context.rotate(90 * Math.PI / 180);\r\n    opts._rotate_ = true;\r\n  }\r\n}\r\n\r\nfunction drawPointShape(points, color, shape, context, opts) {\r\n  context.beginPath();\r\n  if (opts.dataPointShapeType == 'hollow') {\r\n    context.setStrokeStyle(color);\r\n    context.setFillStyle(opts.background);\r\n    context.setLineWidth(2 * opts.pix);\r\n  } else {\r\n    context.setStrokeStyle(\"#ffffff\");\r\n    context.setFillStyle(color);\r\n    context.setLineWidth(1 * opts.pix);\r\n  }\r\n  if (shape === 'diamond') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y);\r\n        context.lineTo(item.x, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'circle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x + 2.5 * opts.pix, item.y);\r\n        context.arc(item.x, item.y, 3 * opts.pix, 0, 2 * Math.PI, false);\r\n      }\r\n    });\r\n  } else if (shape === 'square') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x - 3.5, item.y - 3.5);\r\n        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\r\n      }\r\n    });\r\n  } else if (shape === 'triangle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y + 4.5);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'none') {\r\n    return;\r\n  }\r\n  context.closePath();\r\n  context.fill();\r\n  context.stroke();\r\n}\r\n\r\nfunction drawActivePoint(points, color, shape, context, opts, option, seriesIndex) {\r\n  if(!opts.tooltip){\r\n    return\r\n  }\r\n  if(opts.tooltip.group.length>0 && opts.tooltip.group.includes(seriesIndex) == false){\r\n    return\r\n  }\r\n  var pointIndex = typeof opts.tooltip.index === 'number' ? opts.tooltip.index : opts.tooltip.index[opts.tooltip.group.indexOf(seriesIndex)];\r\n  context.beginPath();\r\n  if (option.activeType == 'hollow') {\r\n    context.setStrokeStyle(color);\r\n    context.setFillStyle(opts.background);\r\n    context.setLineWidth(2 * opts.pix);\r\n  } else {\r\n    context.setStrokeStyle(\"#ffffff\");\r\n    context.setFillStyle(color);\r\n    context.setLineWidth(1 * opts.pix);\r\n  }\r\n  if (shape === 'diamond') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index ) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y);\r\n        context.lineTo(item.x, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'circle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index) {\r\n        context.moveTo(item.x + 2.5 * opts.pix, item.y);\r\n        context.arc(item.x, item.y, 3 * opts.pix, 0, 2 * Math.PI, false);\r\n      }\r\n    });\r\n  } else if (shape === 'square') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index) {\r\n        context.moveTo(item.x - 3.5, item.y - 3.5);\r\n        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\r\n      }\r\n    });\r\n  } else if (shape === 'triangle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y + 4.5);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'none') {\r\n    return;\r\n  }\r\n  context.closePath();\r\n  context.fill();\r\n  context.stroke();\r\n}\r\n\r\nfunction drawRingTitle(opts, config, context, center) {\r\n  var titlefontSize = opts.title.fontSize || config.titleFontSize;\r\n  var subtitlefontSize = opts.subtitle.fontSize || config.subtitleFontSize;\r\n  var title = opts.title.name || '';\r\n  var subtitle = opts.subtitle.name || '';\r\n  var titleFontColor = opts.title.color || opts.fontColor;\r\n  var subtitleFontColor = opts.subtitle.color || opts.fontColor;\r\n  var titleHeight = title ? titlefontSize : 0;\r\n  var subtitleHeight = subtitle ? subtitlefontSize : 0;\r\n  var margin = 5;\r\n  if (subtitle) {\r\n    var textWidth = measureText(subtitle, subtitlefontSize * opts.pix, context);\r\n    var startX = center.x - textWidth / 2 + (opts.subtitle.offsetX|| 0) * opts.pix ;\r\n    var startY = center.y + subtitlefontSize * opts.pix / 2 + (opts.subtitle.offsetY || 0) * opts.pix;\r\n    if (title) {\r\n      startY += (titleHeight * opts.pix + margin) / 2;\r\n    }\r\n    context.beginPath();\r\n    context.setFontSize(subtitlefontSize * opts.pix);\r\n    context.setFillStyle(subtitleFontColor);\r\n    context.fillText(subtitle, startX, startY);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n  if (title) {\r\n    var _textWidth = measureText(title, titlefontSize * opts.pix, context);\r\n    var _startX = center.x - _textWidth / 2 + (opts.title.offsetX || 0);\r\n    var _startY = center.y + titlefontSize * opts.pix / 2 + (opts.title.offsetY || 0) * opts.pix;\r\n    if (subtitle) {\r\n      _startY -= (subtitleHeight * opts.pix + margin) / 2;\r\n    }\r\n    context.beginPath();\r\n    context.setFontSize(titlefontSize * opts.pix);\r\n    context.setFillStyle(titleFontColor);\r\n    context.fillText(title, _startX, _startY);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nfunction drawPointText(points, series, config, context, opts) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series.textSize ? series.textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series.textColor || opts.fontColor);\r\n      var value = data[index]\r\n      if (typeof data[index] === 'object' && data[index] !== null) {\r\n        if (data[index].constructor.toString().indexOf('Array')>-1) {\r\n          value = data[index][1];\r\n        } else {\r\n          value = data[index].value\r\n        }\r\n      }\r\n      var formatVal = series.formatter ? series.formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('center');\r\n      context.fillText(String(formatVal), item.x, item.y - 4 + textOffset * opts.pix);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawColumePointText(points, series, config, context, opts) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  var Position = opts.extra.column.labelPosition;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series.textSize ? series.textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series.textColor || opts.fontColor);\r\n      var value = data[index]\r\n      if (typeof data[index] === 'object' && data[index] !== null) {\r\n        if (data[index].constructor.toString().indexOf('Array')>-1) {\r\n          value = data[index][1];\r\n        } else {\r\n          value = data[index].value\r\n        }\r\n      }\r\n      var formatVal = series.formatter ? series.formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('center');\r\n      var startY = item.y - 4 * opts.pix + textOffset * opts.pix;\r\n      if(item.y > series.zeroPoints){\r\n        startY = item.y + textOffset * opts.pix + fontSize;\r\n      }\r\n      if(Position == 'insideTop'){\r\n        startY = item.y + fontSize + textOffset * opts.pix;\r\n        if(item.y > series.zeroPoints){\r\n          startY = item.y - textOffset * opts.pix - 4 * opts.pix;\r\n        }\r\n      }\r\n      if(Position == 'center'){\r\n        startY = item.y + textOffset * opts.pix + (opts.height - opts.area[2] - item.y + fontSize)/2;\r\n        if(series.zeroPoints < opts.height - opts.area[2]){\r\n          startY = item.y + textOffset * opts.pix + (series.zeroPoints - item.y + fontSize)/2;\r\n        }\r\n        if(item.y > series.zeroPoints){\r\n          startY = item.y - textOffset * opts.pix - (item.y - series.zeroPoints - fontSize)/2;\r\n        }\r\n        if(opts.extra.column.type == 'stack'){\r\n          startY = item.y + textOffset * opts.pix + (item.y0 - item.y + fontSize)/2;\r\n        }\r\n      }\r\n      if(Position == 'bottom'){\r\n        startY = opts.height - opts.area[2] + textOffset * opts.pix - 4 * opts.pix;\r\n        if(series.zeroPoints < opts.height - opts.area[2]){\r\n          startY = series.zeroPoints + textOffset * opts.pix - 4 * opts.pix;\r\n        }\r\n        if(item.y > series.zeroPoints){\r\n          startY = series.zeroPoints - textOffset * opts.pix + fontSize + 2 * opts.pix;\r\n        }\r\n        if(opts.extra.column.type == 'stack'){\r\n          startY = item.y0 + textOffset * opts.pix - 4 * opts.pix;\r\n        }\r\n      }\r\n      context.fillText(String(formatVal), item.x, startY);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawMountPointText(points, series, config, context, opts, zeroPoints) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  var Position = opts.extra.mount.labelPosition;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series[index].textSize ? series[index].textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series[index].textColor || opts.fontColor);\r\n      var value = item.value\r\n      var formatVal = series[index].formatter ? series[index].formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('center');\r\n      var startY = item.y - 4 * opts.pix + textOffset * opts.pix;\r\n      if(item.y > zeroPoints){\r\n        startY = item.y + textOffset * opts.pix + fontSize;\r\n      }\r\n      context.fillText(String(formatVal), item.x, startY);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawBarPointText(points, series, config, context, opts) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series.textSize ? series.textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series.textColor || opts.fontColor);\r\n      var value = data[index]\r\n      if (typeof data[index] === 'object' && data[index] !== null) {\r\n        value = data[index].value ;\r\n      }\r\n      var formatVal = series.formatter ? series.formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('left');\r\n      context.fillText(String(formatVal), item.x + 4 * opts.pix , item.y + fontSize / 2 - 3 );\r\n      context.closePath();\r\n      context.stroke();\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context) {\r\n  radius -= gaugeOption.width / 2 + gaugeOption.labelOffset * opts.pix;\r\n  radius = radius < 10 ? 10 : radius;\r\n  let totalAngle;\r\n  if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n    totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n  } else {\r\n    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n  }\r\n  let splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\r\n  let totalNumber = gaugeOption.endNumber - gaugeOption.startNumber;\r\n  let splitNumber = totalNumber / gaugeOption.splitLine.splitNumber;\r\n  let nowAngle = gaugeOption.startAngle;\r\n  let nowNumber = gaugeOption.startNumber;\r\n  for (let i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {\r\n    var pos = {\r\n      x: radius * Math.cos(nowAngle * Math.PI),\r\n      y: radius * Math.sin(nowAngle * Math.PI)\r\n    };\r\n    var labelText = gaugeOption.formatter ? gaugeOption.formatter(nowNumber,i,opts) : nowNumber;\r\n    pos.x += centerPosition.x - measureText(labelText, config.fontSize, context) / 2;\r\n    pos.y += centerPosition.y;\r\n    var startX = pos.x;\r\n    var startY = pos.y;\r\n    context.beginPath();\r\n    context.setFontSize(config.fontSize);\r\n    context.setFillStyle(gaugeOption.labelColor || opts.fontColor);\r\n    context.fillText(labelText, startX, startY + config.fontSize / 2);\r\n    context.closePath();\r\n    context.stroke();\r\n    nowAngle += splitAngle;\r\n    if (nowAngle >= 2) {\r\n      nowAngle = nowAngle % 2;\r\n    }\r\n    nowNumber += splitNumber;\r\n  }\r\n}\r\n\r\nfunction drawRadarLabel(angleList, radius, centerPosition, opts, config, context) {\r\n  var radarOption = opts.extra.radar || {};\r\n  angleList.forEach(function(angle, index) {\r\n    if(radarOption.labelPointShow === true && opts.categories[index] !== ''){\r\n      var posPoint = {\r\n        x: radius * Math.cos(angle),\r\n        y: radius * Math.sin(angle)\r\n      };\r\n      var posPointAxis = convertCoordinateOrigin(posPoint.x, posPoint.y, centerPosition);\r\n      context.setFillStyle(radarOption.labelPointColor);\r\n      context.beginPath();\r\n      context.arc(posPointAxis.x, posPointAxis.y, radarOption.labelPointRadius * opts.pix, 0, 2 * Math.PI, false);\r\n      context.closePath();\r\n      context.fill();\r\n    }\r\n    if(radarOption.labelShow === true){\r\n      var pos = {\r\n        x: (radius + config.radarLabelTextMargin * opts.pix) * Math.cos(angle),\r\n        y: (radius + config.radarLabelTextMargin * opts.pix) * Math.sin(angle)\r\n      };\r\n      var posRelativeCanvas = convertCoordinateOrigin(pos.x, pos.y, centerPosition);\r\n      var startX = posRelativeCanvas.x;\r\n      var startY = posRelativeCanvas.y;\r\n      if (util.approximatelyEqual(pos.x, 0)) {\r\n        startX -= measureText(opts.categories[index] || '', config.fontSize, context) / 2;\r\n      } else if (pos.x < 0) {\r\n        startX -= measureText(opts.categories[index] || '', config.fontSize, context);\r\n      }\r\n      context.beginPath();\r\n      context.setFontSize(config.fontSize);\r\n      context.setFillStyle(radarOption.labelColor || opts.fontColor);\r\n      context.fillText(opts.categories[index] || '', startX, startY + config.fontSize / 2);\r\n      context.closePath();\r\n      context.stroke();\r\n    }\r\n  });\r\n\r\n}\r\n\r\nfunction drawPieText(series, opts, config, context, radius, center) {\r\n  var lineRadius = config.pieChartLinePadding;\r\n  var textObjectCollection = [];\r\n  var lastTextObject = null;\r\n  var seriesConvert = series.map(function(item,index) {\r\n    var text = item.formatter ? item.formatter(item,index,series,opts) : util.toFixed(item._proportion_.toFixed(4) * 100) + '%';\r\n    text = item.labelText ? item.labelText : text;\r\n    var arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._proportion_ / 2);\r\n    if (item._rose_proportion_) {\r\n      arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._rose_proportion_ / 2);\r\n    }\r\n    var color = item.color;\r\n    var radius = item._radius_;\r\n    return {\r\n      arc: arc,\r\n      text: text,\r\n      color: color,\r\n      radius: radius,\r\n      textColor: item.textColor,\r\n      textSize: item.textSize,\r\n      labelShow: item.labelShow\r\n    };\r\n  });\r\n  for (let i = 0; i < seriesConvert.length; i++) {\r\n    let item = seriesConvert[i];\r\n    // line end\r\n    let orginX1 = Math.cos(item.arc) * (item.radius + lineRadius);\r\n    let orginY1 = Math.sin(item.arc) * (item.radius + lineRadius);\r\n    // line start\r\n    let orginX2 = Math.cos(item.arc) * item.radius;\r\n    let orginY2 = Math.sin(item.arc) * item.radius;\r\n    // text start\r\n    let orginX3 = orginX1 >= 0 ? orginX1 + config.pieChartTextPadding : orginX1 - config.pieChartTextPadding;\r\n    let orginY3 = orginY1;\r\n    let textWidth = measureText(item.text, item.textSize * opts.pix || config.fontSize, context);\r\n    let startY = orginY3;\r\n    if (lastTextObject && util.isSameXCoordinateArea(lastTextObject.start, {\r\n        x: orginX3\r\n      })) {\r\n      if (orginX3 > 0) {\r\n        startY = Math.min(orginY3, lastTextObject.start.y);\r\n      } else if (orginX1 < 0) {\r\n        startY = Math.max(orginY3, lastTextObject.start.y);\r\n      } else {\r\n        if (orginY3 > 0) {\r\n          startY = Math.max(orginY3, lastTextObject.start.y);\r\n        } else {\r\n          startY = Math.min(orginY3, lastTextObject.start.y);\r\n        }\r\n      }\r\n    }\r\n    if (orginX3 < 0) {\r\n      orginX3 -= textWidth;\r\n    }\r\n    let textObject = {\r\n      lineStart: {\r\n        x: orginX2,\r\n        y: orginY2\r\n      },\r\n      lineEnd: {\r\n        x: orginX1,\r\n        y: orginY1\r\n      },\r\n      start: {\r\n        x: orginX3,\r\n        y: startY\r\n      },\r\n      width: textWidth,\r\n      height: config.fontSize,\r\n      text: item.text,\r\n      color: item.color,\r\n      textColor: item.textColor,\r\n      textSize: item.textSize\r\n    };\r\n    lastTextObject = avoidCollision(textObject, lastTextObject);\r\n    textObjectCollection.push(lastTextObject);\r\n  }\r\n  for (let i = 0; i < textObjectCollection.length; i++) {\r\n    if(seriesConvert[i].labelShow === false){\r\n      continue;\r\n    }\r\n    let item = textObjectCollection[i];\r\n    let lineStartPoistion = convertCoordinateOrigin(item.lineStart.x, item.lineStart.y, center);\r\n    let lineEndPoistion = convertCoordinateOrigin(item.lineEnd.x, item.lineEnd.y, center);\r\n    let textPosition = convertCoordinateOrigin(item.start.x, item.start.y, center);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.setFontSize(item.textSize * opts.pix || config.fontSize);\r\n    context.beginPath();\r\n    context.setStrokeStyle(item.color);\r\n    context.setFillStyle(item.color);\r\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\r\n    let curveStartX = item.start.x < 0 ? textPosition.x + item.width : textPosition.x;\r\n    let textStartX = item.start.x < 0 ? textPosition.x - 5 : textPosition.x + 5;\r\n    context.quadraticCurveTo(lineEndPoistion.x, lineEndPoistion.y, curveStartX, textPosition.y);\r\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\r\n    context.stroke();\r\n    context.closePath();\r\n    context.beginPath();\r\n    context.moveTo(textPosition.x + item.width, textPosition.y);\r\n    context.arc(curveStartX, textPosition.y, 2 * opts.pix, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    context.beginPath();\r\n    context.setFontSize(item.textSize * opts.pix || config.fontSize);\r\n    context.setFillStyle(item.textColor || opts.fontColor);\r\n    context.fillText(item.text, textStartX, textPosition.y + 3);\r\n    context.closePath();\r\n    context.stroke();\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nfunction drawToolTipSplitLine(offsetX, opts, config, context) {\r\n  var toolTipOption = opts.extra.tooltip || {};\r\n  toolTipOption.gridType = toolTipOption.gridType == undefined ? 'solid' : toolTipOption.gridType;\r\n  toolTipOption.dashLength = toolTipOption.dashLength == undefined ? 4 : toolTipOption.dashLength;\r\n  var startY = opts.area[0];\r\n  var endY = opts.height - opts.area[2];\r\n  if (toolTipOption.gridType == 'dash') {\r\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\r\n  }\r\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\r\n  context.setLineWidth(1 * opts.pix);\r\n  context.beginPath();\r\n  context.moveTo(offsetX, startY);\r\n  context.lineTo(offsetX, endY);\r\n  context.stroke();\r\n  context.setLineDash([]);\r\n  if (toolTipOption.xAxisLabel) {\r\n    let labelText = opts.categories[opts.tooltip.index];\r\n    context.setFontSize(config.fontSize);\r\n    let textWidth = measureText(labelText, config.fontSize, context);\r\n    let textX = offsetX - 0.5 * textWidth;\r\n    let textY = endY + 2 * opts.pix;\r\n    context.beginPath();\r\n    context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\r\n    context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.rect(textX - toolTipOption.boxPadding * opts.pix, textY, textWidth + 2 * toolTipOption.boxPadding * opts.pix, config.fontSize + 2 * toolTipOption.boxPadding * opts.pix);\r\n    context.closePath();\r\n    context.stroke();\r\n    context.fill();\r\n    context.beginPath();\r\n    context.setFontSize(config.fontSize);\r\n    context.setFillStyle(toolTipOption.labelFontColor || opts.fontColor);\r\n    context.fillText(String(labelText), textX, textY + toolTipOption.boxPadding * opts.pix + config.fontSize);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nfunction drawMarkLine(opts, config, context) {\r\n  let markLineOption = assign({}, {\r\n    type: 'solid',\r\n    dashLength: 4,\r\n    data: []\r\n  }, opts.extra.markLine);\r\n  let startX = opts.area[3];\r\n  let endX = opts.width - opts.area[1];\r\n  let points = calMarkLineData(markLineOption.data, opts);\r\n  for (let i = 0; i < points.length; i++) {\r\n    let item = assign({}, {\r\n      lineColor: '#DE4A42',\r\n      showLabel: false,\r\n      labelFontSize: 13,\r\n      labelPadding: 6,\r\n      labelFontColor: '#666666',\r\n      labelBgColor: '#DFE8FF',\r\n      labelBgOpacity: 0.8,\r\n      labelAlign: 'left',\r\n      labelOffsetX: 0,\r\n      labelOffsetY: 0,\r\n    }, points[i]);\r\n    if (markLineOption.type == 'dash') {\r\n      context.setLineDash([markLineOption.dashLength, markLineOption.dashLength]);\r\n    }\r\n    context.setStrokeStyle(item.lineColor);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.beginPath();\r\n    context.moveTo(startX, item.y);\r\n    context.lineTo(endX, item.y);\r\n    context.stroke();\r\n    context.setLineDash([]);\r\n    if (item.showLabel) {\r\n      let fontSize = item.labelFontSize * opts.pix;\r\n      let labelText = item.labelText ? item.labelText : item.value;\r\n      context.setFontSize(fontSize);\r\n      let textWidth = measureText(labelText, fontSize, context);\r\n      let bgWidth = textWidth + item.labelPadding * opts.pix * 2;\r\n      let bgStartX = item.labelAlign == 'left' ? opts.area[3] - bgWidth : opts.width - opts.area[1];\r\n      bgStartX += item.labelOffsetX;\r\n      let bgStartY = item.y - 0.5 * fontSize - item.labelPadding * opts.pix;\r\n      bgStartY += item.labelOffsetY;\r\n      let textX = bgStartX + item.labelPadding * opts.pix;\r\n      let textY = item.y;\r\n      context.setFillStyle(hexToRgb(item.labelBgColor, item.labelBgOpacity));\r\n      context.setStrokeStyle(item.labelBgColor);\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.beginPath();\r\n      context.rect(bgStartX, bgStartY, bgWidth, fontSize + 2 * item.labelPadding * opts.pix);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.fill();\r\n      context.setFontSize(fontSize);\r\n      context.setTextAlign('left');\r\n      context.setFillStyle(item.labelFontColor);\r\n      context.fillText(String(labelText), textX, bgStartY + fontSize + item.labelPadding * opts.pix/2);\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints) {\r\n  var toolTipOption = assign({}, {\r\n    gridType: 'solid',\r\n    dashLength: 4\r\n  }, opts.extra.tooltip);\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  if (toolTipOption.gridType == 'dash') {\r\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\r\n  }\r\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\r\n  context.setLineWidth(1 * opts.pix);\r\n  context.beginPath();\r\n  context.moveTo(startX, opts.tooltip.offset.y);\r\n  context.lineTo(endX, opts.tooltip.offset.y);\r\n  context.stroke();\r\n  context.setLineDash([]);\r\n  if (toolTipOption.yAxisLabel) {\r\n    let boxPadding = toolTipOption.boxPadding * opts.pix;\r\n    let labelText = calTooltipYAxisData(opts.tooltip.offset.y, opts.series, opts, config, eachSpacing);\r\n    let widthArr = opts.chartData.yAxisData.yAxisWidth;\r\n    let tStartLeft = opts.area[3];\r\n    let tStartRight = opts.width - opts.area[1];\r\n    for (let i = 0; i < labelText.length; i++) {\r\n      context.setFontSize(toolTipOption.fontSize * opts.pix);\r\n      let textWidth = measureText(labelText[i], toolTipOption.fontSize * opts.pix, context);\r\n      let bgStartX, bgEndX, bgWidth;\r\n      if (widthArr[i].position == 'left') {\r\n        bgStartX = tStartLeft - (textWidth + boxPadding * 2) - 2 * opts.pix;\r\n        bgEndX = Math.max(bgStartX, bgStartX + textWidth + boxPadding * 2);\r\n      } else {\r\n        bgStartX = tStartRight + 2 * opts.pix;\r\n        bgEndX = Math.max(bgStartX + widthArr[i].width, bgStartX + textWidth + boxPadding * 2);\r\n      }\r\n      bgWidth = bgEndX - bgStartX;\r\n      let textX = bgStartX + (bgWidth - textWidth) / 2;\r\n      let textY = opts.tooltip.offset.y;\r\n      context.beginPath();\r\n      context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\r\n      context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.rect(bgStartX, textY - 0.5 * config.fontSize - boxPadding, bgWidth, config.fontSize + 2 * boxPadding);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFontSize(config.fontSize);\r\n      context.setFillStyle(toolTipOption.labelFontColor || opts.fontColor);\r\n      context.fillText(labelText[i], textX, textY + 0.5 * config.fontSize);\r\n      context.closePath();\r\n      context.stroke();\r\n      if (widthArr[i].position == 'left') {\r\n        tStartLeft -= (widthArr[i].width + opts.yAxis.padding * opts.pix);\r\n      } else {\r\n        tStartRight += widthArr[i].width + opts.yAxis.padding * opts.pix;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {\r\n  var toolTipOption = assign({}, {\r\n    activeBgColor: '#000000',\r\n    activeBgOpacity: 0.08,\r\n    activeWidth: eachSpacing\r\n  }, opts.extra.column);\r\n  toolTipOption.activeWidth = toolTipOption.activeWidth > eachSpacing ? eachSpacing : toolTipOption.activeWidth;\r\n  var startY = opts.area[0];\r\n  var endY = opts.height - opts.area[2];\r\n  context.beginPath();\r\n  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));\r\n  context.rect(offsetX - toolTipOption.activeWidth / 2, startY, toolTipOption.activeWidth, endY - startY);\r\n  context.closePath();\r\n  context.fill();\r\n  context.setFillStyle(\"#FFFFFF\");\r\n}\r\n\r\nfunction drawBarToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {\r\n  var toolTipOption = assign({}, {\r\n    activeBgColor: '#000000',\r\n    activeBgOpacity: 0.08\r\n  }, opts.extra.bar);\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  context.beginPath();\r\n  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));\r\n  context.rect( startX ,offsetX - eachSpacing / 2 ,  endX - startX,eachSpacing);\r\n  context.closePath();\r\n  context.fill();\r\n  context.setFillStyle(\"#FFFFFF\");\r\n}\r\n\r\n\r\nfunction drawToolTip(textList, offset, opts, config, context, eachSpacing, xAxisPoints) {\r\n  var toolTipOption = assign({}, {\r\n    showBox: true,\r\n    showArrow: true,\r\n    showCategory: false,\r\n    bgColor: '#000000',\r\n    bgOpacity: 0.7,\r\n    borderColor: '#000000',\r\n    borderWidth: 0,\r\n    borderRadius: 0,\r\n    borderOpacity: 0.7,\r\n    boxPadding: 3,\r\n    fontColor: '#FFFFFF',\r\n    fontSize: 13,\r\n    lineHeight: 20,\r\n    legendShow: true,\r\n    legendShape: 'auto',\r\n    splitLine: true,\r\n  }, opts.extra.tooltip);\r\n  if(toolTipOption.showCategory==true && opts.categories){\r\n    textList.unshift({text:opts.categories[opts.tooltip.index],color:null})\r\n  }\r\n  var fontSize = toolTipOption.fontSize * opts.pix;\r\n  var lineHeight = toolTipOption.lineHeight * opts.pix;\r\n  var boxPadding = toolTipOption.boxPadding * opts.pix;\r\n  var legendWidth = fontSize;\r\n  var legendMarginRight = 5 * opts.pix;\r\n  if(toolTipOption.legendShow == false){\r\n    legendWidth = 0;\r\n    legendMarginRight = 0;\r\n  }\r\n  var arrowWidth = toolTipOption.showArrow ? 8 * opts.pix : 0;\r\n  var isOverRightBorder = false;\r\n  if (opts.type == 'line' || opts.type == 'mount' || opts.type == 'area' || opts.type == 'candle' || opts.type == 'mix') {\r\n    if (toolTipOption.splitLine == true) {\r\n      drawToolTipSplitLine(opts.tooltip.offset.x, opts, config, context);\r\n    }\r\n  }\r\n  offset = assign({\r\n    x: 0,\r\n    y: 0\r\n  }, offset);\r\n  offset.y -= 8 * opts.pix;\r\n  var textWidth = textList.map(function(item) {\r\n    return measureText(item.text, fontSize, context);\r\n  });\r\n  var toolTipWidth = legendWidth + legendMarginRight + 4 * boxPadding + Math.max.apply(null, textWidth);\r\n  var toolTipHeight = 2 * boxPadding + textList.length * lineHeight;\r\n  if (toolTipOption.showBox == false) {\r\n    return\r\n  }\r\n  // if beyond the right border\r\n  if (offset.x - Math.abs(opts._scrollDistance_ || 0) + arrowWidth + toolTipWidth > opts.width) {\r\n    isOverRightBorder = true;\r\n  }\r\n  if (toolTipHeight + offset.y > opts.height) {\r\n    offset.y = opts.height - toolTipHeight;\r\n  }\r\n  // draw background rect\r\n  context.beginPath();\r\n  context.setFillStyle(hexToRgb(toolTipOption.bgColor, toolTipOption.bgOpacity));\r\n  context.setLineWidth(toolTipOption.borderWidth * opts.pix);\r\n  context.setStrokeStyle(hexToRgb(toolTipOption.borderColor, toolTipOption.borderOpacity));\r\n  var radius = toolTipOption.borderRadius;\r\n  if (isOverRightBorder) {\r\n    // 增加左侧仍然超出的判断\r\n    if(toolTipWidth + arrowWidth > opts.width){\r\n      offset.x = opts.width + Math.abs(opts._scrollDistance_ || 0) + arrowWidth + (toolTipWidth - opts.width)\r\n    }\r\n    if(toolTipWidth > offset.x){\r\n      offset.x = opts.width + Math.abs(opts._scrollDistance_ || 0) + arrowWidth + (toolTipWidth - opts.width)\r\n    }\r\n    if (toolTipOption.showArrow) {\r\n      context.moveTo(offset.x, offset.y + 10 * opts.pix);\r\n      context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pix + 5 * opts.pix);\r\n    }\r\n    context.arc(offset.x - arrowWidth - radius, offset.y + toolTipHeight - radius, radius, 0, Math.PI / 2, false);\r\n    context.arc(offset.x - arrowWidth - Math.round(toolTipWidth) + radius, offset.y + toolTipHeight - radius, radius,\r\n      Math.PI / 2, Math.PI, false);\r\n    context.arc(offset.x - arrowWidth - Math.round(toolTipWidth) + radius, offset.y + radius, radius, -Math.PI, -Math.PI / 2, false);\r\n    context.arc(offset.x - arrowWidth - radius, offset.y + radius, radius, -Math.PI / 2, 0, false);\r\n    if (toolTipOption.showArrow) {\r\n      context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pix - 5 * opts.pix);\r\n      context.lineTo(offset.x, offset.y + 10 * opts.pix);\r\n    }\r\n  } else {\r\n    if (toolTipOption.showArrow) {\r\n      context.moveTo(offset.x, offset.y + 10 * opts.pix);\r\n      context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pix - 5 * opts.pix);\r\n    }\r\n    context.arc(offset.x + arrowWidth + radius, offset.y + radius, radius, -Math.PI, -Math.PI / 2, false);\r\n    context.arc(offset.x + arrowWidth + Math.round(toolTipWidth) - radius, offset.y + radius, radius, -Math.PI / 2, 0,\r\n      false);\r\n    context.arc(offset.x + arrowWidth + Math.round(toolTipWidth) - radius, offset.y + toolTipHeight - radius, radius, 0,\r\n      Math.PI / 2, false);\r\n    context.arc(offset.x + arrowWidth + radius, offset.y + toolTipHeight - radius, radius, Math.PI / 2, Math.PI, false);\r\n    if (toolTipOption.showArrow) {\r\n      context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pix + 5 * opts.pix);\r\n      context.lineTo(offset.x, offset.y + 10 * opts.pix);\r\n    }\r\n  }\r\n  context.closePath();\r\n  context.fill();\r\n  if (toolTipOption.borderWidth > 0) {\r\n    context.stroke();\r\n  }\r\n  // draw legend\r\n  if(toolTipOption.legendShow){\r\n    textList.forEach(function(item, index) {\r\n      if (item.color !== null) {\r\n        context.beginPath();\r\n        context.setFillStyle(item.color);\r\n        var startX = offset.x + arrowWidth + 2 * boxPadding;\r\n        var startY = offset.y + (lineHeight - fontSize) / 2 + lineHeight * index + boxPadding + 1;\r\n        if (isOverRightBorder) {\r\n          startX = offset.x - toolTipWidth - arrowWidth + 2 * boxPadding;\r\n        }\r\n        switch (item.legendShape) {\r\n          case 'line':\r\n            context.moveTo(startX, startY + 0.5 * legendWidth - 2 * opts.pix);\r\n            context.fillRect(startX, startY + 0.5 * legendWidth - 2 * opts.pix, legendWidth, 4 * opts.pix);\r\n            break;\r\n          case 'triangle':\r\n            context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * legendWidth + 5 * opts.pix);\r\n            context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * legendWidth + 5 * opts.pix);\r\n            context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            break;\r\n          case 'diamond':\r\n            context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * legendWidth);\r\n            context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth + 5 * opts.pix);\r\n            context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * legendWidth);\r\n            context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            break;\r\n          case 'circle':\r\n            context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth);\r\n            context.arc(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth, 5 * opts.pix, 0, 2 * Math.PI);\r\n            break;\r\n          case 'rect':\r\n            context.moveTo(startX, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.fillRect(startX, startY + 0.5 * legendWidth - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n            break;\r\n          case 'square':\r\n            context.moveTo(startX + 2 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.fillRect(startX + 2 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix, 10 * opts.pix, 10 * opts.pix);\r\n            break;\r\n          default:\r\n            context.moveTo(startX, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.fillRect(startX, startY + 0.5 * legendWidth - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n        }\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // draw text list\r\n  textList.forEach(function(item, index) {\r\n    var startX = offset.x + arrowWidth + 2 * boxPadding + legendWidth + legendMarginRight;\r\n    if (isOverRightBorder) {\r\n      startX = offset.x - toolTipWidth - arrowWidth + 2 * boxPadding + legendWidth + legendMarginRight;\r\n    }\r\n    var startY = offset.y + lineHeight * index + (lineHeight - fontSize)/2 - 1 + boxPadding + fontSize;\r\n    context.beginPath();\r\n    context.setFontSize(fontSize);\r\n    context.setTextBaseline('normal');\r\n    context.setFillStyle(toolTipOption.fontColor);\r\n    context.fillText(item.text, startX, startY);\r\n    context.closePath();\r\n    context.stroke();\r\n  });\r\n}\r\n\r\nfunction drawColumnDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let columnOption = assign({}, {\r\n    type: 'group',\r\n    width: eachSpacing / 2,\r\n    meterBorder: 4,\r\n    meterFillColor: '#FFFFFF',\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    seriesGap: 2,\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n    labelPosition: 'outside'\r\n  }, opts.extra.column);\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n  }\r\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\r\n    drawToolTipSplitArea(opts.tooltip.offset.x, opts, config, context, eachSpacing);\r\n  }\r\n  columnOption.customColor = fillCustomColor(columnOption.linearType, columnOption.customColor, series, config);\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    \r\n    // 计算0轴坐标\r\n    let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n    let zeroHeight = spacingValid * (0 - minRange) / (maxRange - minRange);\r\n    let zeroPoints = opts.height - Math.round(zeroHeight) - opts.area[2];\r\n    eachSeries.zeroPoints = zeroPoints;\r\n    var data = eachSeries.data;\r\n    switch (columnOption.type) {\r\n      case 'group':\r\n        var points = getColumnDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, zeroPoints, process);\r\n        var tooltipPoints = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(tooltipPoints);\r\n        points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          //fix issues/I27B1N yyoinge & Joeshu\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - item.width / 2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color\r\n            var strokeColor = item.color || eachSeries.color\r\n            if (columnOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (columnOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n                grd.addColorStop(columnOption.colorStop, hexToRgb(columnOption.customColor[eachSeries.linearIndex],columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            // 圆角边框\r\n            if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle === true) {\r\n              const left = startX;\r\n              const top = item.y > zeroPoints ? zeroPoints : item.y;\r\n              const width = item.width;\r\n              const height = Math.abs(zeroPoints - item.y);\r\n              if (columnOption.barBorderCircle) {\r\n                columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n              }\r\n              if(item.y > zeroPoints){\r\n                columnOption.barBorderRadius = [0, 0,width / 2, width / 2];\r\n              }\r\n              let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n              let minRadius = Math.min(width/2,height/2);\r\n              r0 = r0 > minRadius ? minRadius : r0;\r\n              r1 = r1 > minRadius ? minRadius : r1;\r\n              r2 = r2 > minRadius ? minRadius : r2;\r\n              r3 = r3 > minRadius ? minRadius : r3;\r\n              r0 = r0 < 0 ? 0 : r0;\r\n              r1 = r1 < 0 ? 0 : r1;\r\n              r2 = r2 < 0 ? 0 : r2;\r\n              r3 = r3 < 0 ? 0 : r3;\r\n              context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n              context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n              context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n              context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n            } else {\r\n              context.moveTo(startX, item.y);\r\n              context.lineTo(startX + item.width, item.y);\r\n              context.lineTo(startX + item.width, zeroPoints);\r\n              context.lineTo(startX, zeroPoints);\r\n              context.lineTo(startX, item.y);\r\n              context.setLineWidth(1)\r\n              context.setStrokeStyle(strokeColor);\r\n            }\r\n            context.setFillStyle(fillColor);\r\n            context.closePath();\r\n            //context.stroke();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'stack':\r\n        // 绘制堆叠数据图\r\n        var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(points);\r\n        points = fixColumeStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color;\r\n            var startX = item.x - item.width / 2 + 1;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            var height0 = opts.height - item.y0 - opts.area[2];\r\n            if (seriesIndex > 0) {\r\n              height -= height0;\r\n            }\r\n            context.setFillStyle(fillColor);\r\n            context.moveTo(startX, item.y);\r\n            context.fillRect(startX, item.y, item.width, height);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'meter':\r\n        // 绘制温度计数据图\r\n        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n        calPoints.push(points);\r\n        points = fixColumeMeterData(points, eachSpacing, series.length, seriesIndex, config, opts, columnOption.meterBorder);\r\n          for (let i = 0; i < points.length; i++) {\r\n            let item = points[i];\r\n            if (item !== null && i > leftNum && i < rightNum) {\r\n              //画背景颜色\r\n              context.beginPath();\r\n              if (seriesIndex == 0 && columnOption.meterBorder > 0) {\r\n                context.setStrokeStyle(eachSeries.color);\r\n                context.setLineWidth(columnOption.meterBorder * opts.pix);\r\n              }\r\n              if(seriesIndex == 0){\r\n                context.setFillStyle(columnOption.meterFillColor);\r\n              }else{\r\n                context.setFillStyle(item.color || eachSeries.color);\r\n              }\r\n              var startX = item.x - item.width / 2;\r\n              var height = opts.height - item.y - opts.area[2];\r\n              if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle === true) {\r\n                const left = startX;\r\n                const top = item.y;\r\n                const width = item.width;\r\n                const height = zeroPoints - item.y;\r\n                if (columnOption.barBorderCircle) {\r\n                  columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n                }\r\n                let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n                let minRadius = Math.min(width/2,height/2);\r\n                r0 = r0 > minRadius ? minRadius : r0;\r\n                r1 = r1 > minRadius ? minRadius : r1;\r\n                r2 = r2 > minRadius ? minRadius : r2;\r\n                r3 = r3 > minRadius ? minRadius : r3;\r\n                r0 = r0 < 0 ? 0 : r0;\r\n                r1 = r1 < 0 ? 0 : r1;\r\n                r2 = r2 < 0 ? 0 : r2;\r\n                r3 = r3 < 0 ? 0 : r3;\r\n                context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n                context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n                context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n                context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n                context.fill();\r\n              }else{\r\n                context.moveTo(startX, item.y);\r\n                context.lineTo(startX + item.width, item.y);\r\n                context.lineTo(startX + item.width, zeroPoints);\r\n                context.lineTo(startX, zeroPoints);\r\n                context.lineTo(startX, item.y);\r\n                context.fill();\r\n              }\r\n              if (seriesIndex == 0 && columnOption.meterBorder > 0) {\r\n                context.closePath();\r\n                context.stroke();\r\n              }\r\n            }\r\n          }\r\n        break;\r\n    }\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      switch (columnOption.type) {\r\n        case 'group':\r\n          var points = getColumnDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n          points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n          drawColumePointText(points, eachSeries, config, context, opts);\r\n          break;\r\n        case 'stack':\r\n          var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n          drawColumePointText(points, eachSeries, config, context, opts);\r\n          break;\r\n        case 'meter':\r\n          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n          drawColumePointText(points, eachSeries, config, context, opts);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawMountDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let mountOption = assign({}, {\r\n    type: 'mount',\r\n    widthRatio: 1,\r\n    borderWidth: 1,\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n  }, opts.extra.mount);\r\n  mountOption.widthRatio = mountOption.widthRatio <= 0 ? 0 : mountOption.widthRatio;\r\n  mountOption.widthRatio = mountOption.widthRatio >= 2 ? 2 : mountOption.widthRatio;\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n  }\r\n  mountOption.customColor = fillCustomColor(mountOption.linearType, mountOption.customColor, series, config);\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[0]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    \r\n    // 计算0轴坐标\r\n    let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n    let zeroHeight = spacingValid * (0 - minRange) / (maxRange - minRange);\r\n    let zeroPoints = opts.height - Math.round(zeroHeight) - opts.area[2];\r\n    \r\n    var points = getMountDataPoints(series, minRange, maxRange, xAxisPoints, eachSpacing, opts, mountOption, zeroPoints, process);\r\n    switch (mountOption.type) {\r\n      case 'bar':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            // 圆角边框\r\n            if ((mountOption.barBorderRadius && mountOption.barBorderRadius.length === 4) || mountOption.barBorderCircle === true) {\r\n              const left = startX;\r\n              const top = item.y > zeroPoints ? zeroPoints : item.y;\r\n              const width = item.width;\r\n              const height = Math.abs(zeroPoints - item.y);\r\n              if (mountOption.barBorderCircle) {\r\n                mountOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n              }\r\n              if(item.y > zeroPoints){\r\n                mountOption.barBorderRadius = [0, 0,width / 2, width / 2];\r\n              }\r\n              let [r0, r1, r2, r3] = mountOption.barBorderRadius;\r\n              let minRadius = Math.min(width/2,height/2);\r\n              r0 = r0 > minRadius ? minRadius : r0;\r\n              r1 = r1 > minRadius ? minRadius : r1;\r\n              r2 = r2 > minRadius ? minRadius : r2;\r\n              r3 = r3 > minRadius ? minRadius : r3;\r\n              r0 = r0 < 0 ? 0 : r0;\r\n              r1 = r1 < 0 ? 0 : r1;\r\n              r2 = r2 < 0 ? 0 : r2;\r\n              r3 = r3 < 0 ? 0 : r3;\r\n              context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n              context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n              context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n              context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n            } else {\r\n              context.moveTo(startX, item.y);\r\n              context.lineTo(startX + item.width, item.y);\r\n              context.lineTo(startX + item.width, zeroPoints);\r\n              context.lineTo(startX, zeroPoints);\r\n              context.lineTo(startX, item.y);\r\n            }\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.closePath();\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'triangle':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            context.moveTo(startX, zeroPoints);\r\n            context.lineTo(item.x, item.y);\r\n            context.lineTo(startX + item.width, zeroPoints);\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'mount':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            context.moveTo(startX, zeroPoints);\r\n            context.bezierCurveTo(item.x - item.width/4, zeroPoints, item.x - item.width/4, item.y, item.x, item.y);\r\n            context.bezierCurveTo(item.x + item.width/4, item.y, item.x + item.width/4, zeroPoints, startX + item.width, zeroPoints);\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'sharp':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            context.moveTo(startX, zeroPoints);\r\n            context.quadraticCurveTo(item.x - 0, zeroPoints - height/4, item.x, item.y);\r\n            context.quadraticCurveTo(item.x + 0, zeroPoints - height/4, startX + item.width, zeroPoints)\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n    }\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[0]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var points = getMountDataPoints(series, minRange, maxRange, xAxisPoints, eachSpacing, opts, mountOption, zeroPoints, process);\r\n    drawMountPointText(points, series, config, context, opts, zeroPoints);\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: points,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawBarDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let yAxisPoints = [];\r\n  let eachSpacing = (opts.height - opts.area[0] - opts.area[2])/opts.categories.length;\r\n  for (let i = 0; i < opts.categories.length; i++) {\r\n    yAxisPoints.push(opts.area[0] + eachSpacing / 2 + eachSpacing * i);\r\n  }\r\n  let columnOption = assign({}, {\r\n    type: 'group',\r\n    width: eachSpacing / 2,\r\n    meterBorder: 4,\r\n    meterFillColor: '#FFFFFF',\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    seriesGap: 2,\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n  }, opts.extra.bar);\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = yAxisPoints.length + 2;\r\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\r\n    drawBarToolTipSplitArea(opts.tooltip.offset.y, opts, config, context, eachSpacing);\r\n  }\r\n  columnOption.customColor = fillCustomColor(columnOption.linearType, columnOption.customColor, series, config);\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.xAxisData.ranges);\r\n    maxRange = ranges.pop();\r\n    minRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    switch (columnOption.type) {\r\n      case 'group':\r\n        var points = getBarDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, process);\r\n        var tooltipPoints = getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(tooltipPoints);\r\n        points = fixBarData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          //fix issues/I27B1N yyoinge & Joeshu\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            //var startX = item.x - item.width / 2;\r\n            var startX = opts.area[3];\r\n            var startY = item.y - item.width / 2;\r\n            var height = item.height;\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color\r\n            var strokeColor = item.color || eachSeries.color\r\n            if (columnOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, item.x, item.y);\r\n              //透明渐变\r\n              if (columnOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n                grd.addColorStop(columnOption.colorStop, hexToRgb(columnOption.customColor[eachSeries.linearIndex],columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            // 圆角边框\r\n            if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle === true) {\r\n              const left = startX;\r\n              const width = item.width;\r\n              const top = item.y - item.width / 2;\r\n              const height = item.height;\r\n              if (columnOption.barBorderCircle) {\r\n                columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n              }\r\n              let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n              let minRadius = Math.min(width/2,height/2);\r\n              r0 = r0 > minRadius ? minRadius : r0;\r\n              r1 = r1 > minRadius ? minRadius : r1;\r\n              r2 = r2 > minRadius ? minRadius : r2;\r\n              r3 = r3 > minRadius ? minRadius : r3;\r\n              r0 = r0 < 0 ? 0 : r0;\r\n              r1 = r1 < 0 ? 0 : r1;\r\n              r2 = r2 < 0 ? 0 : r2;\r\n              r3 = r3 < 0 ? 0 : r3;\r\n              \r\n              context.arc(left + r3, top + r3, r3, -Math.PI, -Math.PI / 2);\r\n              context.arc(item.x - r0, top + r0, r0, -Math.PI / 2, 0);\r\n              context.arc(item.x - r1, top + width - r1, r1, 0, Math.PI / 2);\r\n              context.arc(left + r2, top + width - r2, r2, Math.PI / 2, Math.PI);\r\n            } else {\r\n              context.moveTo(startX, startY);\r\n              context.lineTo(item.x, startY);\r\n              context.lineTo(item.x, startY + item.width);\r\n              context.lineTo(startX, startY + item.width);\r\n              context.lineTo(startX, startY);\r\n              context.setLineWidth(1)\r\n              context.setStrokeStyle(strokeColor);\r\n            }\r\n            context.setFillStyle(fillColor);\r\n            context.closePath();\r\n            //context.stroke();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'stack':\r\n        // 绘制堆叠数据图\r\n        var points = getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(points);\r\n        points = fixBarStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color;\r\n            var startX = item.x0;\r\n            context.setFillStyle(fillColor);\r\n            context.moveTo(startX, item.y - item.width/2);\r\n            context.fillRect(startX, item.y - item.width/2, item.height , item.width);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n    }\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.xAxisData.ranges);\r\n      maxRange = ranges.pop();\r\n      minRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      switch (columnOption.type) {\r\n        case 'group':\r\n          var points = getBarDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, process);\r\n          points = fixBarData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n          drawBarPointText(points, eachSeries, config, context, opts);\r\n          break;\r\n        case 'stack':\r\n          var points = getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n          drawBarPointText(points, eachSeries, config, context, opts);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  return {\r\n    yAxisPoints: yAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawCandleDataPoints(series, seriesMA, opts, config, context) {\r\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\r\n  var candleOption = assign({}, {\r\n    color: {},\r\n    average: {}\r\n  }, opts.extra.candle);\r\n  candleOption.color = assign({}, {\r\n    upLine: '#f04864',\r\n    upFill: '#f04864',\r\n    downLine: '#2fc25b',\r\n    downFill: '#2fc25b'\r\n  }, candleOption.color);\r\n  candleOption.average = assign({}, {\r\n    show: false,\r\n    name: [],\r\n    day: [],\r\n    color: config.color\r\n  }, candleOption.average);\r\n  opts.extra.candle = candleOption;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  //画均线\r\n  if (candleOption.average.show || seriesMA) { //Merge pull request !12 from 邱贵翔\r\n    seriesMA.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      var splitPointList = splitPoints(points,eachSeries);\r\n      for (let i = 0; i < splitPointList.length; i++) {\r\n        let points = splitPointList[i];\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setLineWidth(1);\r\n        if (points.length === 1) {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n        } else {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          let startPoint = 0;\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x,\r\n                item.y);\r\n            }\r\n          }\r\n          context.moveTo(points[0].x, points[0].y);\r\n        }\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    });\r\n  }\r\n  //画K线\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    calPoints.push(points);\r\n    var splitPointList = splitPoints(points,eachSeries);\r\n    for (let i = 0; i < splitPointList[0].length; i++) {\r\n      if (i > leftNum && i < rightNum) {\r\n        let item = splitPointList[0][i];\r\n        context.beginPath();\r\n        //如果上涨\r\n        if (data[i][1] - data[i][0] > 0) {\r\n          context.setStrokeStyle(candleOption.color.upLine);\r\n          context.setFillStyle(candleOption.color.upFill);\r\n          context.setLineWidth(1 * opts.pix);\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\r\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.lineTo(item[2].x, item[2].y); //底点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\r\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n        } else {\r\n          context.setStrokeStyle(candleOption.color.downLine);\r\n          context.setFillStyle(candleOption.color.downFill);\r\n          context.setLineWidth(1 * opts.pix);\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\r\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.lineTo(item[2].x, item[2].y); //底点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\r\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n        }\r\n        context.closePath();\r\n        context.fill();\r\n        context.stroke();\r\n      }\r\n    }\r\n  });\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawAreaDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var areaOption = assign({}, {\r\n    type: 'straight',\r\n    opacity: 0.2,\r\n    addLine: false,\r\n    width: 2,\r\n    gradient: false,\r\n    activeType: 'none'\r\n  }, opts.extra.area);\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let endY = opts.height - opts.area[2];\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    let data = eachSeries.data;\r\n    let points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    calPoints.push(points);\r\n    let splitPointList = splitPoints(points,eachSeries);\r\n    for (let i = 0; i < splitPointList.length; i++) {\r\n      let points = splitPointList[i];\r\n      // 绘制区域数\r\n      context.beginPath();\r\n      context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n      if (areaOption.gradient) {\r\n        let gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);\r\n        gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));\r\n        gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\r\n        context.setFillStyle(gradient);\r\n      } else {\r\n        context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n      }\r\n      context.setLineWidth(areaOption.width * opts.pix);\r\n      if (points.length > 1) {\r\n        let firstPoint = points[0];\r\n        let lastPoint = points[points.length - 1];\r\n        context.moveTo(firstPoint.x, firstPoint.y);\r\n        let startPoint = 0;\r\n        if (areaOption.type === 'curve') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              let ctrlPoint = createCurveControlPoints(points, j - 1);\r\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n            }\r\n          };\r\n        } \r\n        if (areaOption.type === 'straight') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        if (areaOption.type === 'step') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, points[j - 1].y);\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        context.lineTo(lastPoint.x, endY);\r\n        context.lineTo(firstPoint.x, endY);\r\n        context.lineTo(firstPoint.x, firstPoint.y);\r\n      } else {\r\n        let item = points[0];\r\n        context.moveTo(item.x - eachSpacing / 2, item.y);\r\n        // context.lineTo(item.x + eachSpacing / 2, item.y);\r\n        // context.lineTo(item.x + eachSpacing / 2, endY);\r\n        // context.lineTo(item.x - eachSpacing / 2, endY);\r\n        // context.moveTo(item.x - eachSpacing / 2, item.y);\r\n      }\r\n      context.closePath();\r\n      context.fill();\r\n      //画连线\r\n      if (areaOption.addLine) {\r\n        if (eachSeries.lineType == 'dash') {\r\n          let dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\r\n          dashLength *= opts.pix;\r\n          context.setLineDash([dashLength, dashLength]);\r\n        }\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setLineWidth(areaOption.width * opts.pix);\r\n        if (points.length === 1) {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          // context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n        } else {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          let startPoint = 0;\r\n          if (areaOption.type === 'curve') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                let ctrlPoint = createCurveControlPoints(points, j - 1);\r\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          if (areaOption.type === 'straight') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          if (areaOption.type === 'step') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, points[j - 1].y);\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          context.moveTo(points[0].x, points[0].y);\r\n        }\r\n        context.stroke();\r\n        context.setLineDash([]);\r\n      }\r\n    }\r\n    //画点\r\n    if (opts.dataPointShape !== false) {\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n    drawActivePoint(points, eachSeries.color, eachSeries.pointShape, context, opts, areaOption,seriesIndex);\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      drawPointText(points, eachSeries, config, context, opts);\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawScatterDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var scatterOption = assign({}, {\r\n    type: 'circle'\r\n  }, opts.extra.scatter);\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    context.beginPath();\r\n    context.setStrokeStyle(eachSeries.color);\r\n    context.setFillStyle(eachSeries.color);\r\n    context.setLineWidth(1 * opts.pix);\r\n    var shape = eachSeries.pointShape;\r\n    if (shape === 'diamond') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x, item.y - 4.5);\r\n          context.lineTo(item.x - 4.5, item.y);\r\n          context.lineTo(item.x, item.y + 4.5);\r\n          context.lineTo(item.x + 4.5, item.y);\r\n          context.lineTo(item.x, item.y - 4.5);\r\n        }\r\n      });\r\n    } else if (shape === 'circle') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x + 2.5 * opts.pix, item.y);\r\n          context.arc(item.x, item.y, 3 * opts.pix, 0, 2 * Math.PI, false);\r\n        }\r\n      });\r\n    } else if (shape === 'square') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x - 3.5, item.y - 3.5);\r\n          context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\r\n        }\r\n      });\r\n    } else if (shape === 'triangle') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x, item.y - 4.5);\r\n          context.lineTo(item.x - 4.5, item.y + 4.5);\r\n          context.lineTo(item.x + 4.5, item.y + 4.5);\r\n          context.lineTo(item.x, item.y - 4.5);\r\n        }\r\n      });\r\n    } else if (shape === 'triangle') {\r\n      return;\r\n    }\r\n    context.closePath();\r\n    context.fill();\r\n    context.stroke();\r\n  });\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      drawPointText(points, eachSeries, config, context, opts);\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawBubbleDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var bubbleOption = assign({}, {\r\n    opacity: 1,\r\n    border:2\r\n  }, opts.extra.bubble);\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    context.beginPath();\r\n    context.setStrokeStyle(eachSeries.color);\r\n    context.setLineWidth(bubbleOption.border * opts.pix);\r\n    context.setFillStyle(hexToRgb(eachSeries.color, bubbleOption.opacity));\r\n    points.forEach(function(item, index) {\r\n      context.moveTo(item.x + item.r, item.y);\r\n      context.arc(item.x, item.y, item.r * opts.pix, 0, 2 * Math.PI, false);\r\n    });\r\n    context.closePath();\r\n    context.fill();\r\n    context.stroke();\r\n    \r\n    if (opts.dataLabel !== false && process === 1) {\r\n      points.forEach(function(item, index) {\r\n        context.beginPath();\r\n        var fontSize = eachSeries.textSize * opts.pix || config.fontSize;\r\n        context.setFontSize(fontSize);\r\n        context.setFillStyle(eachSeries.textColor || \"#FFFFFF\");\r\n        context.setTextAlign('center');\r\n        context.fillText(String(item.t), item.x, item.y + fontSize/2);\r\n        context.closePath();\r\n        context.stroke();\r\n        context.setTextAlign('left');\r\n      });\r\n    }\r\n  });\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawLineDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var lineOption = assign({}, {\r\n    type: 'straight',\r\n    width: 2,\r\n    activeType: 'none',\r\n    linearType: 'none',\r\n    onShadow: false,\r\n    animation: 'vertical',\r\n  }, opts.extra.line);\r\n  lineOption.width *= opts.pix;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    // 这段很神奇的代码用于解决ios16的setStrokeStyle失效的bug\r\n    context.beginPath();\r\n    context.setStrokeStyle(eachSeries.color);\r\n    context.moveTo(-10000, -10000);\r\n    context.lineTo(-10001, -10001);\r\n    context.stroke();\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getLineDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, lineOption, process);\r\n    calPoints.push(points);\r\n    var splitPointList = splitPoints(points,eachSeries);\r\n    if (eachSeries.lineType == 'dash') {\r\n      let dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\r\n      dashLength *= opts.pix;\r\n      context.setLineDash([dashLength, dashLength]);\r\n    }\r\n    context.beginPath();\r\n    var strokeColor = eachSeries.color;\r\n    if (lineOption.linearType !== 'none' && eachSeries.linearColor && eachSeries.linearColor.length > 0) {\r\n      var grd = context.createLinearGradient(opts.chartData.xAxisData.startX, opts.height/2, opts.chartData.xAxisData.endX, opts.height/2);\r\n      for (var i = 0; i < eachSeries.linearColor.length; i++) {\r\n        grd.addColorStop(eachSeries.linearColor[i][0], hexToRgb(eachSeries.linearColor[i][1], 1));\r\n      }\r\n      strokeColor = grd\r\n    }\r\n    context.setStrokeStyle(strokeColor);\r\n    if (lineOption.onShadow == true && eachSeries.setShadow && eachSeries.setShadow.length > 0) {\r\n      context.setShadow(eachSeries.setShadow[0], eachSeries.setShadow[1], eachSeries.setShadow[2], eachSeries.setShadow[3]);\r\n    }else{\r\n      context.setShadow(0, 0, 0, 'rgba(0,0,0,0)');\r\n    }\r\n    context.setLineWidth(lineOption.width);\r\n    splitPointList.forEach(function(points, index) {\r\n      if (points.length === 1) {\r\n        context.moveTo(points[0].x, points[0].y);\r\n        // context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n      } else {\r\n        context.moveTo(points[0].x, points[0].y);\r\n        let startPoint = 0;\r\n        if (lineOption.type === 'curve') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        if (lineOption.type === 'straight') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        if (lineOption.type === 'step') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, points[j - 1].y);\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        context.moveTo(points[0].x, points[0].y);\r\n      }\r\n    });\r\n    context.stroke();\r\n    context.setLineDash([]);\r\n    if (opts.dataPointShape !== false) {\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n    drawActivePoint(points, eachSeries.color, eachSeries.pointShape, context, opts, lineOption);\r\n  });\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      drawPointText(points, eachSeries, config, context, opts);\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawMixDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let columnOption = assign({}, {\r\n    width: eachSpacing / 2,\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    seriesGap: 2,\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n  }, opts.extra.mix.column);\r\n  let areaOption = assign({}, {\r\n    opacity: 0.2,\r\n    gradient: false\r\n  }, opts.extra.mix.area);\r\n  let lineOption = assign({}, {\r\n    width: 2\r\n  }, opts.extra.mix.line);\r\n  let endY = opts.height - opts.area[2];\r\n  let calPoints = [];\r\n  var columnIndex = 0;\r\n  var columnLength = 0;\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    if (eachSeries.type == 'column') {\r\n      columnLength += 1;\r\n    }\r\n  });\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  columnOption.customColor = fillCustomColor(columnOption.linearType, columnOption.customColor, series, config);\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    calPoints.push(points);\r\n    // 绘制柱状数据图\r\n    if (eachSeries.type == 'column') {\r\n      points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\r\n      for (let i = 0; i < points.length; i++) {\r\n        let item = points[i];\r\n        if (item !== null && i > leftNum && i < rightNum) {\r\n          var startX = item.x - item.width / 2;\r\n          var height = opts.height - item.y - opts.area[2];\r\n          context.beginPath();\r\n          var fillColor = item.color || eachSeries.color\r\n          var strokeColor = item.color || eachSeries.color\r\n          if (columnOption.linearType !== 'none') {\r\n            var grd = context.createLinearGradient(startX, item.y, startX, opts.height - opts.area[2]);\r\n            //透明渐变\r\n            if (columnOption.linearType == 'opacity') {\r\n              grd.addColorStop(0, hexToRgb(fillColor, columnOption.linearOpacity));\r\n              grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n            } else {\r\n              grd.addColorStop(0, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n              grd.addColorStop(columnOption.colorStop, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n              grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n            }\r\n            fillColor = grd\r\n          }\r\n          // 圆角边框\r\n          if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle) {\r\n            const left = startX;\r\n            const top = item.y;\r\n            const width = item.width;\r\n            const height = opts.height - opts.area[2] - item.y;\r\n            if (columnOption.barBorderCircle) {\r\n              columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n            }\r\n            let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n            let minRadius = Math.min(width/2,height/2);\r\n            r0 = r0 > minRadius ? minRadius : r0;\r\n            r1 = r1 > minRadius ? minRadius : r1;\r\n            r2 = r2 > minRadius ? minRadius : r2;\r\n            r3 = r3 > minRadius ? minRadius : r3;\r\n            r0 = r0 < 0 ? 0 : r0;\r\n            r1 = r1 < 0 ? 0 : r1;\r\n            r2 = r2 < 0 ? 0 : r2;\r\n            r3 = r3 < 0 ? 0 : r3;\r\n            context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n            context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n            context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n            context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n          } else {\r\n            context.moveTo(startX, item.y);\r\n            context.lineTo(startX + item.width, item.y);\r\n            context.lineTo(startX + item.width, opts.height - opts.area[2]);\r\n            context.lineTo(startX, opts.height - opts.area[2]);\r\n            context.lineTo(startX, item.y);\r\n            context.setLineWidth(1)\r\n            context.setStrokeStyle(strokeColor);\r\n          }\r\n          context.setFillStyle(fillColor);\r\n          context.closePath();\r\n          context.fill();\r\n        }\r\n      }\r\n      columnIndex += 1;\r\n    }\r\n    //绘制区域图数据\r\n    if (eachSeries.type == 'area') {\r\n      let splitPointList = splitPoints(points,eachSeries);\r\n      for (let i = 0; i < splitPointList.length; i++) {\r\n        let points = splitPointList[i];\r\n        // 绘制区域数据\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n        if (areaOption.gradient) {\r\n          let gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);\r\n          gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));\r\n          gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\r\n          context.setFillStyle(gradient);\r\n        } else {\r\n          context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n        }\r\n        context.setLineWidth(2 * opts.pix);\r\n        if (points.length > 1) {\r\n          var firstPoint = points[0];\r\n          let lastPoint = points[points.length - 1];\r\n          context.moveTo(firstPoint.x, firstPoint.y);\r\n          let startPoint = 0;\r\n          if (eachSeries.style === 'curve') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n              }\r\n            };\r\n          } else {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          context.lineTo(lastPoint.x, endY);\r\n          context.lineTo(firstPoint.x, endY);\r\n          context.lineTo(firstPoint.x, firstPoint.y);\r\n        } else {\r\n          let item = points[0];\r\n          context.moveTo(item.x - eachSpacing / 2, item.y);\r\n          // context.lineTo(item.x + eachSpacing / 2, item.y);\r\n          // context.lineTo(item.x + eachSpacing / 2, endY);\r\n          // context.lineTo(item.x - eachSpacing / 2, endY);\r\n          // context.moveTo(item.x - eachSpacing / 2, item.y);\r\n        }\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    }\r\n    // 绘制折线数据图\r\n    if (eachSeries.type == 'line') {\r\n      var splitPointList = splitPoints(points,eachSeries);\r\n      splitPointList.forEach(function(points, index) {\r\n        if (eachSeries.lineType == 'dash') {\r\n          let dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\r\n          dashLength *= opts.pix;\r\n          context.setLineDash([dashLength, dashLength]);\r\n        }\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setLineWidth(lineOption.width * opts.pix);\r\n        if (points.length === 1) {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          // context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n        } else {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          let startPoint = 0;\r\n          if (eachSeries.style == 'curve') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y,\r\n                  item.x, item.y);\r\n              }\r\n            }\r\n          } else {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            }\r\n          }\r\n          context.moveTo(points[0].x, points[0].y);\r\n        }\r\n        context.stroke();\r\n        context.setLineDash([]);\r\n      });\r\n    }\r\n    // 绘制点数据图\r\n    if (eachSeries.type == 'point') {\r\n      eachSeries.addPoint = true;\r\n    }\r\n    if (eachSeries.addPoint == true && eachSeries.type !== 'column') {\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n  });\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    var columnIndex = 0;\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      if (eachSeries.type !== 'column') {\r\n        drawPointText(points, eachSeries, config, context, opts);\r\n      } else {\r\n        points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\r\n        drawPointText(points, eachSeries, config, context, opts);\r\n        columnIndex += 1;\r\n      }\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing,\r\n  }\r\n}\r\n\r\n\r\nfunction drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints) {\r\n  var toolTipOption = opts.extra.tooltip || {};\r\n  if (toolTipOption.horizentalLine && opts.tooltip && process === 1 && (opts.type == 'line' || opts.type == 'area' || opts.type == 'column' || opts.type == 'mount' || opts.type == 'candle' || opts.type == 'mix')) {\r\n    drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints)\r\n  }\r\n  context.save();\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n  }\r\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\r\n    drawToolTip(opts.tooltip.textList, opts.tooltip.offset, opts, config, context, eachSpacing, xAxisPoints);\r\n  }\r\n  context.restore();\r\n\r\n}\r\n\r\nfunction drawXAxis(categories, opts, config, context) {\r\n\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    startX = xAxisData.startX,\r\n    endX = xAxisData.endX,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var boundaryGap = 'center';\r\n  if (opts.type == 'bar' || opts.type == 'line' || opts.type == 'area'|| opts.type == 'scatter' || opts.type == 'bubble') {\r\n    boundaryGap = opts.xAxis.boundaryGap;\r\n  }\r\n  var startY = opts.height - opts.area[2];\r\n  var endY = opts.area[0];\r\n\r\n  //绘制滚动条\r\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\r\n    var scrollY = opts.height - opts.area[2] + config.xAxisHeight;\r\n    var scrollScreenWidth = endX - startX;\r\n    var scrollTotalWidth = eachSpacing * (xAxisPoints.length - 1);\r\n    if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1){\r\n      if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n      scrollTotalWidth += (opts.extra.mount.widthRatio - 1)*eachSpacing;\r\n    }\r\n    var scrollWidth = scrollScreenWidth * scrollScreenWidth / scrollTotalWidth;\r\n    var scrollLeft = 0;\r\n    if (opts._scrollDistance_) {\r\n      scrollLeft = -opts._scrollDistance_ * (scrollScreenWidth) / scrollTotalWidth;\r\n    }\r\n    context.beginPath();\r\n    context.setLineCap('round');\r\n    context.setLineWidth(6 * opts.pix);\r\n    context.setStrokeStyle(opts.xAxis.scrollBackgroundColor || \"#EFEBEF\");\r\n    context.moveTo(startX, scrollY);\r\n    context.lineTo(endX, scrollY);\r\n    context.stroke();\r\n    context.closePath();\r\n    context.beginPath();\r\n    context.setLineCap('round');\r\n    context.setLineWidth(6 * opts.pix);\r\n    context.setStrokeStyle(opts.xAxis.scrollColor || \"#A6A6A6\");\r\n    context.moveTo(startX + scrollLeft, scrollY);\r\n    context.lineTo(startX + scrollLeft + scrollWidth, scrollY);\r\n    context.stroke();\r\n    context.closePath();\r\n    context.setLineCap('butt');\r\n  }\r\n  context.save();\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n  }\r\n  //绘制X轴刻度线\r\n  if (opts.xAxis.calibration === true) {\r\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\r\n    context.setLineCap('butt');\r\n    context.setLineWidth(1 * opts.pix);\r\n    xAxisPoints.forEach(function(item, index) {\r\n      if (index > 0) {\r\n        context.beginPath();\r\n        context.moveTo(item - eachSpacing / 2, startY);\r\n        context.lineTo(item - eachSpacing / 2, startY + 3 * opts.pix);\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    });\r\n  }\r\n  //绘制X轴网格\r\n  if (opts.xAxis.disableGrid !== true) {\r\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\r\n    context.setLineCap('butt');\r\n    context.setLineWidth(1 * opts.pix);\r\n    if (opts.xAxis.gridType == 'dash') {\r\n      context.setLineDash([opts.xAxis.dashLength * opts.pix, opts.xAxis.dashLength * opts.pix]);\r\n    }\r\n    opts.xAxis.gridEval = opts.xAxis.gridEval || 1;\r\n    xAxisPoints.forEach(function(item, index) {\r\n      if (index % opts.xAxis.gridEval == 0) {\r\n        context.beginPath();\r\n        context.moveTo(item, startY);\r\n        context.lineTo(item, endY);\r\n        context.stroke();\r\n      }\r\n    });\r\n    context.setLineDash([]);\r\n  }\r\n  //绘制X轴文案\r\n  if (opts.xAxis.disabled !== true) {\r\n    // 对X轴列表做抽稀处理\r\n    //默认全部显示X轴标签\r\n    let maxXAxisListLength = categories.length;\r\n    //如果设置了X轴单屏数量\r\n    if (opts.xAxis.labelCount) {\r\n      //如果设置X轴密度\r\n      if (opts.xAxis.itemCount) {\r\n        maxXAxisListLength = Math.ceil(categories.length / opts.xAxis.itemCount * opts.xAxis.labelCount);\r\n      } else {\r\n        maxXAxisListLength = opts.xAxis.labelCount;\r\n      }\r\n      maxXAxisListLength -= 1;\r\n    }\r\n\r\n    let ratio = Math.ceil(categories.length / maxXAxisListLength);\r\n\r\n    let newCategories = [];\r\n    let cgLength = categories.length;\r\n    for (let i = 0; i < cgLength; i++) {\r\n      if (i % ratio !== 0) {\r\n        newCategories.push(\"\");\r\n      } else {\r\n        newCategories.push(categories[i]);\r\n      }\r\n    }\r\n    newCategories[cgLength - 1] = categories[cgLength - 1];\r\n    var xAxisFontSize = opts.xAxis.fontSize * opts.pix || config.fontSize;\r\n    if (config._xAxisTextAngle_ === 0) {\r\n      newCategories.forEach(function(item, index) {\r\n        var xitem = opts.xAxis.formatter ? opts.xAxis.formatter(item,index,opts) : item;\r\n        var offset = -measureText(String(xitem), xAxisFontSize, context) / 2;\r\n        if (boundaryGap == 'center') {\r\n          offset += eachSpacing / 2;\r\n        }\r\n        var scrollHeight = 0;\r\n        if (opts.xAxis.scrollShow) {\r\n          scrollHeight = 6 * opts.pix;\r\n        }\r\n        // 如果在主视图区域内\r\n        var _scrollDistance_ = opts._scrollDistance_ || 0;\r\n        var truePoints = boundaryGap == 'center' ? xAxisPoints[index] + eachSpacing / 2 : xAxisPoints[index];\r\n        if((truePoints - Math.abs(_scrollDistance_)) >= (opts.area[3] - 1) && (truePoints - Math.abs(_scrollDistance_)) <= (opts.width - opts.area[1] + 1)){\r\n          context.beginPath();\r\n          context.setFontSize(xAxisFontSize);\r\n          context.setFillStyle(opts.xAxis.fontColor || opts.fontColor);\r\n          context.fillText(String(xitem), xAxisPoints[index] + offset, startY + opts.xAxis.marginTop * opts.pix + (opts.xAxis.lineHeight - opts.xAxis.fontSize) * opts.pix / 2 + opts.xAxis.fontSize * opts.pix);\r\n          context.closePath();\r\n          context.stroke();\r\n        }\r\n      });\r\n    } else {\r\n      newCategories.forEach(function(item, index) {\r\n        var xitem = opts.xAxis.formatter ? opts.xAxis.formatter(item) : item;\r\n        // 如果在主视图区域内\r\n        var _scrollDistance_ = opts._scrollDistance_ || 0;\r\n        var truePoints = boundaryGap == 'center' ? xAxisPoints[index] + eachSpacing / 2 : xAxisPoints[index];\r\n        if((truePoints - Math.abs(_scrollDistance_)) >= (opts.area[3] - 1) && (truePoints - Math.abs(_scrollDistance_)) <= (opts.width - opts.area[1] + 1)){\r\n          context.save();\r\n          context.beginPath();\r\n          context.setFontSize(xAxisFontSize);\r\n          context.setFillStyle(opts.xAxis.fontColor || opts.fontColor);\r\n          var textWidth = measureText(String(xitem), xAxisFontSize, context);\r\n          var offsetX = xAxisPoints[index];\r\n          if (boundaryGap == 'center') {\r\n            offsetX = xAxisPoints[index] + eachSpacing / 2;\r\n          }\r\n          var scrollHeight = 0;\r\n          if (opts.xAxis.scrollShow) {\r\n            scrollHeight = 6 * opts.pix;\r\n          }\r\n          var offsetY = startY + opts.xAxis.marginTop * opts.pix + xAxisFontSize - xAxisFontSize * Math.abs(Math.sin(config._xAxisTextAngle_));\r\n          if(opts.xAxis.rotateAngle < 0){\r\n            offsetX -= xAxisFontSize / 2;\r\n            textWidth = 0;\r\n          }else{\r\n            offsetX += xAxisFontSize / 2;\r\n            textWidth = -textWidth;\r\n          }\r\n          context.translate(offsetX, offsetY);\r\n          context.rotate(-1 * config._xAxisTextAngle_);\r\n          context.fillText(String(xitem), textWidth , 0 );\r\n          context.closePath();\r\n          context.stroke();\r\n          context.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  context.restore();\r\n  \r\n  //画X轴标题\r\n  if (opts.xAxis.title) {\r\n    context.beginPath();\r\n    context.setFontSize(opts.xAxis.titleFontSize * opts.pix);\r\n    context.setFillStyle(opts.xAxis.titleFontColor);\r\n    context.fillText(String(opts.xAxis.title), opts.width - opts.area[1] + opts.xAxis.titleOffsetX * opts.pix,opts.height - opts.area[2] + opts.xAxis.marginTop * opts.pix + (opts.xAxis.lineHeight - opts.xAxis.titleFontSize) * opts.pix / 2 + (opts.xAxis.titleFontSize + opts.xAxis.titleOffsetY) * opts.pix);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n  \r\n  //绘制X轴轴线\r\n  if (opts.xAxis.axisLine) {\r\n    context.beginPath();\r\n    context.setStrokeStyle(opts.xAxis.axisLineColor);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.moveTo(startX, opts.height - opts.area[2]);\r\n    context.lineTo(endX, opts.height - opts.area[2]);\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nfunction drawYAxisGrid(categories, opts, config, context) {\r\n  if (opts.yAxis.disableGrid === true) {\r\n    return;\r\n  }\r\n  let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  let eachSpacing = spacingValid / opts.yAxis.splitNumber;\r\n  let startX = opts.area[3];\r\n  let xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\r\n    xAxiseachSpacing = opts.chartData.xAxisData.eachSpacing;\r\n  let TotalWidth = xAxiseachSpacing * (xAxisPoints.length - 1);\r\n  if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1 ){\r\n    if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n    TotalWidth += (opts.extra.mount.widthRatio - 1) * xAxiseachSpacing;\r\n  }\r\n  let endX = startX + TotalWidth;\r\n  let points = [];\r\n  let startY = 1\r\n  if (opts.xAxis.axisLine === false) {\r\n    startY = 0\r\n  }\r\n  for (let i = startY; i < opts.yAxis.splitNumber + 1; i++) {\r\n    points.push(opts.height - opts.area[2] - eachSpacing * i);\r\n  }\r\n  context.save();\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n  }\r\n  if (opts.yAxis.gridType == 'dash') {\r\n    context.setLineDash([opts.yAxis.dashLength * opts.pix, opts.yAxis.dashLength * opts.pix]);\r\n  }\r\n  context.setStrokeStyle(opts.yAxis.gridColor);\r\n  context.setLineWidth(1 * opts.pix);\r\n  points.forEach(function(item, index) {\r\n    context.beginPath();\r\n    context.moveTo(startX, item);\r\n    context.lineTo(endX, item);\r\n    context.stroke();\r\n  });\r\n  context.setLineDash([]);\r\n  context.restore();\r\n}\r\n\r\nfunction drawYAxis(series, opts, config, context) {\r\n  if (opts.yAxis.disabled === true) {\r\n    return;\r\n  }\r\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  var eachSpacing = spacingValid / opts.yAxis.splitNumber;\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  var endY = opts.height - opts.area[2];\r\n  // set YAxis background\r\n  context.beginPath();\r\n  context.setFillStyle(opts.background);\r\n  if (opts.enableScroll == true && opts.xAxis.scrollPosition && opts.xAxis.scrollPosition !== 'left') {\r\n    context.fillRect(0, 0, startX, endY + 2 * opts.pix);\r\n  }\r\n  if (opts.enableScroll == true && opts.xAxis.scrollPosition && opts.xAxis.scrollPosition !== 'right') {\r\n    context.fillRect(endX, 0, opts.width, endY + 2 * opts.pix);\r\n  }\r\n  context.closePath();\r\n  context.stroke();\r\n  \r\n  let tStartLeft = opts.area[3];\r\n  let tStartRight = opts.width - opts.area[1];\r\n  let tStartCenter = opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2;\r\n  if (opts.yAxis.data) {\r\n    for (let i = 0; i < opts.yAxis.data.length; i++) {\r\n      let yData = opts.yAxis.data[i];\r\n      var points = [];\r\n      if(yData.type === 'categories'){\r\n        for (let i = 0; i <= yData.categories.length; i++) {\r\n          points.push(opts.area[0] + spacingValid / yData.categories.length / 2 + spacingValid / yData.categories.length * i);\r\n        }\r\n      }else{\r\n        for (let i = 0; i <= opts.yAxis.splitNumber; i++) {\r\n          points.push(opts.area[0] + eachSpacing * i);\r\n        }\r\n      }\r\n      if (yData.disabled !== true) {\r\n        let rangesFormat = opts.chartData.yAxisData.rangesFormat[i];\r\n        let yAxisFontSize = yData.fontSize ? yData.fontSize * opts.pix : config.fontSize;\r\n        let yAxisWidth = opts.chartData.yAxisData.yAxisWidth[i];\r\n        let textAlign = yData.textAlign || \"right\";\r\n        //画Y轴刻度及文案\r\n        rangesFormat.forEach(function(item, index) {\r\n          var pos = points[index];\r\n          context.beginPath();\r\n          context.setFontSize(yAxisFontSize);\r\n          context.setLineWidth(1 * opts.pix);\r\n          context.setStrokeStyle(yData.axisLineColor || '#cccccc');\r\n          context.setFillStyle(yData.fontColor || opts.fontColor);\r\n          let tmpstrat = 0;\r\n          let gapwidth = 4 * opts.pix;\r\n          if (yAxisWidth.position == 'left') {\r\n            //画刻度线\r\n            if (yData.calibration == true) {\r\n              context.moveTo(tStartLeft, pos);\r\n              context.lineTo(tStartLeft - 3 * opts.pix, pos);\r\n              gapwidth += 3 * opts.pix;\r\n            }\r\n            //画文字\r\n            switch (textAlign) {\r\n              case \"left\":\r\n                context.setTextAlign('left');\r\n                tmpstrat = tStartLeft - yAxisWidth.width\r\n                break;\r\n              case \"right\":\r\n                context.setTextAlign('right');\r\n                tmpstrat = tStartLeft - gapwidth\r\n                break;\r\n              default:\r\n                context.setTextAlign('center');\r\n                tmpstrat = tStartLeft - yAxisWidth.width / 2\r\n            }\r\n            context.fillText(String(item), tmpstrat, pos + yAxisFontSize / 2 - 3 * opts.pix);\r\n\r\n          } else if (yAxisWidth.position == 'right') {\r\n            //画刻度线\r\n            if (yData.calibration == true) {\r\n              context.moveTo(tStartRight, pos);\r\n              context.lineTo(tStartRight + 3 * opts.pix, pos);\r\n              gapwidth += 3 * opts.pix;\r\n            }\r\n            switch (textAlign) {\r\n              case \"left\":\r\n                context.setTextAlign('left');\r\n                tmpstrat = tStartRight + gapwidth\r\n                break;\r\n              case \"right\":\r\n                context.setTextAlign('right');\r\n                tmpstrat = tStartRight + yAxisWidth.width\r\n                break;\r\n              default:\r\n                context.setTextAlign('center');\r\n                tmpstrat = tStartRight + yAxisWidth.width / 2\r\n            }\r\n            context.fillText(String(item), tmpstrat, pos + yAxisFontSize / 2 - 3 * opts.pix);\r\n          } else if (yAxisWidth.position == 'center') {\r\n            //画刻度线\r\n            if (yData.calibration == true) {\r\n              context.moveTo(tStartCenter, pos);\r\n              context.lineTo(tStartCenter - 3 * opts.pix, pos);\r\n              gapwidth += 3 * opts.pix;\r\n            }\r\n            //画文字\r\n            switch (textAlign) {\r\n              case \"left\":\r\n                context.setTextAlign('left');\r\n                tmpstrat = tStartCenter - yAxisWidth.width\r\n                break;\r\n              case \"right\":\r\n                context.setTextAlign('right');\r\n                tmpstrat = tStartCenter - gapwidth\r\n                break;\r\n              default:\r\n                context.setTextAlign('center');\r\n                tmpstrat = tStartCenter - yAxisWidth.width / 2\r\n            }\r\n            context.fillText(String(item), tmpstrat, pos + yAxisFontSize / 2 - 3 * opts.pix);\r\n          }\r\n          context.closePath();\r\n          context.stroke();\r\n          context.setTextAlign('left');\r\n        });\r\n        //画Y轴轴线\r\n        if (yData.axisLine !== false) {\r\n          context.beginPath();\r\n          context.setStrokeStyle(yData.axisLineColor || '#cccccc');\r\n          context.setLineWidth(1 * opts.pix);\r\n          if (yAxisWidth.position == 'left') {\r\n            context.moveTo(tStartLeft, opts.height - opts.area[2]);\r\n            context.lineTo(tStartLeft, opts.area[0]);\r\n          } else if (yAxisWidth.position == 'right') {\r\n            context.moveTo(tStartRight, opts.height - opts.area[2]);\r\n            context.lineTo(tStartRight, opts.area[0]);\r\n          } else if (yAxisWidth.position == 'center') {\r\n            context.moveTo(tStartCenter, opts.height - opts.area[2]);\r\n            context.lineTo(tStartCenter, opts.area[0]);\r\n          }\r\n          context.stroke();\r\n        }\r\n        //画Y轴标题\r\n        if (opts.yAxis.showTitle) {\r\n          let titleFontSize = yData.titleFontSize * opts.pix || config.fontSize;\r\n          let title = yData.title;\r\n          context.beginPath();\r\n          context.setFontSize(titleFontSize);\r\n          context.setFillStyle(yData.titleFontColor || opts.fontColor);\r\n          if (yAxisWidth.position == 'left') {\r\n            context.fillText(title, tStartLeft - measureText(title, titleFontSize, context) / 2 + (yData.titleOffsetX || 0), opts.area[0] - (10 - (yData.titleOffsetY || 0)) * opts.pix);\r\n          } else if (yAxisWidth.position == 'right') {\r\n            context.fillText(title, tStartRight - measureText(title, titleFontSize, context) / 2 + (yData.titleOffsetX || 0), opts.area[0] - (10 - (yData.titleOffsetY || 0)) * opts.pix);\r\n          } else if (yAxisWidth.position == 'center') {\r\n            context.fillText(title, tStartCenter - measureText(title, titleFontSize, context) / 2 + (yData.titleOffsetX || 0), opts.area[0] - (10 - (yData.titleOffsetY || 0)) * opts.pix);\r\n          }\r\n          context.closePath();\r\n          context.stroke();\r\n        }\r\n        if (yAxisWidth.position == 'left') {\r\n          tStartLeft -= (yAxisWidth.width + opts.yAxis.padding * opts.pix);\r\n        } else {\r\n          tStartRight += yAxisWidth.width + opts.yAxis.padding * opts.pix;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction drawLegend(series, opts, config, context, chartData) {\r\n  if (opts.legend.show === false) {\r\n    return;\r\n  }\r\n  let legendData = chartData.legendData;\r\n  let legendList = legendData.points;\r\n  let legendArea = legendData.area;\r\n  let padding = opts.legend.padding * opts.pix;\r\n  let fontSize = opts.legend.fontSize * opts.pix;\r\n  let shapeWidth = 15 * opts.pix;\r\n  let shapeRight = 5 * opts.pix;\r\n  let itemGap = opts.legend.itemGap * opts.pix;\r\n  let lineHeight = Math.max(opts.legend.lineHeight * opts.pix, fontSize);\r\n  //画背景及边框\r\n  context.beginPath();\r\n  context.setLineWidth(opts.legend.borderWidth * opts.pix);\r\n  context.setStrokeStyle(opts.legend.borderColor);\r\n  context.setFillStyle(opts.legend.backgroundColor);\r\n  context.moveTo(legendArea.start.x, legendArea.start.y);\r\n  context.rect(legendArea.start.x, legendArea.start.y, legendArea.width, legendArea.height);\r\n  context.closePath();\r\n  context.fill();\r\n  context.stroke();\r\n  legendList.forEach(function(itemList, listIndex) {\r\n    let width = 0;\r\n    let height = 0;\r\n    width = legendData.widthArr[listIndex];\r\n    height = legendData.heightArr[listIndex];\r\n    let startX = 0;\r\n    let startY = 0;\r\n    if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\r\n      switch (opts.legend.float) {\r\n        case 'left':\r\n          startX = legendArea.start.x + padding;\r\n        break;\r\n        case 'right':\r\n          startX = legendArea.start.x + legendArea.width - width;\r\n        break;\r\n        default:\r\n        startX = legendArea.start.x + (legendArea.width - width) / 2;\r\n      }\r\n      startY = legendArea.start.y + padding + listIndex * lineHeight;\r\n    } else {\r\n      if (listIndex == 0) {\r\n        width = 0;\r\n      } else {\r\n        width = legendData.widthArr[listIndex - 1];\r\n      }\r\n      startX = legendArea.start.x + padding + width;\r\n      startY = legendArea.start.y + padding + (legendArea.height - height) / 2;\r\n    }\r\n    context.setFontSize(config.fontSize);\r\n    for (let i = 0; i < itemList.length; i++) {\r\n      let item = itemList[i];\r\n      item.area = [0, 0, 0, 0];\r\n      item.area[0] = startX;\r\n      item.area[1] = startY;\r\n      item.area[3] = startY + lineHeight;\r\n      context.beginPath();\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.setStrokeStyle(item.show ? item.color : opts.legend.hiddenColor);\r\n      context.setFillStyle(item.show ? item.color : opts.legend.hiddenColor);\r\n      switch (item.legendShape) {\r\n        case 'line':\r\n          context.moveTo(startX, startY + 0.5 * lineHeight - 2 * opts.pix);\r\n          context.fillRect(startX, startY + 0.5 * lineHeight - 2 * opts.pix, 15 * opts.pix, 4 * opts.pix);\r\n          break;\r\n        case 'triangle':\r\n          context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * lineHeight + 5 * opts.pix);\r\n          context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * lineHeight + 5 * opts.pix);\r\n          context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          break;\r\n        case 'diamond':\r\n          context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * lineHeight);\r\n          context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight + 5 * opts.pix);\r\n          context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * lineHeight);\r\n          context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          break;\r\n        case 'circle':\r\n          context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight);\r\n          context.arc(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight, 5 * opts.pix, 0, 2 * Math.PI);\r\n          break;\r\n        case 'rect':\r\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n          break;\r\n        case 'square':\r\n          context.moveTo(startX + 5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.fillRect(startX + 5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix, 10 * opts.pix, 10 * opts.pix);\r\n          break;\r\n        case 'none':\r\n          break;\r\n        default:\r\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n      }\r\n      context.closePath();\r\n      context.fill();\r\n      context.stroke();\r\n      startX += shapeWidth + shapeRight;\r\n      let fontTrans = 0.5 * lineHeight + 0.5 * fontSize - 2;\r\n      const legendText = item.legendText ? item.legendText : item.name;\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.show ? opts.legend.fontColor : opts.legend.hiddenColor);\r\n      context.fillText(legendText, startX, startY + fontTrans);\r\n      context.closePath();\r\n      context.stroke();\r\n      if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\r\n        startX += measureText(legendText, fontSize, context) + itemGap;\r\n        item.area[2] = startX;\r\n      } else {\r\n        item.area[2] = startX + measureText(legendText, fontSize, context) + itemGap;;\r\n        startX -= shapeWidth + shapeRight;\r\n        startY += lineHeight;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawPieDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var pieOption = assign({}, {\r\n    activeOpacity: 0.5,\r\n    activeRadius: 10,\r\n    offsetAngle: 0,\r\n    labelWidth: 15,\r\n    ringWidth: 30,\r\n    customRadius: 0,\r\n    border: false,\r\n    borderWidth: 2,\r\n    borderColor: '#FFFFFF',\r\n    centerColor: '#FFFFFF',\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.type == \"pie\" ? opts.extra.pie : opts.extra.ring);\r\n  var centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  };\r\n  if (config.pieChartLinePadding == 0) {\r\n    config.pieChartLinePadding = pieOption.activeRadius * opts.pix;\r\n  }\r\n\r\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\r\n  radius = radius < 10 ? 10 : radius;\r\n  if (pieOption.customRadius > 0) {\r\n    radius = pieOption.customRadius * opts.pix;\r\n  }\r\n  series = getPieDataPoints(series, radius, process);\r\n  var activeRadius = pieOption.activeRadius * opts.pix;\r\n  pieOption.customColor = fillCustomColor(pieOption.linearType, pieOption.customColor, series, config);\r\n  series = series.map(function(eachSeries) {\r\n    eachSeries._start_ += (pieOption.offsetAngle) * Math.PI / 180;\r\n    return eachSeries;\r\n  });\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    if (opts.tooltip) {\r\n      if (opts.tooltip.index == seriesIndex) {\r\n        context.beginPath();\r\n        context.setFillStyle(hexToRgb(eachSeries.color, pieOption.activeOpacity || 0.5));\r\n        context.moveTo(centerPosition.x, centerPosition.y);\r\n        context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_ + activeRadius, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    }\r\n    context.beginPath();\r\n    context.setLineWidth(pieOption.borderWidth * opts.pix);\r\n    context.lineJoin = \"round\";\r\n    context.setStrokeStyle(pieOption.borderColor);\r\n    var fillcolor = eachSeries.color;\r\n    if (pieOption.linearType == 'custom') {\r\n      var grd;\r\n      if(context.createCircularGradient){\r\n        grd = context.createCircularGradient(centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }else{\r\n        grd = context.createRadialGradient(centerPosition.x, centerPosition.y, 0,centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }\r\n      grd.addColorStop(0, hexToRgb(pieOption.customColor[eachSeries.linearIndex], 1))\r\n      grd.addColorStop(1, hexToRgb(eachSeries.color, 1))\r\n      fillcolor = grd\r\n    }\r\n    context.setFillStyle(fillcolor);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    if (pieOption.border == true) {\r\n      context.stroke();\r\n    }\r\n  });\r\n  if (opts.type === 'ring') {\r\n    var innerPieWidth = radius * 0.6;\r\n    if (typeof pieOption.ringWidth === 'number' && pieOption.ringWidth > 0) {\r\n      innerPieWidth = Math.max(0, radius - pieOption.ringWidth * opts.pix);\r\n    }\r\n    context.beginPath();\r\n    context.setFillStyle(pieOption.centerColor);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    context.arc(centerPosition.x, centerPosition.y, innerPieWidth, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n  }\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    drawPieText(series, opts, config, context, radius, centerPosition);\r\n  }\r\n  if (process === 1 && opts.type === 'ring') {\r\n    drawRingTitle(opts, config, context, centerPosition);\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: series\r\n  };\r\n}\r\n\r\nfunction drawRoseDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var roseOption = assign({}, {\r\n    type: 'area',\r\n    activeOpacity: 0.5,\r\n    activeRadius: 10,\r\n    offsetAngle: 0,\r\n    labelWidth: 15,\r\n    border: false,\r\n    borderWidth: 2,\r\n    borderColor: '#FFFFFF',\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.rose);\r\n  if (config.pieChartLinePadding == 0) {\r\n    config.pieChartLinePadding = roseOption.activeRadius * opts.pix;\r\n  }\r\n  var centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  };\r\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\r\n  radius = radius < 10 ? 10 : radius;\r\n  var minRadius = roseOption.minRadius || radius * 0.5;\r\n  if(radius < minRadius){\r\n    radius = minRadius + 10;\r\n  }\r\n  series = getRoseDataPoints(series, roseOption.type, minRadius, radius, process);\r\n  var activeRadius = roseOption.activeRadius * opts.pix;\r\n  roseOption.customColor = fillCustomColor(roseOption.linearType, roseOption.customColor, series, config);\r\n  series = series.map(function(eachSeries) {\r\n    eachSeries._start_ += (roseOption.offsetAngle || 0) * Math.PI / 180;\r\n    return eachSeries;\r\n  });\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    if (opts.tooltip) {\r\n      if (opts.tooltip.index == seriesIndex) {\r\n        context.beginPath();\r\n        context.setFillStyle(hexToRgb(eachSeries.color, roseOption.activeOpacity || 0.5));\r\n        context.moveTo(centerPosition.x, centerPosition.y);\r\n        context.arc(centerPosition.x, centerPosition.y, activeRadius + eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    }\r\n    context.beginPath();\r\n    context.setLineWidth(roseOption.borderWidth * opts.pix);\r\n    context.lineJoin = \"round\";\r\n    context.setStrokeStyle(roseOption.borderColor);\r\n    var fillcolor = eachSeries.color;\r\n    if (roseOption.linearType == 'custom') {\r\n      var grd;\r\n      if(context.createCircularGradient){\r\n        grd = context.createCircularGradient(centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }else{\r\n        grd = context.createRadialGradient(centerPosition.x, centerPosition.y, 0,centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }\r\n      grd.addColorStop(0, hexToRgb(roseOption.customColor[eachSeries.linearIndex], 1))\r\n      grd.addColorStop(1, hexToRgb(eachSeries.color, 1))\r\n      fillcolor = grd\r\n    }\r\n    context.setFillStyle(fillcolor);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    if (roseOption.border == true) {\r\n      context.stroke();\r\n    }\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    drawPieText(series, opts, config, context, radius, centerPosition);\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: series\r\n  };\r\n}\r\n\r\nfunction drawArcbarDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var arcbarOption = assign({}, {\r\n    startAngle: 0.75,\r\n    endAngle: 0.25,\r\n    type: 'default',\r\n    direction: 'cw',\r\n    lineCap: 'round',\r\n    width: 12 ,\r\n    gap: 2 ,\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.arcbar);\r\n  series = getArcbarDataPoints(series, arcbarOption, process);\r\n  var centerPosition;\r\n  if (arcbarOption.centerX || arcbarOption.centerY) {\r\n    centerPosition = {\r\n      x: arcbarOption.centerX ? arcbarOption.centerX : opts.width / 2,\r\n      y: arcbarOption.centerY ? arcbarOption.centerY : opts.height / 2\r\n    };\r\n  } else {\r\n    centerPosition = {\r\n      x: opts.width / 2,\r\n      y: opts.height / 2\r\n    };\r\n  }\r\n  var radius;\r\n  if (arcbarOption.radius) {\r\n    radius = arcbarOption.radius;\r\n  } else {\r\n    radius = Math.min(centerPosition.x, centerPosition.y);\r\n    radius -= 5 * opts.pix;\r\n    radius -= arcbarOption.width / 2;\r\n  }\r\n  radius = radius < 10 ? 10 : radius;\r\n  arcbarOption.customColor = fillCustomColor(arcbarOption.linearType, arcbarOption.customColor, series, config);\r\n  \r\n  for (let i = 0; i < series.length; i++) {\r\n    let eachSeries = series[i];\r\n    //背景颜色\r\n    context.setLineWidth(arcbarOption.width * opts.pix);\r\n    context.setStrokeStyle(arcbarOption.backgroundColor || '#E9E9E9');\r\n    context.setLineCap(arcbarOption.lineCap);\r\n    context.beginPath();\r\n    if (arcbarOption.type == 'default') {\r\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width * opts.pix + arcbarOption.gap * opts.pix) * i, arcbarOption.startAngle * Math.PI, arcbarOption.endAngle * Math.PI, arcbarOption.direction == 'ccw');\r\n    } else {\r\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width * opts.pix + arcbarOption.gap * opts.pix) * i, 0, 2 * Math.PI, arcbarOption.direction == 'ccw');\r\n    }\r\n    context.stroke();\r\n    //进度条\r\n    var fillColor = eachSeries.color\r\n    if(arcbarOption.linearType == 'custom'){\r\n      var grd = context.createLinearGradient(centerPosition.x - radius, centerPosition.y, centerPosition.x + radius, centerPosition.y);\r\n      grd.addColorStop(1, hexToRgb(arcbarOption.customColor[eachSeries.linearIndex], 1))\r\n      grd.addColorStop(0, hexToRgb(eachSeries.color, 1))\r\n      fillColor = grd;\r\n    }\r\n    context.setLineWidth(arcbarOption.width * opts.pix);\r\n    context.setStrokeStyle(fillColor);\r\n    context.setLineCap(arcbarOption.lineCap);\r\n    context.beginPath();\r\n    context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width * opts.pix + arcbarOption.gap * opts.pix) * i, arcbarOption.startAngle * Math.PI, eachSeries._proportion_ * Math.PI, arcbarOption.direction == 'ccw');\r\n    context.stroke();\r\n  }\r\n  drawRingTitle(opts, config, context, centerPosition);\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: series\r\n  };\r\n}\r\n\r\nfunction drawGaugeDataPoints(categories, series, opts, config, context) {\r\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\r\n  var gaugeOption = assign({}, {\r\n    type: 'default',\r\n    startAngle: 0.75,\r\n    endAngle: 0.25,\r\n    width: 15,\r\n    labelOffset:13,\r\n    splitLine: {\r\n      fixRadius: 0,\r\n      splitNumber: 10,\r\n      width: 15,\r\n      color: '#FFFFFF',\r\n      childNumber: 5,\r\n      childWidth: 5\r\n    },\r\n    pointer: {\r\n      width: 15,\r\n      color: 'auto'\r\n    }\r\n  }, opts.extra.gauge);\r\n  if (gaugeOption.oldAngle == undefined) {\r\n    gaugeOption.oldAngle = gaugeOption.startAngle;\r\n  }\r\n  if (gaugeOption.oldData == undefined) {\r\n    gaugeOption.oldData = 0;\r\n  }\r\n  categories = getGaugeAxisPoints(categories, gaugeOption.startAngle, gaugeOption.endAngle);\r\n  var centerPosition = {\r\n    x: opts.width / 2,\r\n    y: opts.height / 2\r\n  };\r\n  var radius = Math.min(centerPosition.x, centerPosition.y);\r\n  radius -= 5 * opts.pix;\r\n  radius -= gaugeOption.width / 2;\r\n  radius = radius < 10 ? 10 : radius;\r\n  var innerRadius = radius - gaugeOption.width;\r\n  var totalAngle = 0;\r\n  //判断仪表盘的样式：default百度样式，progress新样式\r\n  if (gaugeOption.type == 'progress') {\r\n    //## 第一步画中心圆形背景和进度条背景\r\n    //中心圆形背景\r\n    var pieRadius = radius - gaugeOption.width * 3;\r\n    context.beginPath();\r\n    let gradient = context.createLinearGradient(centerPosition.x, centerPosition.y - pieRadius, centerPosition.x, centerPosition.y + pieRadius);\r\n    //配置渐变填充（起点：中心点向上减半径；结束点中心点向下加半径）\r\n    gradient.addColorStop('0', hexToRgb(series[0].color, 0.3));\r\n    gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\r\n    context.setFillStyle(gradient);\r\n    context.arc(centerPosition.x, centerPosition.y, pieRadius, 0, 2 * Math.PI, false);\r\n    context.fill();\r\n    //画进度条背景\r\n    context.setLineWidth(gaugeOption.width);\r\n    context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\r\n    context.setLineCap('round');\r\n    context.beginPath();\r\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, gaugeOption.endAngle * Math.PI, false);\r\n    context.stroke();\r\n    //## 第二步画刻度线\r\n    if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n      totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n    } else {\r\n      totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n    }\r\n    let splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\r\n    let childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\r\n    let startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\r\n    let endX = -radius - gaugeOption.width - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\r\n    context.save();\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\r\n    let len = gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1;\r\n    let proc = series[0].data * process;\r\n    for (let i = 0; i < len; i++) {\r\n      context.beginPath();\r\n      //刻度线随进度变色\r\n      if (proc > (i / len)) {\r\n        context.setStrokeStyle(hexToRgb(series[0].color, 1));\r\n      } else {\r\n        context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\r\n      }\r\n      context.setLineWidth(3 * opts.pix);\r\n      context.moveTo(startX, 0);\r\n      context.lineTo(endX, 0);\r\n      context.stroke();\r\n      context.rotate(childAngle * Math.PI);\r\n    }\r\n    context.restore();\r\n    //## 第三步画进度条\r\n    series = getGaugeArcbarDataPoints(series, gaugeOption, process);\r\n    context.setLineWidth(gaugeOption.width);\r\n    context.setStrokeStyle(series[0].color);\r\n    context.setLineCap('round');\r\n    context.beginPath();\r\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, series[0]._proportion_ * Math.PI, false);\r\n    context.stroke();\r\n    //## 第四步画指针\r\n    let pointerRadius = radius - gaugeOption.width * 2.5;\r\n    context.save();\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((series[0]._proportion_ - 1) * Math.PI);\r\n    context.beginPath();\r\n    context.setLineWidth(gaugeOption.width / 3);\r\n    let gradient3 = context.createLinearGradient(0, -pointerRadius * 0.6, 0, pointerRadius * 0.6);\r\n    gradient3.addColorStop('0', hexToRgb('#FFFFFF', 0));\r\n    gradient3.addColorStop('0.5', hexToRgb(series[0].color, 1));\r\n    gradient3.addColorStop('1.0', hexToRgb('#FFFFFF', 0));\r\n    context.setStrokeStyle(gradient3);\r\n    context.arc(0, 0, pointerRadius, 0.85 * Math.PI, 1.15 * Math.PI, false);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.setLineWidth(1);\r\n    context.setStrokeStyle(series[0].color);\r\n    context.setFillStyle(series[0].color);\r\n    context.moveTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\r\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2 - 4, 0);\r\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, 4);\r\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\r\n    context.stroke();\r\n    context.fill();\r\n    context.restore();\r\n    //default百度样式\r\n  } else {\r\n    //画背景\r\n    context.setLineWidth(gaugeOption.width);\r\n    context.setLineCap('butt');\r\n    for (let i = 0; i < categories.length; i++) {\r\n      let eachCategories = categories[i];\r\n      context.beginPath();\r\n      context.setStrokeStyle(eachCategories.color);\r\n      context.arc(centerPosition.x, centerPosition.y, radius, eachCategories._startAngle_ * Math.PI, eachCategories._endAngle_ * Math.PI, false);\r\n      context.stroke();\r\n    }\r\n    context.save();\r\n    //画刻度线\r\n    if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n      totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n    } else {\r\n      totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n    }\r\n    let splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\r\n    let childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\r\n    let startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\r\n    let endX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\r\n    let childendX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.childWidth;\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\r\n    for (let i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {\r\n      context.beginPath();\r\n      context.setStrokeStyle(gaugeOption.splitLine.color);\r\n      context.setLineWidth(2 * opts.pix);\r\n      context.moveTo(startX, 0);\r\n      context.lineTo(endX, 0);\r\n      context.stroke();\r\n      context.rotate(splitAngle * Math.PI);\r\n    }\r\n    context.restore();\r\n    context.save();\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\r\n    for (let i = 0; i < gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1; i++) {\r\n      context.beginPath();\r\n      context.setStrokeStyle(gaugeOption.splitLine.color);\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.moveTo(startX, 0);\r\n      context.lineTo(childendX, 0);\r\n      context.stroke();\r\n      context.rotate(childAngle * Math.PI);\r\n    }\r\n    context.restore();\r\n    //画指针\r\n    series = getGaugeDataPoints(series, categories, gaugeOption, process);\r\n    for (let i = 0; i < series.length; i++) {\r\n      let eachSeries = series[i];\r\n      context.save();\r\n      context.translate(centerPosition.x, centerPosition.y);\r\n      context.rotate((eachSeries._proportion_ - 1) * Math.PI);\r\n      context.beginPath();\r\n      context.setFillStyle(eachSeries.color);\r\n      context.moveTo(gaugeOption.pointer.width, 0);\r\n      context.lineTo(0, -gaugeOption.pointer.width / 2);\r\n      context.lineTo(-innerRadius, 0);\r\n      context.lineTo(0, gaugeOption.pointer.width / 2);\r\n      context.lineTo(gaugeOption.pointer.width, 0);\r\n      context.closePath();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFillStyle('#FFFFFF');\r\n      context.arc(0, 0, gaugeOption.pointer.width / 6, 0, 2 * Math.PI, false);\r\n      context.fill();\r\n      context.restore();\r\n    }\r\n    if (opts.dataLabel !== false) {\r\n      drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context);\r\n    }\r\n  }\r\n  //画仪表盘标题，副标题\r\n  drawRingTitle(opts, config, context, centerPosition);\r\n  if (process === 1 && opts.type === 'gauge') {\r\n    opts.extra.gauge.oldAngle = series[0]._proportion_;\r\n    opts.extra.gauge.oldData = series[0].data;\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    innerRadius: innerRadius,\r\n    categories: categories,\r\n    totalAngle: totalAngle\r\n  };\r\n}\r\n\r\nfunction drawRadarDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var radarOption = assign({}, {\r\n    gridColor: '#cccccc',\r\n    gridType: 'radar',\r\n    gridEval:1,\r\n    axisLabel:false,\r\n    axisLabelTofix:0,\r\n    labelShow:true,\r\n    labelColor:'#666666',\r\n    labelPointShow:false,\r\n    labelPointRadius:3,\r\n    labelPointColor:'#cccccc',\r\n    opacity: 0.2,\r\n    gridCount: 3,\r\n    border:false,\r\n    borderWidth:2,\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.radar);\r\n  var coordinateAngle = getRadarCoordinateSeries(opts.categories.length);\r\n  var centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  };\r\n  var xr = (opts.width - opts.area[1] - opts.area[3]) / 2\r\n  var yr = (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  var radius = Math.min(xr - (getMaxTextListLength(opts.categories, config.fontSize, context) + config.radarLabelTextMargin), yr - config.radarLabelTextMargin);\r\n  radius -= config.radarLabelTextMargin * opts.pix;\r\n  radius = radius < 10 ? 10 : radius;\r\n  radius = radarOption.radius ? radarOption.radius : radius;\r\n  // 画分割线\r\n  context.beginPath();\r\n  context.setLineWidth(1 * opts.pix);\r\n  context.setStrokeStyle(radarOption.gridColor);\r\n  coordinateAngle.forEach(function(angle,index) {\r\n    var pos = convertCoordinateOrigin(radius * Math.cos(angle), radius * Math.sin(angle), centerPosition);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    if (index % radarOption.gridEval == 0) {\r\n      context.lineTo(pos.x, pos.y);\r\n    }\r\n  });\r\n  context.stroke();\r\n  context.closePath();\r\n  \r\n  // 画背景网格\r\n  var _loop = function _loop(i) {\r\n    var startPos = {};\r\n    context.beginPath();\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.setStrokeStyle(radarOption.gridColor);\r\n    if (radarOption.gridType == 'radar') {\r\n      coordinateAngle.forEach(function(angle, index) {\r\n        var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(angle), radius /\r\n          radarOption.gridCount * i * Math.sin(angle), centerPosition);\r\n        if (index === 0) {\r\n          startPos = pos;\r\n          context.moveTo(pos.x, pos.y);\r\n        } else {\r\n          context.lineTo(pos.x, pos.y);\r\n        }\r\n      });\r\n      context.lineTo(startPos.x, startPos.y);\r\n    } else {\r\n      var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(1.5), radius / radarOption.gridCount * i * Math.sin(1.5), centerPosition);\r\n      context.arc(centerPosition.x, centerPosition.y, centerPosition.y - pos.y, 0, 2 * Math.PI, false);\r\n    }\r\n    context.stroke();\r\n    context.closePath();\r\n  };\r\n  for (var i = 1; i <= radarOption.gridCount; i++) {\r\n    _loop(i);\r\n  }\r\n  radarOption.customColor = fillCustomColor(radarOption.linearType, radarOption.customColor, series, config);\r\n  var radarDataPoints = getRadarDataPoints(coordinateAngle, centerPosition, radius, series, opts, process);\r\n  radarDataPoints.forEach(function(eachSeries, seriesIndex) {\r\n    // 绘制区域数据\r\n    context.beginPath();\r\n    context.setLineWidth(radarOption.borderWidth * opts.pix);\r\n    context.setStrokeStyle(eachSeries.color);\r\n    \r\n    var fillcolor = hexToRgb(eachSeries.color, radarOption.opacity);\r\n    if (radarOption.linearType == 'custom') {\r\n      var grd;\r\n      if(context.createCircularGradient){\r\n        grd = context.createCircularGradient(centerPosition.x, centerPosition.y, radius)\r\n      }else{\r\n        grd = context.createRadialGradient(centerPosition.x, centerPosition.y, 0,centerPosition.x, centerPosition.y, radius)\r\n      }\r\n      grd.addColorStop(0, hexToRgb(radarOption.customColor[series[seriesIndex].linearIndex], radarOption.opacity))\r\n      grd.addColorStop(1, hexToRgb(eachSeries.color, radarOption.opacity))\r\n      fillcolor = grd\r\n    }\r\n    \r\n    context.setFillStyle(fillcolor);\r\n    eachSeries.data.forEach(function(item, index) {\r\n      if (index === 0) {\r\n        context.moveTo(item.position.x, item.position.y);\r\n      } else {\r\n        context.lineTo(item.position.x, item.position.y);\r\n      }\r\n    });\r\n    context.closePath();\r\n    context.fill();\r\n    if(radarOption.border === true){\r\n      context.stroke();\r\n    }\r\n    context.closePath();\r\n    if (opts.dataPointShape !== false) {\r\n      var points = eachSeries.data.map(function(item) {\r\n        return item.position;\r\n      });\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n  });\r\n  // 画刻度值\r\n  if(radarOption.axisLabel === true){\r\n    const maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));\r\n    const stepLength = radius / radarOption.gridCount;\r\n    const fontSize = opts.fontSize * opts.pix;\r\n    context.setFontSize(fontSize);\r\n    context.setFillStyle(opts.fontColor);\r\n    context.setTextAlign('left');\r\n    for (var i = 0; i < radarOption.gridCount + 1; i++) {\r\n      let label = i * maxData / radarOption.gridCount;\r\n      label = label.toFixed(radarOption.axisLabelTofix);\r\n      context.fillText(String(label), centerPosition.x + 3 * opts.pix, centerPosition.y - i * stepLength + fontSize / 2);\r\n    }\r\n  }\r\n  \r\n  // draw label text\r\n  drawRadarLabel(coordinateAngle, radius, centerPosition, opts, config, context);\r\n  \r\n  // draw dataLabel\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    radarDataPoints.forEach(function(eachSeries, seriesIndex) {\r\n      context.beginPath();\r\n      var fontSize = eachSeries.textSize * opts.pix || config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(eachSeries.textColor || opts.fontColor);\r\n      eachSeries.data.forEach(function(item, index) {\r\n        //如果是中心点垂直的上下点位\r\n        if(Math.abs(item.position.x - centerPosition.x)<2){\r\n          //如果在上面\r\n          if(item.position.y < centerPosition.y){\r\n            context.setTextAlign('center');\r\n            context.fillText(item.value, item.position.x, item.position.y - 4);\r\n          }else{\r\n            context.setTextAlign('center');\r\n            context.fillText(item.value, item.position.x, item.position.y + fontSize + 2);\r\n          }\r\n        }else{\r\n          //如果在左侧\r\n          if(item.position.x < centerPosition.x){\r\n            context.setTextAlign('right');\r\n            context.fillText(item.value, item.position.x - 4, item.position.y + fontSize / 2 - 2);\r\n          }else{\r\n            context.setTextAlign('left');\r\n            context.fillText(item.value, item.position.x + 4, item.position.y + fontSize / 2 - 2);\r\n          }\r\n        }\r\n      });\r\n      context.closePath();\r\n      context.stroke();\r\n    });\r\n    context.setTextAlign('left');\r\n  }\r\n  \r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    angleList: coordinateAngle\r\n  };\r\n}\r\n\r\n// 经纬度转墨卡托\r\nfunction lonlat2mercator(longitude, latitude) {\r\n  var mercator = Array(2);\r\n  var x = longitude * 20037508.34 / 180;\r\n  var y = Math.log(Math.tan((90 + latitude) * Math.PI / 360)) / (Math.PI / 180);\r\n  y = y * 20037508.34 / 180;\r\n  mercator[0] = x;\r\n  mercator[1] = y;\r\n  return mercator;\r\n}\r\n\r\n// 墨卡托转经纬度\r\nfunction mercator2lonlat(longitude, latitude) {\r\n  var lonlat = Array(2)\r\n  var x = longitude / 20037508.34 * 180;\r\n  var y = latitude / 20037508.34 * 180;\r\n  y = 180 / Math.PI * (2 * Math.atan(Math.exp(y * Math.PI / 180)) - Math.PI / 2);\r\n  lonlat[0] = x;\r\n  lonlat[1] = y;\r\n  return lonlat;\r\n}\r\n\r\nfunction getBoundingBox(data) {\r\n  var bounds = {},coords;\r\n  bounds.xMin = 180;\r\n  bounds.xMax = 0;\r\n  bounds.yMin = 90;\r\n  bounds.yMax = 0\r\n  for (var i = 0; i < data.length; i++) {\r\n    var coorda = data[i].geometry.coordinates\r\n    for (var k = 0; k < coorda.length; k++) {\r\n      coords = coorda[k];\r\n      if (coords.length == 1) {\r\n        coords = coords[0]\r\n      }\r\n      for (var j = 0; j < coords.length; j++) {\r\n        var longitude = coords[j][0];\r\n        var latitude = coords[j][1];\r\n        var point = {\r\n          x: longitude,\r\n          y: latitude\r\n        }\r\n        bounds.xMin = bounds.xMin < point.x ? bounds.xMin : point.x;\r\n        bounds.xMax = bounds.xMax > point.x ? bounds.xMax : point.x;\r\n        bounds.yMin = bounds.yMin < point.y ? bounds.yMin : point.y;\r\n        bounds.yMax = bounds.yMax > point.y ? bounds.yMax : point.y;\r\n      }\r\n    }\r\n  }\r\n  return bounds;\r\n}\r\n\r\nfunction coordinateToPoint(latitude, longitude, bounds, scale, xoffset, yoffset) {\r\n  return {\r\n    x: (longitude - bounds.xMin) * scale + xoffset,\r\n    y: (bounds.yMax - latitude) * scale + yoffset\r\n  };\r\n}\r\n\r\nfunction pointToCoordinate(pointY, pointX, bounds, scale, xoffset, yoffset) {\r\n  return {\r\n    x: (pointX - xoffset) / scale + bounds.xMin,\r\n    y: bounds.yMax - (pointY - yoffset) / scale\r\n  };\r\n}\r\n\r\nfunction isRayIntersectsSegment(poi, s_poi, e_poi) {\r\n  if (s_poi[1] == e_poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[1] > poi[1] && e_poi[1] > poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[1] < poi[1] && e_poi[1] < poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[1] == poi[1] && e_poi[1] > poi[1]) {\r\n    return false;\r\n  }\r\n  if (e_poi[1] == poi[1] && s_poi[1] > poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[0] < poi[0] && e_poi[1] < poi[1]) {\r\n    return false;\r\n  }\r\n  let xseg = e_poi[0] - (e_poi[0] - s_poi[0]) * (e_poi[1] - poi[1]) / (e_poi[1] - s_poi[1]);\r\n  if (xseg < poi[0]) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction isPoiWithinPoly(poi, poly, mercator) {\r\n  let sinsc = 0;\r\n  for (let i = 0; i < poly.length; i++) {\r\n    let epoly = poly[i][0];\r\n    if (poly.length == 1) {\r\n      epoly = poly[i][0]\r\n    }\r\n    for (let j = 0; j < epoly.length - 1; j++) {\r\n      let s_poi = epoly[j];\r\n      let e_poi = epoly[j + 1];\r\n      if (mercator) {\r\n        s_poi = lonlat2mercator(epoly[j][0], epoly[j][1]);\r\n        e_poi = lonlat2mercator(epoly[j + 1][0], epoly[j + 1][1]);\r\n      }\r\n      if (isRayIntersectsSegment(poi, s_poi, e_poi)) {\r\n        sinsc += 1;\r\n      }\r\n    }\r\n  }\r\n  if (sinsc % 2 == 1) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction drawMapDataPoints(series, opts, config, context) {\r\n  var mapOption = assign({}, {\r\n    border: true,\r\n    mercator: false,\r\n    borderWidth: 1,\r\n    active:true,\r\n    borderColor: '#666666',\r\n    fillOpacity: 0.6,\r\n    activeBorderColor: '#f04864',\r\n    activeFillColor: '#facc14',\r\n    activeFillOpacity: 1\r\n  }, opts.extra.map);\r\n  var coords, point;\r\n  var data = series;\r\n  var bounds = getBoundingBox(data);\r\n  if (mapOption.mercator) {\r\n    var max = lonlat2mercator(bounds.xMax, bounds.yMax)\r\n    var min = lonlat2mercator(bounds.xMin, bounds.yMin)\r\n    bounds.xMax = max[0]\r\n    bounds.yMax = max[1]\r\n    bounds.xMin = min[0]\r\n    bounds.yMin = min[1]\r\n  }\r\n  var xScale = opts.width / Math.abs(bounds.xMax - bounds.xMin);\r\n  var yScale = opts.height / Math.abs(bounds.yMax - bounds.yMin);\r\n  var scale = xScale < yScale ? xScale : yScale;\r\n  var xoffset = opts.width / 2 - Math.abs(bounds.xMax - bounds.xMin) / 2 * scale;\r\n  var yoffset = opts.height / 2 - Math.abs(bounds.yMax - bounds.yMin) / 2 * scale;\r\n  for (var i = 0; i < data.length; i++) {\r\n    context.beginPath();\r\n    context.setLineWidth(mapOption.borderWidth * opts.pix);\r\n    context.setStrokeStyle(mapOption.borderColor);\r\n    context.setFillStyle(hexToRgb(series[i].color, series[i].fillOpacity||mapOption.fillOpacity));\r\n    if (mapOption.active == true && opts.tooltip) {\r\n      if (opts.tooltip.index == i) {\r\n        context.setStrokeStyle(mapOption.activeBorderColor);\r\n        context.setFillStyle(hexToRgb(mapOption.activeFillColor, mapOption.activeFillOpacity));\r\n      }\r\n    }\r\n    var coorda = data[i].geometry.coordinates\r\n    for (var k = 0; k < coorda.length; k++) {\r\n      coords = coorda[k];\r\n      if (coords.length == 1) {\r\n        coords = coords[0]\r\n      }\r\n      for (var j = 0; j < coords.length; j++) {\r\n        var gaosi = Array(2);\r\n        if (mapOption.mercator) {\r\n          gaosi = lonlat2mercator(coords[j][0], coords[j][1])\r\n        } else {\r\n          gaosi = coords[j]\r\n        }\r\n        point = coordinateToPoint(gaosi[1], gaosi[0], bounds, scale, xoffset, yoffset)\r\n        if (j === 0) {\r\n          context.beginPath();\r\n          context.moveTo(point.x, point.y);\r\n        } else {\r\n          context.lineTo(point.x, point.y);\r\n        }\r\n      }\r\n      context.fill();\r\n      if (mapOption.border == true) {\r\n        context.stroke();\r\n      }\r\n    }\r\n  }\r\n  if (opts.dataLabel == true) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      var centerPoint = data[i].properties.centroid;\r\n      if (centerPoint) {\r\n        if (mapOption.mercator) {\r\n          centerPoint = lonlat2mercator(data[i].properties.centroid[0], data[i].properties.centroid[1])\r\n        }\r\n        point = coordinateToPoint(centerPoint[1], centerPoint[0], bounds, scale, xoffset, yoffset);\r\n        let fontSize = data[i].textSize * opts.pix || config.fontSize;\r\n        let fontColor = data[i].textColor || opts.fontColor;\r\n        if(mapOption.active && mapOption.activeTextColor && opts.tooltip && opts.tooltip.index == i){\r\n          fontColor = mapOption.activeTextColor;\r\n        }\r\n        let text = data[i].properties.name;\r\n        context.beginPath();\r\n        context.setFontSize(fontSize)\r\n        context.setFillStyle(fontColor)\r\n        context.fillText(text, point.x - measureText(text, fontSize, context) / 2, point.y + fontSize / 2);\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    }\r\n  }\r\n  opts.chartData.mapData = {\r\n    bounds: bounds,\r\n    scale: scale,\r\n    xoffset: xoffset,\r\n    yoffset: yoffset,\r\n    mercator: mapOption.mercator\r\n  }\r\n  drawToolTipBridge(opts, config, context, 1);\r\n  context.draw();\r\n}\r\n\r\nfunction normalInt(min, max, iter) {\r\n  iter = iter == 0 ? 1 : iter;\r\n  var arr = [];\r\n  for (var i = 0; i < iter; i++) {\r\n    arr[i] = Math.random();\r\n  };\r\n  return Math.floor(arr.reduce(function(i, j) {\r\n    return i + j\r\n  }) / iter * (max - min)) + min;\r\n};\r\n\r\nfunction collisionNew(area, points, width, height) {\r\n  var isIn = false;\r\n  for (let i = 0; i < points.length; i++) {\r\n    if (points[i].area) {\r\n      if (area[3] < points[i].area[1] || area[0] > points[i].area[2] || area[1] > points[i].area[3] || area[2] < points[i].area[0]) {\r\n        if (area[0] < 0 || area[1] < 0 || area[2] > width || area[3] > height) {\r\n          isIn = true;\r\n          break;\r\n        } else {\r\n          isIn = false;\r\n        }\r\n      } else {\r\n        isIn = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return isIn;\r\n};\r\n\r\nfunction getWordCloudPoint(opts, type, context) {\r\n  let points = opts.series;\r\n  switch (type) {\r\n    case 'normal':\r\n      for (let i = 0; i < points.length; i++) {\r\n        let text = points[i].name;\r\n        let tHeight = points[i].textSize * opts.pix;\r\n        let tWidth = measureText(text, tHeight, context);\r\n        let x, y;\r\n        let area;\r\n        let breaknum = 0;\r\n        while (true) {\r\n          breaknum++;\r\n          x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\r\n          y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\r\n          area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 +\r\n            opts.height / 2\r\n          ];\r\n          let isCollision = collisionNew(area, points, opts.width, opts.height);\r\n          if (!isCollision) break;\r\n          if (breaknum == 1000) {\r\n            area = [-100, -100, -100, -100];\r\n            break;\r\n          }\r\n        };\r\n        points[i].area = area;\r\n      }\r\n      break;\r\n    case 'vertical':\r\n      function Spin() {\r\n        //获取均匀随机值，是否旋转，旋转的概率为（1-0.5）\r\n        if (Math.random() > 0.7) {\r\n          return true;\r\n        } else {\r\n          return false\r\n        };\r\n      };\r\n      for (let i = 0; i < points.length; i++) {\r\n        let text = points[i].name;\r\n        let tHeight = points[i].textSize * opts.pix;\r\n        let tWidth = measureText(text, tHeight, context);\r\n        let isSpin = Spin();\r\n        let x, y, area, areav;\r\n        let breaknum = 0;\r\n        while (true) {\r\n          breaknum++;\r\n          let isCollision;\r\n          if (isSpin) {\r\n            x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\r\n            y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\r\n            area = [y - 5 - tWidth + opts.width / 2, (-x - 5 + opts.height / 2), y + 5 + opts.width / 2, (-x + tHeight + 5 + opts.height / 2)];\r\n            areav = [opts.width - (opts.width / 2 - opts.height / 2) - (-x + tHeight + 5 + opts.height / 2) - 5, (opts.height / 2 - opts.width / 2) + (y - 5 - tWidth + opts.width / 2) - 5, opts.width - (opts.width / 2 - opts.height / 2) - (-x + tHeight + 5 + opts.height / 2) + tHeight, (opts.height / 2 - opts.width / 2) + (y - 5 - tWidth + opts.width / 2) + tWidth + 5];\r\n            isCollision = collisionNew(areav, points, opts.height, opts.width);\r\n          } else {\r\n            x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\r\n            y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\r\n            area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 + opts.height / 2];\r\n            isCollision = collisionNew(area, points, opts.width, opts.height);\r\n          }\r\n          if (!isCollision) break;\r\n          if (breaknum == 1000) {\r\n            area = [-1000, -1000, -1000, -1000];\r\n            break;\r\n          }\r\n        };\r\n        if (isSpin) {\r\n          points[i].area = areav;\r\n          points[i].areav = area;\r\n        } else {\r\n          points[i].area = area;\r\n        }\r\n        points[i].rotate = isSpin;\r\n      };\r\n      break;\r\n  }\r\n  return points;\r\n}\r\n\r\nfunction drawWordCloudDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let wordOption = assign({}, {\r\n    type: 'normal',\r\n    autoColors: true\r\n  }, opts.extra.word);\r\n  if (!opts.chartData.wordCloudData) {\r\n    opts.chartData.wordCloudData = getWordCloudPoint(opts, wordOption.type, context);\r\n  }\r\n  context.beginPath();\r\n  context.setFillStyle(opts.background);\r\n  context.rect(0, 0, opts.width, opts.height);\r\n  context.fill();\r\n  context.save();\r\n  let points = opts.chartData.wordCloudData;\r\n  context.translate(opts.width / 2, opts.height / 2);\r\n  for (let i = 0; i < points.length; i++) {\r\n    context.save();\r\n    if (points[i].rotate) {\r\n      context.rotate(90 * Math.PI / 180);\r\n    }\r\n    let text = points[i].name;\r\n    let tHeight = points[i].textSize * opts.pix;\r\n    let tWidth = measureText(text, tHeight, context);\r\n    context.beginPath();\r\n    context.setStrokeStyle(points[i].color);\r\n    context.setFillStyle(points[i].color);\r\n    context.setFontSize(tHeight);\r\n    if (points[i].rotate) {\r\n      if (points[i].areav[0] > 0) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.strokeText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\r\n          } else {\r\n            context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\r\n          }\r\n        } else {\r\n          context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\r\n        }\r\n      }\r\n    } else {\r\n      if (points[i].area[0] > 0) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.strokeText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\r\n          } else {\r\n            context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\r\n          }\r\n        } else {\r\n          context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\r\n        }\r\n      }\r\n    }\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n  context.restore();\r\n}\r\n\r\nfunction drawFunnelDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let funnelOption = assign({}, {\r\n    type:'funnel',\r\n    activeWidth: 10,\r\n    activeOpacity: 0.3,\r\n    border: false,\r\n    borderWidth: 2,\r\n    borderColor: '#FFFFFF',\r\n    fillOpacity: 1,\r\n    minSize: 0,\r\n    labelAlign: 'right',\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.funnel);\r\n  let eachSpacing = (opts.height - opts.area[0] - opts.area[2]) / series.length;\r\n  let centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.height - opts.area[2]\r\n  };\r\n  let activeWidth = funnelOption.activeWidth * opts.pix;\r\n  let radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - activeWidth, (opts.height - opts.area[0] - opts.area[2]) / 2 - activeWidth);\r\n  let seriesNew = getFunnelDataPoints(series, radius, funnelOption, eachSpacing, process);\r\n  context.save();\r\n  context.translate(centerPosition.x, centerPosition.y);\r\n  funnelOption.customColor = fillCustomColor(funnelOption.linearType, funnelOption.customColor, series, config);\r\n  if(funnelOption.type == 'pyramid'){\r\n    for (let i = 0; i < seriesNew.length; i++) {\r\n      if (i == seriesNew.length -1) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(-activeWidth, -eachSpacing);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, 0);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, 0);\r\n            context.lineTo(activeWidth, -eachSpacing);\r\n            context.lineTo(-activeWidth, -eachSpacing);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + seriesNew[i].radius, centerPosition.y - eachSpacing * i];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, -eachSpacing);\r\n        context.lineTo(-seriesNew[i].radius, 0);\r\n        context.lineTo(seriesNew[i].radius, 0);\r\n        context.lineTo(0, -eachSpacing);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      } else {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(0, 0);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, 0);\r\n            context.lineTo(-seriesNew[i + 1].radius - activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i + 1].radius + activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, 0);\r\n            context.lineTo(0, 0);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + seriesNew[i].radius, centerPosition.y - eachSpacing * i];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, 0);\r\n        context.lineTo(-seriesNew[i].radius, 0);\r\n        context.lineTo(-seriesNew[i + 1].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i + 1].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i].radius, 0);\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      }\r\n      context.translate(0, -eachSpacing)\r\n    }\r\n  }else{\r\n    context.translate(0, - (seriesNew.length - 1) * eachSpacing);\r\n    for (let i = 0; i < seriesNew.length; i++) {\r\n      if (i == seriesNew.length - 1) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(-activeWidth - funnelOption.minSize/2, 0);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, -eachSpacing);\r\n            context.lineTo(activeWidth + funnelOption.minSize/2, 0);\r\n            context.lineTo(-activeWidth - funnelOption.minSize/2, 0);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing, centerPosition.x + seriesNew[i].radius, centerPosition.y ];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, 0);\r\n        context.lineTo(-funnelOption.minSize/2, 0);\r\n        context.lineTo(-seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(funnelOption.minSize/2, 0);\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      } else {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(0, 0);\r\n            context.lineTo(-seriesNew[i + 1].radius - activeWidth, 0);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i + 1].radius + activeWidth, 0);\r\n            context.lineTo(0, 0);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing * (seriesNew.length - i), centerPosition.x + seriesNew[i].radius, centerPosition.y - eachSpacing * (seriesNew.length - i - 1)];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, 0);\r\n        context.lineTo(-seriesNew[i + 1].radius, 0);\r\n        context.lineTo(-seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i + 1].radius, 0);\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      }\r\n      context.translate(0, eachSpacing)\r\n    }\r\n  }\r\n  \r\n  context.restore();\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    drawFunnelText(seriesNew, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);\r\n  }\r\n  if (process === 1) {\r\n    drawFunnelCenterText(seriesNew, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: seriesNew\r\n  };\r\n}\r\n\r\nfunction drawFunnelText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    if(item.labelShow === false){\r\n      continue;\r\n    }\r\n    let startX, endX, startY, fontSize;\r\n    let text = item.formatter ? item.formatter(item,i,series,opts) : util.toFixed(item._proportion_ * 100) + '%';\r\n    text = item.labelText ? item.labelText : text;\r\n    if (labelAlign == 'right') {\r\n      if (i == series.length -1) {\r\n        startX = (item.funnelArea[2] + centerPosition.x) / 2;\r\n      } else {\r\n        startX = (item.funnelArea[2] + series[i + 1].funnelArea[2]) / 2;\r\n      }\r\n      endX = startX + activeWidth * 2;\r\n      startY = item.funnelArea[1] + eachSpacing / 2;\r\n      fontSize = item.textSize * opts.pix || opts.fontSize * opts.pix;\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.setStrokeStyle(item.color);\r\n      context.setFillStyle(item.color);\r\n      context.beginPath();\r\n      context.moveTo(startX, startY);\r\n      context.lineTo(endX, startY);\r\n      context.stroke();\r\n      context.closePath();\r\n      context.beginPath();\r\n      context.moveTo(endX, startY);\r\n      context.arc(endX, startY, 2 * opts.pix, 0, 2 * Math.PI);\r\n      context.closePath();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.textColor || opts.fontColor);\r\n      context.fillText(text, endX + 5, startY + fontSize / 2 - 2);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n    if (labelAlign == 'left') {\r\n      if (i == series.length -1) {\r\n        startX = (item.funnelArea[0] + centerPosition.x) / 2;\r\n      } else {\r\n        startX = (item.funnelArea[0] + series[i + 1].funnelArea[0]) / 2;\r\n      }\r\n      endX = startX - activeWidth * 2;\r\n      startY = item.funnelArea[1] + eachSpacing / 2;\r\n      fontSize = item.textSize * opts.pix || opts.fontSize * opts.pix;\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.setStrokeStyle(item.color);\r\n      context.setFillStyle(item.color);\r\n      context.beginPath();\r\n      context.moveTo(startX, startY);\r\n      context.lineTo(endX, startY);\r\n      context.stroke();\r\n      context.closePath();\r\n      context.beginPath();\r\n      context.moveTo(endX, startY);\r\n      context.arc(endX, startY, 2, 0, 2 * Math.PI);\r\n      context.closePath();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.textColor || opts.fontColor);\r\n      context.fillText(text, endX - 5 - measureText(text, fontSize, context), startY + fontSize / 2 - 2);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawFunnelCenterText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    let startY, fontSize;\r\n    if (item.centerText) {\r\n      startY = item.funnelArea[1] + eachSpacing / 2;\r\n      fontSize = item.centerTextSize * opts.pix || opts.fontSize * opts.pix;\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.centerTextColor || \"#FFFFFF\");\r\n      context.fillText(item.centerText, centerPosition.x - measureText(item.centerText, fontSize, context) / 2, startY + fontSize / 2 - 2);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction drawCanvas(opts, context) {\r\n  context.save();\r\n  context.translate(0, 0.5);\r\n  context.restore();\r\n  context.draw();\r\n}\r\n\r\nvar Timing = {\r\n  easeIn: function easeIn(pos) {\r\n    return Math.pow(pos, 3);\r\n  },\r\n  easeOut: function easeOut(pos) {\r\n    return Math.pow(pos - 1, 3) + 1;\r\n  },\r\n  easeInOut: function easeInOut(pos) {\r\n    if ((pos /= 0.5) < 1) {\r\n      return 0.5 * Math.pow(pos, 3);\r\n    } else {\r\n      return 0.5 * (Math.pow(pos - 2, 3) + 2);\r\n    }\r\n  },\r\n  linear: function linear(pos) {\r\n    return pos;\r\n  }\r\n};\r\n\r\nfunction Animation(opts) {\r\n  this.isStop = false;\r\n  opts.duration = typeof opts.duration === 'undefined' ? 1000 : opts.duration;\r\n  opts.timing = opts.timing || 'easeInOut';\r\n  var delay = 17;\r\n  function createAnimationFrame() {\r\n    if (typeof setTimeout !== 'undefined') {\r\n      return function(step, delay) {\r\n        setTimeout(function() {\r\n          var timeStamp = +new Date();\r\n          step(timeStamp);\r\n        }, delay);\r\n      };\r\n    } else if (typeof requestAnimationFrame !== 'undefined') {\r\n      return requestAnimationFrame;\r\n    } else {\r\n      return function(step) {\r\n        step(null);\r\n      };\r\n    }\r\n  };\r\n  var animationFrame = createAnimationFrame();\r\n  var startTimeStamp = null;\r\n  var _step = function step(timestamp) {\r\n    if (timestamp === null || this.isStop === true) {\r\n      opts.onProcess && opts.onProcess(1);\r\n      opts.onAnimationFinish && opts.onAnimationFinish();\r\n      return;\r\n    }\r\n    if (startTimeStamp === null) {\r\n      startTimeStamp = timestamp;\r\n    }\r\n    if (timestamp - startTimeStamp < opts.duration) {\r\n      var process = (timestamp - startTimeStamp) / opts.duration;\r\n      var timingFunction = Timing[opts.timing];\r\n      process = timingFunction(process);\r\n      opts.onProcess && opts.onProcess(process);\r\n      animationFrame(_step, delay);\r\n    } else {\r\n      opts.onProcess && opts.onProcess(1);\r\n      opts.onAnimationFinish && opts.onAnimationFinish();\r\n    }\r\n  };\r\n  _step = _step.bind(this);\r\n  animationFrame(_step, delay);\r\n}\r\n\r\nAnimation.prototype.stop = function() {\r\n  this.isStop = true;\r\n};\r\n\r\nfunction drawCharts(type, opts, config, context) {\r\n  var _this = this;\r\n  var series = opts.series;\r\n  //兼容ECharts饼图类数据格式\r\n  if (type === 'pie' || type === 'ring' || type === 'mount' || type === 'rose' || type === 'funnel') {\r\n    series = fixPieSeries(series, opts, config);\r\n  }\r\n  var categories = opts.categories;\r\n  if (type === 'mount') {\r\n    categories = [];\r\n    for (let j = 0; j < series.length; j++) {\r\n      if(series[j].show !== false) categories.push(series[j].name)\r\n    }\r\n    opts.categories = categories;\r\n  }\r\n  series = fillSeries(series, opts, config);\r\n  var duration = opts.animation ? opts.duration : 0;\r\n  _this.animationInstance && _this.animationInstance.stop();\r\n  var seriesMA = null;\r\n  if (type == 'candle') {\r\n    let average = assign({}, opts.extra.candle.average);\r\n    if (average.show) {\r\n      seriesMA = calCandleMA(average.day, average.name, average.color, series[0].data);\r\n      seriesMA = fillSeries(seriesMA, opts, config);\r\n      opts.seriesMA = seriesMA;\r\n    } else if (opts.seriesMA) {\r\n      seriesMA = opts.seriesMA = fillSeries(opts.seriesMA, opts, config);\r\n    } else {\r\n      seriesMA = series;\r\n    }\r\n  } else {\r\n    seriesMA = series;\r\n  }\r\n  /* 过滤掉show=false的series */\r\n  opts._series_ = series = filterSeries(series);\r\n  //重新计算图表区域\r\n  opts.area = new Array(4);\r\n  //复位绘图区域\r\n  for (let j = 0; j < 4; j++) {\r\n    opts.area[j] = opts.padding[j] * opts.pix;\r\n  }\r\n  //通过计算三大区域：图例、X轴、Y轴的大小，确定绘图区域\r\n  var _calLegendData = calLegendData(seriesMA, opts, config, opts.chartData, context),\r\n    legendHeight = _calLegendData.area.wholeHeight,\r\n    legendWidth = _calLegendData.area.wholeWidth;\r\n\r\n  switch (opts.legend.position) {\r\n    case 'top':\r\n      opts.area[0] += legendHeight;\r\n      break;\r\n    case 'bottom':\r\n      opts.area[2] += legendHeight;\r\n      break;\r\n    case 'left':\r\n      opts.area[3] += legendWidth;\r\n      break;\r\n    case 'right':\r\n      opts.area[1] += legendWidth;\r\n      break;\r\n  }\r\n\r\n  let _calYAxisData = {},\r\n    yAxisWidth = 0;\r\n  if (opts.type === 'line' || opts.type === 'column'|| opts.type === 'mount' || opts.type === 'area' || opts.type === 'mix' || opts.type === 'candle' || opts.type === 'scatter'  || opts.type === 'bubble' || opts.type === 'bar') {\r\n      _calYAxisData = calYAxisData(series, opts, config, context);\r\n      yAxisWidth = _calYAxisData.yAxisWidth;\r\n    //如果显示Y轴标题\r\n    if (opts.yAxis.showTitle) {\r\n      let maxTitleHeight = 0;\r\n      for (let i = 0; i < opts.yAxis.data.length; i++) {\r\n        maxTitleHeight = Math.max(maxTitleHeight, opts.yAxis.data[i].titleFontSize ? opts.yAxis.data[i].titleFontSize * opts.pix : config.fontSize)\r\n      }\r\n      opts.area[0] += maxTitleHeight;\r\n    }\r\n    let rightIndex = 0,\r\n      leftIndex = 0;\r\n    //计算主绘图区域左右位置\r\n    for (let i = 0; i < yAxisWidth.length; i++) {\r\n      if (yAxisWidth[i].position == 'left') {\r\n        if (leftIndex > 0) {\r\n          opts.area[3] += yAxisWidth[i].width + opts.yAxis.padding * opts.pix;\r\n        } else {\r\n          opts.area[3] += yAxisWidth[i].width;\r\n        }\r\n        leftIndex += 1;\r\n      } else if (yAxisWidth[i].position == 'right') {\r\n        if (rightIndex > 0) {\r\n          opts.area[1] += yAxisWidth[i].width + opts.yAxis.padding * opts.pix;\r\n        } else {\r\n          opts.area[1] += yAxisWidth[i].width;\r\n        }\r\n        rightIndex += 1;\r\n      }\r\n    }\r\n  } else {\r\n    config.yAxisWidth = yAxisWidth;\r\n  }\r\n  opts.chartData.yAxisData = _calYAxisData;\r\n\r\n  if (opts.categories && opts.categories.length && opts.type !== 'radar' && opts.type !== 'gauge' && opts.type !== 'bar') {\r\n    opts.chartData.xAxisData = getXAxisPoints(opts.categories, opts, config);\r\n    let _calCategoriesData = calCategoriesData(opts.categories, opts, config, opts.chartData.xAxisData.eachSpacing, context),\r\n      xAxisHeight = _calCategoriesData.xAxisHeight,\r\n      angle = _calCategoriesData.angle;\r\n    config.xAxisHeight = xAxisHeight;\r\n    config._xAxisTextAngle_ = angle;\r\n    opts.area[2] += xAxisHeight;\r\n    opts.chartData.categoriesData = _calCategoriesData;\r\n  } else {\r\n    if (opts.type === 'line' || opts.type === 'area' || opts.type === 'scatter' || opts.type === 'bubble' || opts.type === 'bar') {\r\n      opts.chartData.xAxisData = calXAxisData(series, opts, config, context);\r\n      categories = opts.chartData.xAxisData.rangesFormat;\r\n      let _calCategoriesData = calCategoriesData(categories, opts, config, opts.chartData.xAxisData.eachSpacing, context),\r\n        xAxisHeight = _calCategoriesData.xAxisHeight,\r\n        angle = _calCategoriesData.angle;\r\n      config.xAxisHeight = xAxisHeight;\r\n      config._xAxisTextAngle_ = angle;\r\n      opts.area[2] += xAxisHeight;\r\n      opts.chartData.categoriesData = _calCategoriesData;\r\n    } else {\r\n      opts.chartData.xAxisData = {\r\n        xAxisPoints: []\r\n      };\r\n    }\r\n  }\r\n\r\n  //计算右对齐偏移距离\r\n  if (opts.enableScroll && opts.xAxis.scrollAlign == 'right' && opts._scrollDistance_ === undefined) {\r\n    let offsetLeft = 0,\r\n      xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\r\n      startX = opts.chartData.xAxisData.startX,\r\n      endX = opts.chartData.xAxisData.endX,\r\n      eachSpacing = opts.chartData.xAxisData.eachSpacing;\r\n    let totalWidth = eachSpacing * (xAxisPoints.length - 1);\r\n    let screenWidth = endX - startX;\r\n    offsetLeft = screenWidth - totalWidth;\r\n    _this.scrollOption.currentOffset = offsetLeft;\r\n    _this.scrollOption.startTouchX = offsetLeft;\r\n    _this.scrollOption.distance = 0;\r\n    _this.scrollOption.lastMoveTime = 0;\r\n    opts._scrollDistance_ = offsetLeft;\r\n  }\r\n\r\n  if (type === 'pie' || type === 'ring' || type === 'rose') {\r\n    config._pieTextMaxLength_ = opts.dataLabel === false ? 0 : getPieTextMaxLength(seriesMA, config, context, opts);\r\n  }\r\n  \r\n  switch (type) {\r\n    case 'word':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawWordCloudDataPoints(series, opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'map':\r\n      context.clearRect(0, 0, opts.width, opts.height);\r\n      drawMapDataPoints(series, opts, config, context);\r\n      setTimeout(()=>{\r\n        this.uevent.trigger('renderComplete');\r\n      },50)\r\n      break;\r\n    case 'funnel':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.funnelData = drawFunnelDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'line':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawLineDataPoints = drawLineDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawLineDataPoints.xAxisPoints,\r\n            calPoints = _drawLineDataPoints.calPoints,\r\n            eachSpacing = _drawLineDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'scatter':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawScatterDataPoints = drawScatterDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawScatterDataPoints.xAxisPoints,\r\n            calPoints = _drawScatterDataPoints.calPoints,\r\n            eachSpacing = _drawScatterDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'bubble':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawBubbleDataPoints = drawBubbleDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawBubbleDataPoints.xAxisPoints,\r\n            calPoints = _drawBubbleDataPoints.calPoints,\r\n            eachSpacing = _drawBubbleDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'mix':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawMixDataPoints = drawMixDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawMixDataPoints.xAxisPoints,\r\n            calPoints = _drawMixDataPoints.calPoints,\r\n            eachSpacing = _drawMixDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'column':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawColumnDataPoints = drawColumnDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawColumnDataPoints.xAxisPoints,\r\n            calPoints = _drawColumnDataPoints.calPoints,\r\n            eachSpacing = _drawColumnDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'mount':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawMountDataPoints = drawMountDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawMountDataPoints.xAxisPoints,\r\n            calPoints = _drawMountDataPoints.calPoints,\r\n            eachSpacing = _drawMountDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'bar':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawBarDataPoints = drawBarDataPoints(series, opts, config, context, process),\r\n            yAxisPoints = _drawBarDataPoints.yAxisPoints,\r\n            calPoints = _drawBarDataPoints.calPoints,\r\n            eachSpacing = _drawBarDataPoints.eachSpacing;\r\n          opts.chartData.yAxisPoints = yAxisPoints;\r\n          opts.chartData.xAxisPoints = opts.chartData.xAxisData.xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, yAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'area':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawAreaDataPoints = drawAreaDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawAreaDataPoints.xAxisPoints,\r\n            calPoints = _drawAreaDataPoints.calPoints,\r\n            eachSpacing = _drawAreaDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'ring':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'pie':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'rose':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.pieData = drawRoseDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'radar':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.radarData = drawRadarDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'arcbar':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.arcbarData = drawArcbarDataPoints(series, opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'gauge':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.gaugeData = drawGaugeDataPoints(categories, series, opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'candle':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawCandleDataPoints = drawCandleDataPoints(series, seriesMA, opts, config, context, process),\r\n            xAxisPoints = _drawCandleDataPoints.xAxisPoints,\r\n            calPoints = _drawCandleDataPoints.calPoints,\r\n            eachSpacing = _drawCandleDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          if (seriesMA) {\r\n            drawLegend(seriesMA, opts, config, context, opts.chartData);\r\n          } else {\r\n            drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          }\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n  }\r\n}\r\n\r\nfunction uChartsEvent() {\r\n  this.events = {};\r\n}\r\n\r\nuChartsEvent.prototype.addEventListener = function(type, listener) {\r\n  this.events[type] = this.events[type] || [];\r\n  this.events[type].push(listener);\r\n};\r\n\r\nuChartsEvent.prototype.delEventListener = function(type) {\r\n  this.events[type] = [];\r\n};\r\n\r\nuChartsEvent.prototype.trigger = function() {\r\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n  var type = args[0];\r\n  var params = args.slice(1);\r\n  if (!!this.events[type]) {\r\n    this.events[type].forEach(function(listener) {\r\n      try {\r\n        listener.apply(null, params);\r\n      } catch (e) {\r\n          //console.log('[uCharts] '+e);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nvar uCharts = function uCharts(opts) {\r\n  opts.pix = opts.pixelRatio ? opts.pixelRatio : 1;\r\n  opts.fontSize = opts.fontSize ? opts.fontSize : 13;\r\n  opts.fontColor = opts.fontColor ? opts.fontColor : config.fontColor;\r\n  if (opts.background == \"\" || opts.background == \"none\") {\r\n    opts.background = \"#FFFFFF\"\r\n  }\r\n  opts.title = assign({}, opts.title);\r\n  opts.subtitle = assign({}, opts.subtitle);\r\n  opts.duration = opts.duration ? opts.duration : 1000;\r\n  opts.yAxis = assign({}, {\r\n    data: [],\r\n    showTitle: false,\r\n    disabled: false,\r\n    disableGrid: false,\r\n    gridSet: 'number',\r\n    splitNumber: 5,\r\n    gridType: 'solid',\r\n    dashLength: 4 * opts.pix,\r\n    gridColor: '#cccccc',\r\n    padding: 10,\r\n    fontColor: '#666666'\r\n  }, opts.yAxis);\r\n  opts.xAxis = assign({}, {\r\n    rotateLabel: false,\r\n    rotateAngle:45,\r\n    disabled: false,\r\n    disableGrid: false,\r\n    splitNumber: 5,\r\n    calibration:false,\r\n    fontColor: '#666666',\r\n    fontSize: 13,\r\n    lineHeight: 20,\r\n    marginTop: 0,\r\n    gridType: 'solid',\r\n    dashLength: 4,\r\n    scrollAlign: 'left',\r\n    boundaryGap: 'center',\r\n    axisLine: true,\r\n    axisLineColor: '#cccccc',\r\n    titleFontSize: 13,\r\n    titleOffsetY: 0,\r\n    titleOffsetX: 0,\r\n    titleFontColor: '#666666'\r\n  }, opts.xAxis);\r\n  opts.xAxis.scrollPosition = opts.xAxis.scrollAlign;\r\n  opts.legend = assign({}, {\r\n    show: true,\r\n    position: 'bottom',\r\n    float: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    margin: 5,\r\n    itemGap: 10,\r\n    fontSize: opts.fontSize,\r\n    lineHeight: opts.fontSize,\r\n    fontColor: opts.fontColor,\r\n    formatter: {},\r\n    hiddenColor: '#CECECE'\r\n  }, opts.legend);\r\n  opts.extra = assign({\r\n    tooltip:{\r\n      legendShape: 'auto'\r\n    }\r\n  }, opts.extra);\r\n  opts.rotate = opts.rotate ? true : false;\r\n  opts.animation = opts.animation ? true : false;\r\n  opts.rotate = opts.rotate ? true : false;\r\n  opts.canvas2d = opts.canvas2d ? true : false;\r\n  \r\n  let config$$1 = assign({}, config);\r\n  config$$1.color = opts.color ? opts.color : config$$1.color;\r\n  if (opts.type == 'pie') {\r\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.pie.labelWidth * opts.pix || config$$1.pieChartLinePadding * opts.pix;\r\n  }\r\n  if (opts.type == 'ring') {\r\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.ring.labelWidth * opts.pix || config$$1.pieChartLinePadding * opts.pix;\r\n  }\r\n  if (opts.type == 'rose') {\r\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.rose.labelWidth * opts.pix || config$$1.pieChartLinePadding * opts.pix;\r\n  }\r\n  config$$1.pieChartTextPadding = opts.dataLabel === false ? 0 : config$$1.pieChartTextPadding * opts.pix;\r\n\r\n  //屏幕旋转\r\n  config$$1.rotate = opts.rotate;\r\n  if (opts.rotate) {\r\n    let tempWidth = opts.width;\r\n    let tempHeight = opts.height;\r\n    opts.width = tempHeight;\r\n    opts.height = tempWidth;\r\n  }\r\n\r\n  //适配高分屏\r\n  opts.padding = opts.padding ? opts.padding : config$$1.padding;\r\n  config$$1.yAxisWidth = config.yAxisWidth * opts.pix;\r\n  config$$1.fontSize = opts.fontSize * opts.pix;\r\n  config$$1.titleFontSize = config.titleFontSize * opts.pix;\r\n  config$$1.subtitleFontSize = config.subtitleFontSize * opts.pix;\r\n  if(!opts.context){\r\n    throw new Error('[uCharts] 未获取到context！注意：v2.0版本后，需要自行获取canvas的绘图上下文并传入opts.context！');\r\n  }\r\n  this.context = opts.context;\r\n  if (!this.context.setTextAlign) {\r\n    this.context.setStrokeStyle = function(e) {\r\n      return this.strokeStyle = e;\r\n    }\r\n    this.context.setLineWidth = function(e) {\r\n      return this.lineWidth = e;\r\n    }\r\n    this.context.setLineCap = function(e) {\r\n      return this.lineCap = e;\r\n    }\r\n    this.context.setFontSize = function(e) {\r\n      return this.font = e + \"px sans-serif\";\r\n    }\r\n    this.context.setFillStyle = function(e) {\r\n      return this.fillStyle = e;\r\n    }\r\n    this.context.setTextAlign = function(e) {\r\n      return this.textAlign = e;\r\n    }\r\n    this.context.setTextBaseline = function(e) {\r\n      return this.textBaseline = e;\r\n    }\r\n    this.context.setShadow = function(offsetX,offsetY,blur,color) {\r\n      this.shadowColor = color;\r\n      this.shadowOffsetX = offsetX;\r\n      this.shadowOffsetY = offsetY;\r\n      this.shadowBlur = blur;\r\n    }\r\n    this.context.draw = function() {}\r\n  }\r\n  //兼容NVUEsetLineDash\r\n  if(!this.context.setLineDash){\r\n    this.context.setLineDash = function(e) {}\r\n  }\r\n  opts.chartData = {};\r\n  this.uevent = new uChartsEvent();\r\n  this.scrollOption = {\r\n    currentOffset: 0,\r\n    startTouchX: 0,\r\n    distance: 0,\r\n    lastMoveTime: 0\r\n  };\r\n  this.opts = opts;\r\n  this.config = config$$1;\r\n  drawCharts.call(this, opts.type, opts, config$$1, this.context);\r\n};\r\n\r\nuCharts.prototype.updateData = function() {\r\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  this.opts = assign({}, this.opts, data);\r\n  this.opts.updateData = true;\r\n  let scrollPosition = data.scrollPosition || 'current';\r\n  switch (scrollPosition) {\r\n    case 'current':\r\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\r\n      break;\r\n    case 'left':\r\n      this.opts._scrollDistance_ = 0;\r\n      this.scrollOption = {\r\n        currentOffset: 0,\r\n        startTouchX: 0,\r\n        distance: 0,\r\n        lastMoveTime: 0\r\n      };\r\n      break;\r\n    case 'right':\r\n      let _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config, this.context), yAxisWidth = _calYAxisData.yAxisWidth;\r\n      this.config.yAxisWidth = yAxisWidth;\r\n      let offsetLeft = 0;\r\n      let _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config), xAxisPoints = _getXAxisPoints0.xAxisPoints,\r\n        startX = _getXAxisPoints0.startX,\r\n        endX = _getXAxisPoints0.endX,\r\n        eachSpacing = _getXAxisPoints0.eachSpacing;\r\n      let totalWidth = eachSpacing * (xAxisPoints.length - 1);\r\n      let screenWidth = endX - startX;\r\n      offsetLeft = screenWidth - totalWidth;\r\n      this.scrollOption = {\r\n        currentOffset: offsetLeft,\r\n        startTouchX: offsetLeft,\r\n        distance: 0,\r\n        lastMoveTime: 0\r\n      };\r\n      this.opts._scrollDistance_ = offsetLeft;\r\n      break;\r\n  }\r\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\r\n};\r\n\r\nuCharts.prototype.zoom = function() {\r\n  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.opts.xAxis.itemCount;\r\n  if (this.opts.enableScroll !== true) {\r\n    console.log('[uCharts] 请启用滚动条后使用')\r\n    return;\r\n  }\r\n  //当前屏幕中间点\r\n  let centerPoint = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(this.opts.xAxis.itemCount / 2);\r\n  this.opts.animation = false;\r\n  this.opts.xAxis.itemCount = val.itemCount;\r\n  //重新计算x轴偏移距离\r\n  let _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config, this.context),\r\n    yAxisWidth = _calYAxisData.yAxisWidth;\r\n  this.config.yAxisWidth = yAxisWidth;\r\n  let offsetLeft = 0;\r\n  let _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\r\n    xAxisPoints = _getXAxisPoints0.xAxisPoints,\r\n    startX = _getXAxisPoints0.startX,\r\n    endX = _getXAxisPoints0.endX,\r\n    eachSpacing = _getXAxisPoints0.eachSpacing;\r\n  let centerLeft = eachSpacing * centerPoint;\r\n  let screenWidth = endX - startX;\r\n  let MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);\r\n  offsetLeft = screenWidth / 2 - centerLeft;\r\n  if (offsetLeft > 0) {\r\n    offsetLeft = 0;\r\n  }\r\n  if (offsetLeft < MaxLeft) {\r\n    offsetLeft = MaxLeft;\r\n  }\r\n  this.scrollOption = {\r\n    currentOffset: offsetLeft,\r\n    startTouchX: 0,\r\n    distance: 0,\r\n    lastMoveTime: 0\r\n  };\r\n  calValidDistance(this, offsetLeft, this.opts.chartData, this.config, this.opts);\r\n  this.opts._scrollDistance_ = offsetLeft;\r\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\r\n};\r\n\r\nuCharts.prototype.dobuleZoom = function(e) {\n  if (this.opts.enableScroll !== true) {\n    console.log('[uCharts] 请启用滚动条后使用')\n    return;\n  }\r\n  const tcs = e.changedTouches;\n  if (tcs.length < 2) {\n    return;\n  }\n  for (var i = 0; i < tcs.length; i++) {\n    tcs[i].x = tcs[i].x ? tcs[i].x : tcs[i].clientX;\n    tcs[i].y = tcs[i].y ? tcs[i].y : tcs[i].clientY;\n  }\r\n  const ntcs = [getTouches(tcs[0], this.opts, e),getTouches(tcs[1], this.opts, e)]; \r\n  const xlength = Math.abs(ntcs[0].x - ntcs[1].x);\r\n  // 记录初始的两指之间的数据\r\n  if(!this.scrollOption.moveCount){\r\n    let cts0 = {changedTouches:[{x:tcs[0].x,y:this.opts.area[0] / this.opts.pix + 2}]};\r\n    let cts1 = {changedTouches:[{x:tcs[1].x,y:this.opts.area[0] / this.opts.pix + 2}]};\r\n    if(this.opts.rotate){\r\n      cts0 = {changedTouches:[{x:this.opts.height / this.opts.pix - this.opts.area[0] / this.opts.pix - 2,y:tcs[0].y}]};\r\n      cts1 = {changedTouches:[{x:this.opts.height / this.opts.pix - this.opts.area[0] / this.opts.pix - 2,y:tcs[1].y}]};\r\n    }\r\n    const moveCurrent1 = this.getCurrentDataIndex(cts0).index;\r\n    const moveCurrent2 = this.getCurrentDataIndex(cts1).index;\r\n    const moveCount = Math.abs(moveCurrent1 - moveCurrent2);\r\n    this.scrollOption.moveCount = moveCount;\r\n    this.scrollOption.moveCurrent1 = Math.min(moveCurrent1, moveCurrent2);\r\n    this.scrollOption.moveCurrent2 = Math.max(moveCurrent1, moveCurrent2);\r\n    return;\r\n  }\r\n  \r\n  let currentEachSpacing = xlength / this.scrollOption.moveCount;\r\n  let itemCount = (this.opts.width - this.opts.area[1] - this.opts.area[3]) / currentEachSpacing;\r\n  itemCount = itemCount <= 2 ? 2 : itemCount;\r\n  itemCount = itemCount >= this.opts.categories.length ? this.opts.categories.length : itemCount;\n  this.opts.animation = false;\n  this.opts.xAxis.itemCount = itemCount;\n  // 重新计算滚动条偏移距离\n  let offsetLeft = 0;\r\n  let _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\r\n    xAxisPoints = _getXAxisPoints0.xAxisPoints,\r\n    startX = _getXAxisPoints0.startX,\r\n    endX = _getXAxisPoints0.endX,\r\n    eachSpacing = _getXAxisPoints0.eachSpacing;\r\n  let currentLeft = eachSpacing * this.scrollOption.moveCurrent1;\r\n  let screenWidth = endX - startX;\r\n  let MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);\r\n  offsetLeft = -currentLeft+Math.min(ntcs[0].x,ntcs[1].x)-this.opts.area[3]-eachSpacing;\n  if (offsetLeft > 0) {\n    offsetLeft = 0;\n  }\n  if (offsetLeft < MaxLeft) {\n    offsetLeft = MaxLeft;\n  }\n  this.scrollOption.currentOffset= offsetLeft;\n  this.scrollOption.startTouchX= 0;\n  this.scrollOption.distance=0;\n  calValidDistance(this, offsetLeft, this.opts.chartData, this.config, this.opts);\n  this.opts._scrollDistance_ = offsetLeft;\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n}\r\n\r\nuCharts.prototype.stopAnimation = function() {\r\n  this.animationInstance && this.animationInstance.stop();\r\n};\r\n\r\nuCharts.prototype.addEventListener = function(type, listener) {\r\n  this.uevent.addEventListener(type, listener);\r\n};\r\n\r\nuCharts.prototype.delEventListener = function(type) {\r\n  this.uevent.delEventListener(type);\r\n};\r\n\r\nuCharts.prototype.getCurrentDataIndex = function(e) {\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches) {\r\n    let _touches$ = getTouches(touches, this.opts, e);\r\n    if (this.opts.type === 'pie' || this.opts.type === 'ring') {\r\n      return findPieChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.pieData, this.opts);\r\n    } else if (this.opts.type === 'rose') {\r\n      return findRoseChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.pieData, this.opts);\r\n    } else if (this.opts.type === 'radar') {\r\n      return findRadarChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.radarData, this.opts.categories.length);\r\n    } else if (this.opts.type === 'funnel') {\r\n      return findFunnelChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.funnelData);\r\n    } else if (this.opts.type === 'map') {\r\n      return findMapChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts);\r\n    } else if (this.opts.type === 'word') {\r\n      return findWordChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.wordCloudData);\r\n    } else if (this.opts.type === 'bar') {\r\n      return findBarChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));\r\n    } else {\r\n      return findCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\nuCharts.prototype.getLegendDataIndex = function(e) {\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches) {\r\n    let _touches$ = getTouches(touches, this.opts, e);\r\n    return findLegendIndex({\r\n      x: _touches$.x,\r\n      y: _touches$.y\r\n    }, this.opts.chartData.legendData);\r\n  }\r\n  return -1;\r\n};\r\n\r\nuCharts.prototype.touchLegend = function(e) {\r\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches) {\r\n    var _touches$ = getTouches(touches, this.opts, e);\r\n    var index = this.getLegendDataIndex(e);\r\n    if (index >= 0) {\r\n      if (this.opts.type == 'candle') {\r\n        this.opts.seriesMA[index].show = !this.opts.seriesMA[index].show;\r\n      } else {\r\n        this.opts.series[index].show = !this.opts.series[index].show;\r\n      }\r\n      this.opts.animation = option.animation ? true : false;\r\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\r\n      drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\r\n    }\r\n  }\r\n\r\n};\r\n\r\nuCharts.prototype.showToolTip = function(e) {\r\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (!touches) {\r\n    console.log(\"[uCharts] 未获取到event坐标信息\");\r\n  }\r\n  var _touches$ = getTouches(touches, this.opts, e);\r\n  var currentOffset = this.scrollOption.currentOffset;\r\n  var opts = assign({}, this.opts, {\r\n    _scrollDistance_: currentOffset,\r\n    animation: false\r\n  });\r\n  if (this.opts.type === 'line' || this.opts.type === 'area' || this.opts.type === 'column' || this.opts.type === 'scatter' || this.opts.type === 'bubble') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1 || index.length>0) {\r\n      var seriesData = getSeriesDataItem(this.opts.series, index, current.group);\r\n      if (seriesData.length !== 0) {\r\n        var _getToolTipData = getToolTipData(seriesData, this.opts, index, current.group, this.opts.categories, option),\r\n          textList = _getToolTipData.textList,\r\n          offset = _getToolTipData.offset;\r\n        offset.y = _touches$.y;\r\n        opts.tooltip = {\r\n          textList: option.textList !== undefined ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index,\r\n          group: current.group\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'mount') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e).index : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, opts._series_[index]);\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, opts) : seriesData.name + ': ' + seriesData.data,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: opts.chartData.calPoints[index].x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    \r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'bar') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1 || index.length>0) {\r\n      var seriesData = getSeriesDataItem(this.opts.series, index, current.group);\r\n      if (seriesData.length !== 0) {\r\n        var _getToolTipData = getToolTipData(seriesData, this.opts, index, current.group, this.opts.categories, option),\r\n          textList = _getToolTipData.textList,\r\n          offset = _getToolTipData.offset;\r\n        offset.x = _touches$.x;\r\n        opts.tooltip = {\r\n          textList: option.textList !== undefined ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'mix') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1) {\r\n      var currentOffset = this.scrollOption.currentOffset;\r\n      var opts = assign({}, this.opts, {\r\n        _scrollDistance_: currentOffset,\r\n        animation: false\r\n      });\r\n      var seriesData = getSeriesDataItem(this.opts.series, index);\r\n      if (seriesData.length !== 0) {\r\n        var _getMixToolTipData = getMixToolTipData(seriesData, this.opts, index, this.opts.categories, option),\r\n          textList = _getMixToolTipData.textList,\r\n          offset = _getMixToolTipData.offset;\r\n        offset.y = _touches$.y;\r\n        opts.tooltip = {\r\n          textList: option.textList ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'candle') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1) {\r\n      var currentOffset = this.scrollOption.currentOffset;\r\n      var opts = assign({}, this.opts, {\r\n        _scrollDistance_: currentOffset,\r\n        animation: false\r\n      });\r\n      var seriesData = getSeriesDataItem(this.opts.series, index);\r\n      if (seriesData.length !== 0) {\r\n        var _getToolTipData = getCandleToolTipData(this.opts.series[0].data, seriesData, this.opts, index, this.opts.categories, this.opts.extra.candle, option),\r\n          textList = _getToolTipData.textList,\r\n          offset = _getToolTipData.offset;\r\n        offset.y = _touches$.y;\r\n        opts.tooltip = {\r\n          textList: option.textList ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose' || this.opts.type === 'funnel') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, opts._series_[index]);\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, opts) : seriesData.name + ': ' + seriesData.data,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'map') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, this.opts.series[index]);\r\n      seriesData.name = seriesData.properties.name\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, this.opts) : seriesData.name,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    opts.updateData = false;\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'word') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, this.opts.series[index]);\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, this.opts) : seriesData.name,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    opts.updateData = false;\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'radar') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = getSeriesDataItem(this.opts.series, index);\r\n      if (seriesData.length !== 0) {\r\n        var textList = seriesData.map((item) => {\r\n          return {\r\n            text: option.formatter ? option.formatter(item, this.opts.categories[index], index, this.opts) : item.name + ': ' + item.data,\r\n            color: item.color,\r\n            legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? item.legendShape : this.opts.extra.tooltip.legendShape\r\n          };\r\n        });\r\n        var offset = {\r\n          x: _touches$.x,\r\n          y: _touches$.y\r\n        };\r\n        opts.tooltip = {\r\n          textList: option.textList ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n};\r\n\r\nuCharts.prototype.translate = function(distance) {\r\n  this.scrollOption = {\r\n    currentOffset: distance,\r\n    startTouchX: distance,\r\n    distance: 0,\r\n    lastMoveTime: 0\r\n  };\r\n  let opts = assign({}, this.opts, {\r\n    _scrollDistance_: distance,\r\n    animation: false\r\n  });\r\n  drawCharts.call(this, this.opts.type, opts, this.config, this.context);\r\n};\r\n\r\nuCharts.prototype.scrollStart = function(e) {\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  var _touches$ = getTouches(touches, this.opts, e);\r\n  if (touches && this.opts.enableScroll === true) {\r\n    this.scrollOption.startTouchX = _touches$.x;\r\n  }\r\n};\r\n\r\nuCharts.prototype.scroll = function(e) {\r\n  if (this.scrollOption.lastMoveTime === 0) {\r\n    this.scrollOption.lastMoveTime = Date.now();\r\n  }\r\n  let Limit = this.opts.touchMoveLimit || 60;\r\n  let currMoveTime = Date.now();\r\n  let duration = currMoveTime - this.scrollOption.lastMoveTime;\r\n  if (duration < Math.floor(1000 / Limit)) return;\r\n  if (this.scrollOption.startTouchX == 0) return;\r\n  this.scrollOption.lastMoveTime = currMoveTime;\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches && this.opts.enableScroll === true) {\r\n    var _touches$ = getTouches(touches, this.opts, e);\r\n    var _distance;\r\n    _distance = _touches$.x - this.scrollOption.startTouchX;\r\n    var currentOffset = this.scrollOption.currentOffset;\r\n    var validDistance = calValidDistance(this, currentOffset + _distance, this.opts.chartData, this.config, this.opts);\r\n    this.scrollOption.distance = _distance = validDistance - currentOffset;\r\n    var opts = assign({}, this.opts, {\r\n      _scrollDistance_: currentOffset + _distance,\r\n      animation: false\r\n    });\r\n\t\tthis.opts = opts;\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n    return currentOffset + _distance;\r\n  }\r\n};\r\n\r\nuCharts.prototype.scrollEnd = function(e) {\r\n  if (this.opts.enableScroll === true) {\r\n    var _scrollOption = this.scrollOption,\r\n      currentOffset = _scrollOption.currentOffset,\r\n      distance = _scrollOption.distance;\r\n    this.scrollOption.currentOffset = currentOffset + distance;\r\n    this.scrollOption.distance = 0;\r\n    this.scrollOption.moveCount = 0;\r\n  }\r\n};\r\n\r\nexport default uCharts;"],"names":["r","g","b","config","angle","points","i","fixAngle","opts","radius","height","ranges","minRange","maxRange","splitPointList","ctrlPoint","_loop","pos","isCollision","delay","uCharts","uni"],"mappings":"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"}