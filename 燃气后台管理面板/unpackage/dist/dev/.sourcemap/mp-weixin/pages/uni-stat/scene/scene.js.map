{"version":3,"file":"scene.js","sources":["pages/uni-stat/scene/scene.vue","../../../../微信开发者工具/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXNcdW5pLXN0YXRcc2NlbmVcc2NlbmUudnVl"],"sourcesContent":["<template>\n\t<!-- 对应页面：场景值（小程序）  -->\r\n\t<view class=\"fix-top-window\">\r\n\t\t<view class=\"uni-header\">\r\n\t\t\t<uni-stat-breadcrumb class=\"uni-stat-breadcrumb-on-phone\" />\r\n\t\t\t<view class=\"uni-group\">\r\n\t\t\t\t<view class=\"uni-sub-title hide-on-phone\">\r\n\t\t\t\t\t小程序平台有效。用户打开小程序时的场景，如通过扫描二维码打开小程序，场景为二维码。注意：部分平台可能获取不到场景值，如支付宝小程序</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"uni-container\">\r\n\t\t\t<view class=\"uni-stat--x flex p-1015\">\n\t\t\t\t<view class=\"uni-stat--app-select\">\n\t\t\t\t\t<uni-data-select collection=\"opendb-app-list\" field=\"appid as value, name as text\" orderby=\"text asc\" :defItem=\"1\" label=\"应用选择\" v-model=\"query.appid\" :clear=\"false\" />\r\n\t\t\t\t\t<uni-data-select collection=\"opendb-app-versions\" :where=\"versionQuery\" class=\"ml-m\" field=\"_id as value, version as text, uni_platform as label, create_date as date\" format=\"{label} - {text}\" orderby=\"date desc\" label=\"版本选择\" v-model=\"query.version_id\" />\n\t\t\t\t</view>\r\n\t\t\t</view>\n\t\t\t<view class=\"uni-stat--x flex\">\n\t\t\t\t<uni-stat-tabs label=\"日期选择\" :current=\"currentDateTab\" mode=\"date\" @change=\"changeTimeRange\" />\n\t\t\t\t<uni-datetime-picker type=\"datetimerange\" :end=\"new Date().getTime()\" v-model=\"query.start_time\"\n\t\t\t\t\treturnType=\"timestamp\" :clearIcon=\"false\" class=\"uni-stat-datetime-picker\"\n\t\t\t\t\t:class=\"{'uni-stat__actived': currentDateTab < 0 && !!query.start_time.length}\"\n\t\t\t\t\t@change=\"useDatetimePicker\" />\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x\">\r\n\t\t\t\t<uni-stat-tabs label=\"平台选择\" type=\"boldLine\" mode=\"platform-scene\" :all=\"false\" v-model=\"query.platform_id\" @change=\"changePlatform\" />\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x\" style=\"padding: 15px 0;\">\r\n\t\t\t\t<uni-stat-panel :items=\"panelData\" class=\"uni-stat-panel\" />\r\n\t\t\t\t<uni-stat-tabs type=\"box\" v-model=\"chartTab\" :tabs=\"chartTabs\" class=\"mb-l\" @change=\"changeChartTab\" />\r\n\t\t\t\t<view class=\"uni-charts-box\" style=\"height: 400px;\">\r\n\t\t\t\t\t<qiun-data-charts type=\"area\" :chartData=\"chartData\" echartsH5 echartsApp tooltipFormat=\"tooltipCustom\" :errorMessage=\"errorMessage\"/>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\r\n\t\t\t<view class=\"uni-stat--x p-m\">\r\n\t\t\t\t<uni-stat-table :data=\"tableData\" :filedsMap=\"fieldsMap.slice(0, fieldsMap.length-1)\"\r\n\t\t\t\t\t:loading=\"loading\" />\r\n\t\t\t\t<view class=\"uni-pagination-box\">\r\n\t\t\t\t\t<uni-pagination show-icon show-page-size :page-size=\"options.pageSize\"\r\n\t\t\t\t\t\t:current=\"options.pageCurrent\" :total=\"options.total\" @change=\"changePageCurrent\"\r\n\t\t\t\t\t\t@pageSizeChange=\"changePageSize\" />\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- #ifndef H5 -->\r\n\t\t<fix-window />\r\n\t\t<!-- #endif -->\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tmapfields,\r\n\t\tstringifyQuery,\r\n\t\tstringifyField,\r\n\t\tstringifyGroupField,\r\n\t\tmaxDeltaDay,\r\n\t\tgetTimeOfSomeDayAgo,\r\n\t\tdivision,\r\n\t\tformat,\r\n\t\tformatDate,\r\n\t\tgetFieldTotal,\r\n\t\tdebounce\r\n\t} from '@/js_sdk/uni-stat/util.js'\r\n\timport fieldsMap from './fieldsMap.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tfieldsMap,\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tdimension: \"hour\",\r\n\t\t\t\t\tappid: '',\r\n\t\t\t\t\tplatform_id: '',\r\n\t\t\t\t\tuni_platform: '',\r\n\t\t\t\t\tversion_id: '',\r\n\t\t\t\t\tstart_time: [],\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tpageSize: 20,\r\n\t\t\t\t\tpageCurrent: 1, // 当前页\r\n\t\t\t\t\ttotal: 0, // 数据总量\r\n\t\t\t\t},\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcurrentDateTab: 1,\r\n\t\t\t\ttableData: [],\r\n\t\t\t\tpanelData: fieldsMap.filter(f => f.hasOwnProperty('value')),\r\n\t\t\t\tchartData: {},\r\n\t\t\t\tchartTab: 'new_device_count',\n\t\t\t\terrorMessage: \"\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tchartTabs() {\r\n\t\t\t\tconst tabs = []\r\n\t\t\t\tfieldsMap.forEach(item => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tfield: _id,\r\n\t\t\t\t\t\ttitle: name\r\n\t\t\t\t\t} = item\r\n\t\t\t\t\tconst isTab = item.hasOwnProperty('value')\r\n\t\t\t\t\tif (_id && name && isTab) {\r\n\t\t\t\t\t\ttabs.push({\r\n\t\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn tabs\r\n\t\t\t},\r\n\r\n\t\t\tqueryStr() {\r\n\t\t\t\treturn stringifyQuery(this.query, true)\r\n\t\t\t},\r\n\t\t\tdimension() {\r\n\t\t\t\tif (maxDeltaDay(this.query.start_time, 1)) {\r\n\t\t\t\t\treturn 'hour'\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 'day'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tversionQuery() {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tappid,\r\n\t\t\t\t\tuni_platform\r\n\t\t\t\t} = this.query\r\n\t\t\t\tconst query = stringifyQuery({\r\n\t\t\t\t\tappid,\r\n\t\t\t\t\tuni_platform,\r\n\t\t\t\t\t// type: 'native_app'\r\n\t\t\t\t})\r\n\t\t\t\treturn query\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\n\t\t\tthis.debounceGet = debounce(() => {\n\t\t\t\tthis.getAllData(this.queryStr);\n\t\t\t}, 300);\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tquery: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\tthis.options.pageCurrent = 1 // 重置分页\r\n\t\t\t\t\tthis.debounceGet()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tuseDatetimePicker() {\r\n\t\t\t\tthis.currentDateTab = -1\r\n\t\t\t},\r\n\t\t\tchangePlatform(id, index, name, item) {\r\n\t\t\t\tthis.query.version_id = 0\r\n\t\t\t\tthis.query.uni_platform = item.code\r\n\t\t\t},\r\n\t\t\tchangeTimeRange(id, index) {\r\n\t\t\t\tthis.currentDateTab = index\r\n\t\t\t\tconst start = getTimeOfSomeDayAgo(id),\r\n\t\t\t\t\tend = getTimeOfSomeDayAgo(0) - 1\r\n\t\t\t\tthis.query.start_time = [start, end]\r\n\t\t\t},\r\n\t\t\tchangePageCurrent(e) {\r\n\t\t\t\tthis.options.pageCurrent = e.current\r\n\t\t\t\tthis.getTabelData(this.queryStr)\r\n\t\t\t},\r\n\r\n\t\t\tchangePageSize(pageSize) {\r\n\t\t\t\tthis.options.pageSize = pageSize\r\n\t\t\t\tthis.options.pageCurrent = 1 // 重置分页\r\n\t\t\t\tthis.getTabelData(this.queryStr)\r\n\t\t\t},\r\n\r\n\t\t\tchangeChartTab(id, index, name) {\r\n\t\t\t\tthis.getChartData(this.queryStr, id, name)\r\n\t\t\t},\r\n\r\n\t\t\tgetAllData(query) {\n\t\t\t\tif (query.indexOf(\"appid\") === -1) {\n\t\t\t\t\tthis.errorMessage = \"请先选择应用\";\n\t\t\t\t\treturn; // 如果appid为空，则不进行查询\n\t\t\t\t}\n\t\t\t\tthis.errorMessage = \"\";\n\t\t\t\tthis.getPanelData(query)\n\t\t\t\tthis.getChartData(query)\r\n\t\t\t\tthis.getTabelData(query)\r\n\t\t\t},\r\n\r\n\t\t\tgetChartData(query, field = this.chartTab) {\r\n\t\t\t\t// this.chartData = {}\r\n\t\t\t\tconst {\r\n\t\t\t\t\tpageCurrent\r\n\t\t\t\t} = this.options\r\n\t\t\t\tquery = JSON.parse(JSON.stringify(this.query))\r\n\t\t\t\tquery.dimension = 'day'\r\n\t\t\t\tlet querystr = stringifyQuery(query, false, ['uni_platform'])\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection('uni-stat-result')\r\n\t\t\t\t\t.where(querystr)\r\n\t\t\t\t\t.field(`${stringifyField(fieldsMap, field)},start_time,channel_id`)\r\n\t\t\t\t\t.groupBy('channel_id,start_time')\r\n\t\t\t\t\t.groupField(stringifyGroupField(fieldsMap, field))\r\n\t\t\t\t\t.orderBy('start_time', 'asc')\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\tconst options = {\r\n\t\t\t\t\t\t\tcategories: [],\r\n\t\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\t\tname: '暂无数据',\r\n\t\t\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst xAxis = options.categories\r\n\t\t\t\t\t\tif (this.dimension === 'hour') {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < 24; ++i) {\r\n\t\t\t\t\t\t\t\tconst hour = i < 10 ? '0' + i : i\r\n\t\t\t\t\t\t\t\tconst x = `${hour}:00 ~ ${hour}:59`\r\n\t\t\t\t\t\t\t\txAxis.push(x)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 将数据中渠道 id 去重\r\n\t\t\t\t\t\tconst hasChannels = []\r\n\t\t\t\t\t\tdata.forEach(item => {\r\n\t\t\t\t\t\t\tif (hasChannels.indexOf(item.channel_id) < 0) {\r\n\t\t\t\t\t\t\t\thasChannels.push(item.channel_id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// 请求所有渠道数据，与 hasChannels 匹配得出 channel_name\r\n\t\t\t\t\t\tlet allChannels = []\r\n\t\t\t\t\t\tthis.getChannels().then(res => {\r\n\t\t\t\t\t\t\tallChannels = res.result.data\r\n\t\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\t\thasChannels.forEach((channel, index) => {\r\n\t\t\t\t\t\t\t\tconst c = allChannels.find(item => item._id === channel)\r\n\t\t\t\t\t\t\t\tconst line = options.series[index] = {\r\n\t\t\t\t\t\t\t\t\tname: c && c.channel_name || '未知',\r\n\t\t\t\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.dimension === 'hour') {\r\n\t\t\t\t\t\t\t\t\tfor (let i = 0; i < 24; ++i) {\r\n\t\t\t\t\t\t\t\t\t\tline.data[i] = 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet mapper = fieldsMap.filter(f => f.field === field)\r\n\t\t\t\t\t\t\t\tmapper = JSON.parse(JSON.stringify(mapper))\r\n\t\t\t\t\t\t\t\tdelete mapper[0].value\r\n\t\t\t\t\t\t\t\tmapper[0].formatter = ''\r\n\t\t\t\t\t\t\t\tfor (const item of data) {\n\t\t\t\t\t\t\t\t\t// 将 item 根据 mapper 计算、格式化\r\n\t\t\t\t\t\t\t\t\tmapfields(mapper, item, item)\r\n\t\t\t\t\t\t\t\t\tlet date = item.start_time\r\n\t\t\t\t\t\t\t\t\tconst x = formatDate(date, this.dimension)\r\n\t\t\t\t\t\t\t\t\tlet y = item[field]\r\n\t\t\t\t\t\t\t\t\tconst dateIndex = xAxis.indexOf(x)\r\n\t\t\t\t\t\t\t\t\tif (channel === item.channel_id) {\r\n\t\t\t\t\t\t\t\t\t\tif (dateIndex < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\txAxis.push(x)\r\n\t\t\t\t\t\t\t\t\t\t\tline.data.push(y)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tline.data[dateIndex] = y\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.chartData = options\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tgetChannels() {\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\treturn db.collection('uni-stat-app-channels')\r\n\t\t\t\t\t.get()\r\n\t\t\t},\r\n\r\n\t\t\tgetTabelData(query) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tpageCurrent\r\n\t\t\t\t} = this.options\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tlet querystr = stringifyQuery(this.query, false, ['uni_platform'])\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection('uni-stat-result')\r\n\t\t\t\t\t.where(querystr)\r\n\t\t\t\t\t.field(`${stringifyField(fieldsMap)},appid, channel_id`)\r\n\t\t\t\t\t.groupBy('appid, channel_id')\r\n\t\t\t\t\t.groupField(stringifyGroupField(fieldsMap))\r\n\t\t\t\t\t.orderBy('new_device_count', 'desc')\r\n\t\t\t\t\t.skip((pageCurrent - 1) * this.options.pageSize)\r\n\t\t\t\t\t.limit(this.options.pageSize)\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = res.result\r\n\r\n\t\t\t\t\t\tthis.getChannels().then(res => {\r\n\t\t\t\t\t\t\tconst channels = res.result.data\r\n\t\t\t\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\t\t\t\tchannels.forEach(channel => {\r\n\t\t\t\t\t\t\t\t\tif (item.channel_id === channel._id) {\r\n\t\t\t\t\t\t\t\t\t\titem.channel_code = channel.channel_code\r\n\t\t\t\t\t\t\t\t\t\titem.channel_name = channel.channel_name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\t\t\t\tmapfields(fieldsMap, item, item)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.tableData = []\r\n\t\t\t\t\t\t\tthis.options.total = count\r\n\t\t\t\t\t\t\tthis.tableData = data\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tgetPanelData() {\r\n\t\t\t\t// let cloneQuery = JSON.parse(JSON.stringify(this.query))\r\n\t\t\t\t// cloneQuery.dimension = 'day'\r\n\t\t\t\t// let query = stringifyQuery(cloneQuery)\r\n\t\t\t\tlet query = JSON.parse(JSON.stringify(this.query))\r\n\t\t\t\tquery.dimension = 'day'\r\n\t\t\t\tlet querystr = stringifyQuery(query, false, ['uni_platform'])\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tconst subTable = db.collection('uni-stat-result')\r\n\t\t\t\t\t.where(querystr)\r\n\t\t\t\t\t.field(stringifyField(fieldsMap))\r\n\t\t\t\t\t.groupBy('appid')\r\n\t\t\t\t\t.groupField(stringifyGroupField(fieldsMap))\r\n\t\t\t\t\t.orderBy('start_time', 'desc')\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst item = res.result.data[0]\r\n\t\t\t\t\t\titem && (item.total_devices = 0)\r\n\t\t\t\t\t\tgetFieldTotal.call(this, query)\r\n\t\t\t\t\t\tthis.panelData = []\r\n\t\t\t\t\t\tthis.panelData = mapfields(fieldsMap, item)\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tnavTo(id) {\r\n\t\t\t\tconst url = `/pages/uni-stat/overview/overview?id=${id}`\r\n\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\turl\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.uni-stat-panel {\r\n\t\tbox-shadow: unset;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0 15px;\r\n\t}\r\n</style>\n","import MiniProgramPage from 'E:/testProjects/WeChatProjects/testProject-2/燃气后台管理面板/pages/uni-stat/scene/scene.vue'\nwx.createPage(MiniProgramPage)"],"names":["fieldsMap","stringifyQuery","maxDeltaDay","debounce","getTimeOfSomeDayAgo","uniCloud","stringifyField","stringifyGroupField","res","mapfields","formatDate","uni","getFieldTotal"],"mappings":"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"}