{"version":3,"file":"stickiness.js","sources":["pages/uni-stat/device/stickiness/stickiness.vue","../../../../微信开发者工具/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXNcdW5pLXN0YXRcZGV2aWNlXHN0aWNraW5lc3Ncc3RpY2tpbmVzcy52dWU"],"sourcesContent":["<template>\r\n\t<!-- 对应页面：设备统计-粘性  -->\r\n\t<view class=\"fix-top-window\">\r\n\t\t<view class=\"uni-header\">\r\n\t\t\t<uni-stat-breadcrumb class=\"uni-stat-breadcrumb-on-phone\" />\r\n\t\t\t<view class=\"uni-group\">\r\n\t\t\t\t<view class=\"uni-sub-title hide-on-phone\">用户忠诚度用户对您应用的访问深度及访问频次情况。助您了解用户对应用的粘度，尤其在对内容改进后，效果是否有所提升</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"uni-container\">\r\n\t\t\t<view class=\"uni-stat--x flex p-1015\">\n\t\t\t\t<view class=\"uni-stat--app-select\">\n\t\t\t\t\t<uni-data-select collection=\"opendb-app-list\" field=\"appid as value, name as text\" orderby=\"text asc\" :defItem=\"1\" label=\"应用选择\" @change=\"changeAppid\" v-model=\"query.appid\" :clear=\"false\" />\r\n\t\t\t\t\t<uni-data-select collection=\"opendb-app-versions\" :where=\"versionQuery\" class=\"ml-m\" field=\"_id as value, version as text, uni_platform as label, create_date as date\" format=\"{label} - {text}\" orderby=\"date desc\" label=\"版本选择\" v-model=\"query.version_id\" />\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x flex\">\r\n\t\t\t\t<uni-stat-tabs label=\"日期选择\" :current=\"currentDateTab\" mode=\"date\" @change=\"changeTimeRange\" />\r\n\t\t\t\t<uni-datetime-picker type=\"datetimerange\" :end=\"new Date().getTime()\" v-model=\"query.start_time\"\r\n\t\t\t\t\treturnType=\"timestamp\" :clearIcon=\"false\" class=\"uni-stat-datetime-picker\"\r\n\t\t\t\t\t:class=\"{'uni-stat__actived': currentDateTab < 0 && !!query.start_time.length}\"\r\n\t\t\t\t\t@change=\"useDatetimePicker\" />\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x\">\r\n\t\t\t\t<uni-stat-tabs label=\"平台选择\" type=\"boldLine\" mode=\"platform\" v-model=\"query.platform_id\"\r\n\t\t\t\t\t@change=\"changePlatform\" />\r\n\t\t\t\t<uni-data-select ref=\"version-select\" v-if=\"query.platform_id && query.platform_id.indexOf('==') === -1\" collection=\"uni-stat-app-channels\" :where=\"channelQuery\" class=\"p-channel\" field=\"_id as value, channel_name as text\" orderby=\"text asc\" label=\"渠道/场景值选择\" v-model=\"query.channel_id\" />\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x mb-l\" style=\"padding-top: 0;\">\r\n\t\t\t\t<view class=\"mb-m line-bottom\">\r\n\t\t\t\t\t<uni-stat-tabs type=\"boldLine\" :tabs=\"types\" v-model=\"type\"\r\n\t\t\t\t\t\tstyle=\"line-height: 40px; margin-bottom: -17px;\" />\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"p-m\">\r\n\t\t\t\t\t<view class=\"uni-charts-box\">\r\n\t\t\t\t\t\t<qiun-data-charts type=\"pie\" :chartData=\"chartData\" echartsH5 echartsApp :errorMessage=\"errorMessage\"/>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"uni-stat--x p-m\">\r\n\t\t\t\t<uni-stat-table :data=\"tableData\" :filedsMap=\"fieldsMap\" :loading=\"loading\" />\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- #ifndef H5 -->\r\n\t\t<fix-window />\r\n\t\t<!-- #endif -->\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tmapfields,\r\n\t\tstringifyQuery,\r\n\t\tgetTimeOfSomeDayAgo,\r\n\t\tdivision,\r\n\t\tformat,\r\n\t\tdebounce\r\n\t} from '@/js_sdk/uni-stat/util.js'\r\n\timport fieldsMap from './fieldsMap.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tfieldsMap,\r\n\t\t\t\tquery: {\r\n\t\t\t\t\t// dimension: \"hour\",\r\n\t\t\t\t\tappid: '',\r\n\t\t\t\t\tplatform_id: '',\r\n\t\t\t\t\tuni_platform: '',\r\n\t\t\t\t\tversion_id: '',\r\n\t\t\t\t\tchannel_id: '',\r\n\t\t\t\t\tstart_time: [],\r\n\t\t\t\t},\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcurrentDateTab: 1,\r\n\t\t\t\ttableData: [],\r\n\t\t\t\tpanelData: fieldsMap.filter(f => f.hasOwnProperty('value')),\r\n\t\t\t\tchartData: {},\r\n\t\t\t\ttype: 'visit_depth_data',\r\n\t\t\t\ttypes: [{\r\n\t\t\t\t\t_id: 'visit_depth_data',\r\n\t\t\t\t\tname: '访问页数'\r\n\t\t\t\t}, {\r\n\t\t\t\t\t_id: 'duration_data',\r\n\t\t\t\t\tname: '访问时长'\r\n\t\t\t\t}],\r\n\t\t\t\tfield: 'visit_devices',\r\n\t\t\t\tfields: [{\r\n\t\t\t\t\t_id: 'visit_devices',\r\n\t\t\t\t\tname: '访问人数'\r\n\t\t\t\t}, {\r\n\t\t\t\t\t_id: 'visit_times',\r\n\t\t\t\t\tname: '访问次数'\r\n\t\t\t\t}],\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tvisit_depth_data: {\r\n\t\t\t\t\t\tprefix: 'p',\r\n\t\t\t\t\t\ttitle: '页',\r\n\t\t\t\t\t\tvalue: [1, 2, 3, 4, 5, 10]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tduration_data: {\r\n\t\t\t\t\t\tprefix: 's',\r\n\t\t\t\t\t\ttitle: '秒',\r\n\t\t\t\t\t\tvalue: [0, 3, 6, 11, 21, 31, 51, 100]\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tchannelData: [],\r\n\t\t\t\terrorMessage: \"\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tfieldName() {\r\n\t\t\t\treturn this.fields.forEach(item => {\r\n\t\t\t\t\tif (item._id === this.field) {\r\n\t\t\t\t\t\treturn item.name\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tchannelQuery() {\r\n\t\t\t\tconst platform_id = this.query.platform_id\r\n\t\t\t\treturn stringifyQuery({\r\n\t\t\t\t\tplatform_id\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tversionQuery() {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tappid,\r\n\t\t\t\t\tuni_platform\r\n\t\t\t\t} = this.query\r\n\t\t\t\tconst query = stringifyQuery({\r\n\t\t\t\t\tappid,\r\n\t\t\t\t\tuni_platform,\r\n\t\t\t\t})\r\n\t\t\t\treturn query\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.debounceGet = debounce(() => {\r\n\t\t\t\tthis.getAllData(this.query);\r\n\t\t\t}, 300);\r\n\t\t\tthis.getChannelData()\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tquery: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\tthis.debounceGet()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttype() {\r\n\t\t\t\tthis.getAllData(this.query)\r\n\t\t\t},\r\n\t\t\tfield() {\r\n\t\t\t\tthis.getAllData(this.query)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tuseDatetimePicker() {\r\n\t\t\t\tthis.currentDateTab = -1\r\n\t\t\t},\r\n\t\t\tchangeAppid(id) {\r\n\t\t\t\tthis.getChannelData(id, false)\r\n\t\t\t},\r\n\t\t\tchangePlatform(id, index, name, item) {\r\n\t\t\t\tthis.getChannelData(null, id)\r\n\t\t\t\tthis.query.version_id = 0\r\n\t\t\t\tthis.query.uni_platform = item.code\r\n\t\t\t},\r\n\r\n\t\t\tchangeTimeRange(id, index) {\r\n\t\t\t\tthis.currentDateTab = index\r\n\t\t\t\tconst start = getTimeOfSomeDayAgo(id),\r\n\t\t\t\t\tend = getTimeOfSomeDayAgo(0) - 1\r\n\t\t\t\tthis.query.start_time = [start, end]\r\n\t\t\t},\r\n\r\n\t\t\t// 此处 util 中的 groupField 不满足需求，特殊处理 groupField\r\n\t\t\tcreateStr(fields, type = \"visit_depth_data\") {\r\n\t\t\t\tconst l = fields.length\r\n\t\t\t\tconst p = this.options[type].prefix\r\n\t\t\t\tconst value = this.options[type].value\r\n\t\t\t\tconst strArr = value.map(item => {\r\n\t\t\t\t\treturn fields.map(field => {\r\n\t\t\t\t\t\treturn `sum(${type}.${field}.${p + '_' + item}) as ${l > 1 ? field + '_' + p +'_'+item :  p + '_' + item}`\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tconst str = strArr.join()\r\n\t\t\t\treturn str\r\n\t\t\t},\r\n\r\n\t\t\tparseChars(str) {\r\n\t\t\t\tstr = str.split('_')\r\n\t\t\t\tconst option = this.options[this.type]\r\n\t\t\t\tlet chars = option.title\r\n\t\t\t\tconst strArr = option.value.forEach((val, i) => {\r\n\t\t\t\t\tconst next = option.value[i + 1]\r\n\t\t\t\t\tif (val === Number(str[str.length - 1])) {\r\n\t\t\t\t\t\tif (!next) {\r\n\t\t\t\t\t\t\tchars = val + '+' + chars\r\n\t\t\t\t\t\t} else if (val + 1 === next) {\r\n\t\t\t\t\t\t\tchars = val + chars\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchars = val + '-' + (next - 1) + chars\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn chars\r\n\t\t\t},\r\n\r\n\t\t\tgetAllData(query) {\r\n\t\t\t\tif (!query.appid) {\r\n\t\t\t\t\tthis.errorMessage = \"请先选择应用\";\r\n\t\t\t\t\treturn; // 如果appid为空，则不进行查询\r\n\t\t\t\t}\r\n\t\t\t\tthis.errorMessage = \"\";\r\n\t\t\t\tthis.getChartData(query, this.field, this.fieldName)\r\n\t\t\t\tthis.getTabelData(query)\r\n\t\t\t},\r\n\r\n\t\t\tgetChartData(query, field = this.field, name = this.fields.find(f => f._id === this.field).name) {\r\n\t\t\t\t// this.chartData = {}\r\n\t\t\t\tquery = stringifyQuery(query, null, ['uni_platform'])\r\n\t\t\t\tconst groupField = this.createStr([field], this.type)\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection('uni-stat-loyalty-result')\r\n\t\t\t\t\t.where(query)\r\n\t\t\t\t\t.groupBy('appid')\r\n\t\t\t\t\t.groupField(groupField)\r\n\t\t\t\t\t.orderBy('start_time', 'asc')\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet {\r\n\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\tdata = data[0]\r\n\t\t\t\t\t\tconst options = {\r\n\t\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\t\tdata: [],\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (const key in data) {\r\n\t\t\t\t\t\t\tif (key !== 'appid') {\r\n\t\t\t\t\t\t\t\tconst x = this.parseChars(key)\r\n\t\t\t\t\t\t\t\tconst y = data[key]\r\n\t\t\t\t\t\t\t\toptions.series[0].data.push({\r\n\t\t\t\t\t\t\t\t\tname: x,\r\n\t\t\t\t\t\t\t\t\tvalue: y\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.chartData = options\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\tgetTabelData(query) {\r\n\t\t\t\tquery = stringifyQuery(query, null, ['uni_platform'])\r\n\t\t\t\tconst groupField = this.createStr(['visit_devices', 'visit_times'], this.type)\r\n\t\t\t\tthis.fieldsMap[0].title = this.types.find(t => t._id === this.type).name\r\n\t\t\t\tthis.loading = true\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection('uni-stat-loyalty-result')\r\n\t\t\t\t\t.where(query)\r\n\t\t\t\t\t.groupBy('appid')\r\n\t\t\t\t\t.groupField(groupField)\r\n\t\t\t\t\t.orderBy('start_time', 'asc')\r\n\t\t\t\t\t.get({\r\n\t\t\t\t\t\tgetCount: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcount,\r\n\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t} = res.result\r\n\t\t\t\t\t\tconst type = this.type\r\n\t\t\t\t\t\tconst rows = []\r\n\t\t\t\t\t\tlet splitor = this.options[type].prefix\r\n\t\t\t\t\t\tsplitor = `_${splitor}_`\r\n\t\t\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\t\t\tfor (const key in item) {\r\n\t\t\t\t\t\t\t\tif (key !== 'appid') {\r\n\t\t\t\t\t\t\t\t\tconst row = {}\r\n\t\t\t\t\t\t\t\t\tconst keys = key.split(splitor)\r\n\t\t\t\t\t\t\t\t\trow.name = keys[1]\r\n\t\t\t\t\t\t\t\t\trow[keys[0]] = item[key]\r\n\t\t\t\t\t\t\t\t\trows.push(row)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst tableData = []\r\n\t\t\t\t\t\t// 归并得出访问人数 users、访问次数 times 的总和，用于计算占比\r\n\t\t\t\t\t\tconst total = {}\r\n\t\t\t\t\t\tconst reducer = (previousValue, currentValue) => previousValue + currentValue;\r\n\t\t\t\t\t\tlet users = rows.filter(row => row.visit_devices)\r\n\t\t\t\t\t\t\t.map(row => row.visit_devices)\r\n\t\t\t\t\t\tusers = users.length ? users.reduce(reducer) : 0\r\n\t\t\t\t\t\tlet times = rows.filter(row => row.visit_times)\r\n\t\t\t\t\t\t\t.map(row => row.visit_times)\r\n\t\t\t\t\t\ttimes = times.length ? times.reduce(reducer) : 0\r\n\t\t\t\t\t\ttotal.visit_times = times\r\n\t\t\t\t\t\ttotal.visit_devices = users\r\n\t\t\t\t\t\tthis.options[type].value.forEach(val => {\r\n\t\t\t\t\t\t\tconst item = {}\r\n\t\t\t\t\t\t\titem.name = val + 'p'\r\n\t\t\t\t\t\t\trows.forEach(row => {\r\n\t\t\t\t\t\t\t\tif (Number(row.name) === val) {\r\n\t\t\t\t\t\t\t\t\tfor (const key in row) {\r\n\t\t\t\t\t\t\t\t\t\tif (key !== name) {\r\n\t\t\t\t\t\t\t\t\t\t\titem[key] = row[key]\r\n\t\t\t\t\t\t\t\t\t\t\titem['total_' + key] = total[key]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\titem.name = this.parseChars(String(val))\r\n\t\t\t\t\t\t\ttableData.push(item)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tfor (const item of tableData) {\r\n\t\t\t\t\t\t\tmapfields(fieldsMap, item, item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// this.options.total = count\r\n\t\t\t\t\t\tthis.tableData = []\r\n\t\t\t\t\t\tthis.tableData = tableData\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//获取渠道信息\r\n\t\t\tgetChannelData(appid, platform_id) {\r\n\t\t\t\tthis.query.channel_id = ''\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tconst condition = {}\r\n\t\t\t\t//对应应用\r\n\t\t\t\tappid = appid ? appid : this.query.appid\r\n\t\t\t\tif (appid) {\r\n\t\t\t\t\tcondition.appid = appid\r\n\t\t\t\t}\r\n\t\t\t\t//对应平台\r\n\t\t\t\tplatform_id = platform_id ? platform_id : this.query.platform_id\r\n\t\t\t\tif (platform_id) {\r\n\t\t\t\t\tcondition.platform_id = platform_id\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet platformTemp = db.collection('uni-stat-app-platforms')\r\n\t\t\t\t\t.field('_id, name')\r\n\t\t\t\t\t.getTemp()\r\n\r\n\t\t\t\tlet channelTemp = db.collection('uni-stat-app-channels')\r\n\t\t\t\t\t.where(condition)\r\n\t\t\t\t\t.field('_id, channel_name, create_time, platform_id')\r\n\t\t\t\t\t.getTemp()\r\n\r\n\t\t\t\tdb.collection(channelTemp, platformTemp)\r\n\t\t\t\t\t.orderBy('platform_id', 'asc')\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tlet data = res.result.data\r\n\t\t\t\t\t\tlet channels = []\r\n\t\t\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\t\t\tlet channelName\r\n\t\t\t\t\t\t\tfor (let i in data) {\r\n\t\t\t\t\t\t\t\tchannelName = data[i].channel_name ? data[i].channel_name : '默认'\r\n\t\t\t\t\t\t\t\tif (data[i].platform_id.length > 0) {\r\n\t\t\t\t\t\t\t\t\tchannelName = data[i].platform_id[0].name + '-' + channelName\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchannels.push({\r\n\t\t\t\t\t\t\t\t\tvalue: data[i]._id,\r\n\t\t\t\t\t\t\t\t\ttext: channelName\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.channelData = channels\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t\t\t// err.message 错误信息\r\n\t\t\t\t\t\t// err.code 错误码\r\n\t\t\t\t\t}).finally(() => {})\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t.flex {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.label-text {\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #666;\r\n\t\tmargin: auto 0;\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\r\n\t.line-bottom {\r\n\t\tborder-bottom: 2px solid #eee;\r\n\t}\r\n\r\n\t.uni-stat-panel {\r\n\t\tbox-shadow: unset;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0 15px;\r\n\t}\r\n</style>\r\n","import MiniProgramPage from 'E:/testProjects/WeChatProjects/testProject-2/燃气后台管理面板/pages/uni-stat/device/stickiness/stickiness.vue'\nwx.createPage(MiniProgramPage)"],"names":["fieldsMap","stringifyQuery","debounce","name","getTimeOfSomeDayAgo","uniCloud","uni","mapfields"],"mappings":"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"}