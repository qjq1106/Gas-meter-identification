{"version":3,"file":"comparison.js","sources":["pages/uni-stat/user/comparison/comparison.vue","../../../../微信开发者工具/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXNcdW5pLXN0YXRcdXNlclxjb21wYXJpc29uXGNvbXBhcmlzb24udnVl"],"sourcesContent":["<template>\n\t<!-- 对应页面：注册用户统计-平台对比  -->\r\n\t<view class=\"fix-top-window\">\r\n\t\t<view class=\"uni-header\">\r\n\t\t\t<uni-stat-breadcrumb class=\"uni-stat-breadcrumb-on-phone\" />\r\n\t\t\t<view class=\"uni-group hide-on-phone\">\r\n\t\t\t\t<view class=\"uni-sub-title\">多个指标在不同平台数据的占比，可以直观看出各个平台引流的效果</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"uni-container\">\r\n\t\t\t<view class=\"uni-stat--x flex mb-m\" style=\"padding: 0 15px;\">\n\t\t\t\t<view class=\"uni-stat--app-select\">\n\t\t\t\t\t<uni-data-select collection=\"opendb-app-list\" field=\"appid as value, name as text\" orderby=\"text asc\" :defItem=\"1\" label=\"应用选择\" v-model=\"query.appid\" :clear=\"false\" />\r\n\t\t\t\t\t<uni-data-select collection=\"opendb-app-versions\" :where=\"versionQuery\" class=\"ml-m\" field=\"_id as value, version as text, uni_platform as label, create_date as date\" format=\"{label} - {text}\" orderby=\"date desc\" label=\"版本选择\" v-model=\"query.version_id\" />\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"flex\" style=\"flex: 1;\">\r\n\t\t\t\t\t<view class=\"ml-m label-text hide-on-phone\">日期选择:</view>\r\n\t\t\t\t\t<uni-datetime-picker type=\"date\" v-model=\"query.start_time\" returnType=\"timestamp\" :clearIcon=\"false\" class=\"uni-stat-datetime-picker\" :class=\"{'uni-stat__actived': !!query.start_time}\" />\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"dispaly-grid\">\r\n\t\t\t\t<view v-for=\"(item,index) in chartsData\" :key=\"index\" class=\"uni-stat--x uni-charts-box1\">\r\n\t\t\t\t\t<view class=\"label-text\" style=\"margin: 5px 0 20px 0;\">{{chartsData[index].title}}</view>\r\n\t\t\t\t\t<qiun-data-charts type=\"ring\" :chartData=\"chartsData[index]\" echartsH5 echartsApp />\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\r\n\t\t</view>\r\n\r\n\t\t<!-- #ifndef H5 -->\r\n\t\t<fix-window />\r\n\t\t<!-- #endif -->\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tmapfields,\r\n\t\tstringifyQuery,\r\n\t\tgetTimeOfSomeDayAgo,\r\n\t\tdivision,\r\n\t\tformat,\r\n\t\tdebounce\r\n\t} from '@/js_sdk/uni-stat/util.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tquery: {\r\n\t\t\t\t\tdimension: \"day\",\r\n\t\t\t\t\tappid: '',\r\n\t\t\t\t\tversion_id: '',\r\n\t\t\t\t\t// start_time: new Date().getTime(),\r\n\t\t\t\t\tstart_time: getTimeOfSomeDayAgo(0),\r\n\t\t\t\t},\r\n\t\t\t\tplatforms: [],\r\n\t\t\t\tdayChartsData: [],\r\n\t\t\t\tmonChartsData: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\n\t\t\tthis.debounceGet = debounce(() => {\n\t\t\t\tthis.getChartData(this.query)\n\t\t\t\tthis.getRangeCountData(this.query, 'month')\n\t\t\t}, 300);\n\t\t},\r\n\t\twatch: {\r\n\t\t\tquery: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\tthis.debounceGet()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tchartsData() {\r\n\t\t\t\treturn [...this.dayChartsData, ...this.monChartsData]\r\n\t\t\t},\n\t\t\tversionQuery() {\n\t\t\t\tconst {\n\t\t\t\t\tappid\n\t\t\t\t} = this.query\n\t\t\t\tconst query = stringifyQuery({\n\t\t\t\t\tappid\n\t\t\t\t})\n\t\t\t\treturn query\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetChartData(query, type = 'day') {\r\n\t\t\t\tquery = JSON.parse(JSON.stringify(query))\r\n\t\t\t\tconst today = getTimeOfSomeDayAgo(0)\r\n\t\t\t\tif (query.start_time >= today) {\r\n\t\t\t\t\tconst now = new Date().getTime()\r\n\t\t\t\t\tquery.start_time = [today, now]\r\n\t\t\t\t\tquery = stringifyQuery(query, true)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tquery = stringifyQuery(query)\r\n\t\t\t\t}\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection('uni-stat-result')\r\n\t\t\t\t\t.where(query)\r\n\t\t\t\t\t.field(\r\n\t\t\t\t\t\t`active_user_count,new_user_count,total_users,platform_id`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.groupBy(`platform_id`)\r\n\t\t\t\t\t.groupField(\r\n\t\t\t\t\t\t`sum(active_user_count) as ${type}_active_user_count, sum(new_user_count) as ${type}_new_user_count, max(total_users) as ${type}_total_users`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst data = res.result.data\r\n\t\t\t\t\t\tthis.initChartOption(data, 'dayChartsData')\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetRangeCountData(query, type) {\r\n\t\t\t\tquery = stringifyQuery(query)\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tconst sub = db.collection('uni-stat-result')\r\n\t\t\t\t\t.where(query)\r\n\t\t\t\t\t.field(\r\n\t\t\t\t\t\t`active_user_count, new_user_count, platform_id, ${type}(add(new Date(0),start_time), \"Asia/Shanghai\") as ${type},year(add(new Date(0),start_time), \"Asia/Shanghai\") as year`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.groupBy(`year, ${type ? type + ',' : ''}platform_id`)\r\n\t\t\t\t\t.groupField(\r\n\t\t\t\t\t\t`sum(active_user_count) as ${type}_active_user_count, sum(new_user_count) as ${type}_new_user_count`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.orderBy(`year asc, ${type} asc`)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconst data = res.result.data\r\n\t\t\t\t\t\tthis.initChartOption(data, 'monChartsData', 'month')\r\n\t\t\t\t\t})\r\n\r\n\t\t\t},\r\n\r\n\t\t\tinitChartOption(data, goal, type = 'day') {\r\n\t\t\t\tconst db = uniCloud.database()\r\n\t\t\t\tdb.collection('uni-stat-app-platforms').get().then(res => {\r\n\t\t\t\t\tconst options = [{\r\n\t\t\t\t\t\tfield: `${type}_new_user_count`,\r\n\t\t\t\t\t\ttitle: `${type === 'day' ? '日' : '月'}新增用户对比`,\r\n\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tfield: `${type}_active_user_count`,\r\n\t\t\t\t\t\ttitle: `${type === 'day' ? '日' : '月'}活跃用户对比`,\r\n\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}]\r\n\r\n\t\t\t\t\tif (type === 'day') {\r\n\t\t\t\t\t\toptions.unshift({\r\n\t\t\t\t\t\t\tfield: `day_total_users`,\r\n\t\t\t\t\t\t\ttitle: `总用户数对比`,\r\n\t\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\t\tdata: [],\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis[goal] = options\r\n\t\t\t\t\tconst platformsData = res.result.data\r\n\t\t\t\t\tconst platforms = {}\r\n\t\t\t\t\tplatformsData.forEach(p => {\r\n\t\t\t\t\t\tplatforms[p._id] = p.name\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tfor (const chart of this[goal]) {\r\n\t\t\t\t\t\tconst pie = chart.series[0].data\r\n\t\t\t\t\t\tconst p = JSON.parse(JSON.stringify(platforms))\r\n\t\t\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\t\t\tfor (const key in item) {\r\n\t\t\t\t\t\t\t\tif (chart.field === key) {\r\n\t\t\t\t\t\t\t\t\tconst id = item.platform_id\r\n\t\t\t\t\t\t\t\t\tconst slice = {\r\n\t\t\t\t\t\t\t\t\t\tname: p[id],\r\n\t\t\t\t\t\t\t\t\t\tvalue: item[key]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpie.push(slice)\r\n\t\t\t\t\t\t\t\t\tdelete p[id]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (const key in p) {\r\n\t\t\t\t\t\t\tconst slice = {\r\n\t\t\t\t\t\t\t\tname: p[key],\r\n\t\t\t\t\t\t\t\tvalue: 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpie.push(slice)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t.uni-charts-box1 {\r\n\t\tpadding: 10px;\r\n\t\theight: 420px;\r\n\t}\r\n</style>\n","import MiniProgramPage from 'E:/testProjects/WeChatProjects/testProject-2/燃气后台管理面板/pages/uni-stat/user/comparison/comparison.vue'\nwx.createPage(MiniProgramPage)"],"names":["getTimeOfSomeDayAgo","debounce","stringifyQuery","uniCloud"],"mappings":"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"}